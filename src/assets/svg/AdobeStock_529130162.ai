%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Adobe Illustrator Artwork
%%Creator: Adobe Illustrator(R) 26.3
%%For: Maksim Kratkovski
%%CreationDate: 9/7/2022
%%BoundingBox: 0 0 1813 1227
%%HiResBoundingBox: 0 0 1812.7198 1226.4783
%%CropBox: 0 0 1812.7198 1226.4783
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 26.3.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 26.3.1 x1103 R agm 5.512 ct 6.513%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 88 8%%BeginData: 12392 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD82FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFFFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FFFFA8A8FD7BFFA8FFFFA8
%FFFFA87DFD15A8FFFD06A8FF7DFD08A8FD55FFA8A8FFFD047D52FD047DA8
%527D7DA8527D7D7D527D527D52FF527D527D52A8FD047D52A8527D7D7DFD
%26FFAFFFFFFFAFFFFFFFAFFFFFFFAFFD0BFFAFFFFFFFAFFFFFFFAFFFFFFF
%AFFD07FFA8FFFFA8FFFFA8A8A87DA87DA87DA8A87D52A8A8FD097DA8FD05
%7DA8A87DA8FD057DA87DFD21FFA8A1A1A7A1A7A1A7A1A7A1A7A1A7A1A7A1
%A77DA8FD08FFA8A17CA17CA17CA17CA17CA17CA1A8FD06FFA8FFFFFFA8FF
%A8FFA8A8A8FF7DA87DFF7DA8A8FF7DA87DA87DA87DA87DA87DA87DA87DFF
%A87D7DA87DA87DA87D7DA8FD0FFFA8CAA8FD0EFFA8767D76A17C7D76A17C
%7D76A17C7D76A17C7C7CFD08FFA876A7A1A8A1A77DA8A1A77DA776A8FD06
%FFA8FFFFA8FD37FFA1A176A17C7D7CCAFD0CFFA77DA9FD0FFFA1A1FD08FF
%A87DFD0BFFA1A8FD0AFFA8FFFD07A8FFA8FFFD08A8FD21FFA776A1A8FFA8
%FFA8A8767DA8FD0AFFA876FD05FFA8FFFFFFA8FD06FFA876FD08FFA876FD
%0BFF76A8FD06FFA8FFFFA8FFFFA87DA8A8A87DFD04A8FFA8FF7DFD04A8FD
%20FFA77CA8FD08FFA1A1A8FD09FFA1A1FFFFA8FFA8FFA8FFA8FFA8FFA8A8
%FFFFA7A1FD08FFA7A1FD0BFFA1A8FD09FFA8A8FFA8A8A8FFA8A8A8FFA8FF
%A8FFA8FFA8FFA8A8A8FD1EFFA17CFFFFA8A8FF7DA8A8FFA8FFA77CA8FD08
%FFA876FFFFFFA8FD09FFA8FFFFA87CFD08FFA876FD0BFF76A8FD06FFA8FF
%FFA8FD22FFA8A8FD0EFFCA76FFFFFFA8FFFFFFA8FFA8FFFFFFA1A1FD08FF
%A7A1FFFFA8FD0AFFA8A8FFA1A1FD08FFA8A1FD08FFA8FFA8A1A8FD09FFA8
%A8FD1FFFA8FF7DA8A8FFA8FD0BFF7CA7A8FFA8FFA8FFA8FFA8FFA8FFA8FF
%76A8FD07FFA876FFA8A8A8FFA8FFA8FFA8A87DA87DA8A8A17CFD08FFA876
%FFA87DA8FFA8FFA87DA8A876A8FD06FFA8FFFFA8FD1DFFA8FD13FFA87DFF
%FFA8FFFFFFA8FFA8FFFFFFA8FFFFA87DFD07FFA77DAFFFA8FFA8FD05FFA8
%FD05FFA1A1FD08FFA87CA8FF52A8A8A8FFFFA8FFA87CA8FD06FFA8FFFFFF
%A8FD1BFFA8FD0BFFA8FD08FFA77CFFFFFFA8FFA8FFFFFFA8A8A8FFA8FFA8
%7CCAFD06FFA876FD06A8FD05FFA8FFA8FFA8A176FD08FFA876FFFFFFA8FF
%A8FFA8A8FFFF76A8FD06FFA8FFFFA8FD31FF7DA8FFFFA8FFA8FD05FFA8FD
%05FF7CFD07FFA77DA8FFA8FFA8FD05FFA8FFA8A8A8FFA1A1FD08FFA87DA8
%FFA8FFA8A8FFFFA8FFA87DA8FD0AFFA8FD07FFA8CAFD10FFA8FD0FFFA8FD
%06FFA77DFFFD04A8FD05FFA8A8FFA8FFA87DA8FD06FFA876FFFFFFA8FFA8
%FD05FFA8FFA8FFFFA776FD08FFA876FFFFFFA8FFA8FFA8A8FFFF76A8FD06
%FFA8FFFFA8FD08FFA87DA8FD20FFA8FD05FFA1A7FFFFA8FFA8FD05FFA8FD
%05FF7CCFFD06FFA17DA8FFA8FFA8FD05FFA8FFA8A8A8FFA1A1FD08FFA77D
%A8FFA8FFA8A8A8FFA8FFA8A1A8FD09FFA8A8FD09FF7D7DA1FD0BFFA8FD13
%FFA8FD04FFA77DFFFD05A8FD04FFFD04A8FFA87CA8FD06FFA876FFFFA8A8
%FFA8FD04FFA8A8FFA8FFFFA87CFD08FFA876FFFFA8A8FFA8FFA8A8FFFF76
%A8FD06FFA8FFFFA8FD0BFFA8A77DFD23FFA1A7FFFFA8FFA8FD05FFA8FFA8
%A8FFFF7CFD07FFA77DA8FFA8FFA8FD05FFA8FFFFA8A8FFA1A1FD08FFA8A1
%A8FFA8FFA8A8A8FFA8FFA8A1A8FD09FFA8A8FD0CFFCA7CA1A8FD07FFA8FD
%13FFA8FD04FFA77DFFA8FFFFA8A8FD05FFA8FFA8FFA87CA8FD06FFA876FF
%FFA8A8FFA8FD04FFA8A8FFA8FFFFA87CFD08FFA876FFA8A8A8FFA8FFFD04
%A876A8FD06FFA8FFFFA8FD07FFA8FD07FFA8A17DFD1FFF7DA7FFFFA8FFA8
%FD05FFA8FFA8A8A8FF7CCAFD06FFA77CA8FFA8FFA8FD05FFA8FFA8A8A8FF
%7DA1FD08FFA87CA8FFA8FFA8A8FFFFA8FFA87CA8FD06FFA8FFFFFFA8FD05
%FF7DA1FD08FFA87CA1FD05FFA8A17DA87DA77DA87DA77DA77DA77DA87DA7
%7DA87DCAFFFFFFA17DFFA8A8FFA8A8FD04FFA8A8FF52FFA87DA8FD06FFA8
%76FD06A8FD05FFA8FFA8FFA9A176FD08FFA876FFFFA8A8FFA8FFA8A8FFFF
%76A8FD06FFA8FFFFA8FD07FFA8FD09FFA8FD07FFA7FD08A87D7DFD09A8FD
%04FFA1A7FFA87DFFA8FD05FFA8FFA87DA8FF7CCAFD06FFA77DA8FFA8FFA8
%FD05FFA8FFA8A8A8FFA1A1FD08FFA87DA8FFA8FFA8A8FFFFA8FFA87DA8FD
%0AFFA8FD30FFA87DFFA8FFA8FD07FFA8FFFFFFA8A1A8FD06FFA876FFFFFF
%A8FFA8FD05FFA8FFA8FFFFA776FD08FFA876FFFFFFA8FFA8FFA8A8FFFF76
%A8FD06FFA8FFFFA8FD4BFFA17DA8FFA8FFA8FD05FFA8FFA8A8A8FFA1A1FD
%08FFA77DA8FFA8FFA8A8A8FFA8FFA8A1A8FD09FFA8A8FD21FFA8A8FD27FF
%A876FFFFA8A8FFA8FD04FFA8A8FFA8FFFFA87CFD08FFA876FFFFA8A8FFA8
%FFA8FFFFFF76A8FD06FFA8FFFFA8FD22FFA87CA8FD26FFA77DA8FFA8FFA8
%FD05FFA8FFFF7DA8FFA1A1FD08FFA8A1A8FFA8FFA8A8FFA87DFFA8A1A8FD
%09FFA8A8FD0DFFA8FD15FF7D7DA7FD24FFA876FFA8A8FFFFA8FD05FFA8FF
%7DA8FFA87CFD08FFA876FFA87DA8FFA8FF7D7DFFA876A8FD06FFA8FFFFA8
%FD0CFFA876A8FD10FFA1A1A8FFFFFFA8A77DCFFD22FFA17CA8FF7DFFA8FD
%07FFA8FFA8FF7DA1FD08FFA77CA8FFA8FD07FFCA7CA8FD06FFA8FFFFFFA8
%FD09FFA17D7DFFA8FD0EFFA876A7A8A8FD05FFCA7CA1A8FD20FFCFA8FD10
%FFA8A1FD08FFCFA1FD0BFFA1FD07FFA8FFFFA8FD09FF7DA1A8FD0FFFA8A1
%7DFFFFFFA8FD07FFA8A1A7FD05FFA7A8A7A8A7A8A7A8A7A8A7A8A7A8A7A8
%A7A8A7FD3CFFA8FD05FFA8A77CA8FD10FF7D7DA8FD0DFFA8A776FD04FF7C
%767D767C767C767C767C767C767D767C767CA1FD37FFA8FFFFA8FD05FFA1
%A1A1FD07FFA8FD0AFFA8A7FD10FFA7FD04FF7CA8FD04FFA8FFA8FFA8FFA8
%FD05FF76CAFD3AFFA8A8FFFFFF7D7CA8FD08FFA17DFD1BFFA9FFFFFFA87C
%A1FD04FFA8A8A9A8A8A8A9A8FD04FF7CA1FD37FFA8FFFFA8FD04FFA876CF
%FD08FF7DA8FD20FF7CA8FFFFA8FFA8FFA8FFA8FFA8FFA8FFFFFF76CAFD3A
%FFA8A8FD05FF7C7DA8FD07FFA8FD1FFFA87DA1FFA8FD0BFFA8FFFF7CA1FD
%06FF7D767C767C767C767C767C767C7CFD0DFFA8A87D7D767C76A17DA8A8
%FD0BFFA8FFFFA8FD07FFA87D7DFD19FFCAFD0DFF7CA8FFFFA8FFA8FFA8FF
%A8FFA8FFA8A8FFFF7CA8FD06FF7D7DFD04A87DFD05A87DA1FD0CFFA1A17C
%A1A1A8A1A8A1A17CA1A7FD0AFFA8FFFFFFA8FD07FFA8A776A8FFFFA8FD14
%FFA87CFD0BFFAF7C7DFFFD04A87DA87DA8A8A87DA87DA87D7CA7FD05FFA8
%7DA1FD09FFAFA876FD0AFFCA7C7C7DFFA8FD05FFA8FF7D7C7CFD09FFA8FF
%FFA8FD0BFFA1A1A8FD16FFA87CFD0BFF7CA8FFFFA8FFA8FD05FFA8FD05FF
%7CA8FD06FF7CA8FFFFA8FFA8FFA8FFA8FFA7A1FD0AFF7CA7A8FFFFFFA8FF
%A8FFA8FFFFFFA8A17CFD0CFFA8FD0BFFA87D7DFD13FFA8FFFFA87CFD0AFF
%7C7DFFFD04A8FD05FFA8A8FFA8FFA87CA7FD05FFAFA1A1FFA8A8FFA8A8FF
%A8FFFFA87CFD08FFCA76A1FFFFA8FFA8A8A8FFFD05A8FFA8A17CFD07FFA8
%FFFFA8FD26FFA87CFD09FF7CA8FFFFA8FFA8FD05FFA8FD05FF76CAFD06FF
%7CA8FFFFA8FFA8FD05FFA7A1FD08FF7CA1FD04FFA8FFFFFFA8FFA8FFA8FF
%FFFFA8A17DFD09FFA8A8FD1FFFA8FD06FFA876FD07FFA87D7DFFFD05A8FD
%04FFFD04A8FFA87CA1FD06FF7D7DFFFD04A87DA87DA8A87D76FD07FF7D7C
%A8FFA8A8FFFFFD05A8FFA8FFA8A8FFFFA17CA7FD05FFA8FFFFA8FD28FFCA
%7DFD07FF7CA8FFFFA8FFA8FD05FFA8FFA8A8FFFF76CAFD06FF7CA8FFFFA8
%FFA8FD05FFA1A1FD06FFCAA1A7FFA8FD05FFA8FFFFFFA8FD05FFA8FFA1A1
%FD08FFA8A8FD1FFFA8FD08FFA87CA8FD04FFA87DA1FFA8FFFFA8A8FD07FF
%52FFA87CA1FD06FF7D7DFFFD05A8FFA8FFA9A17CFD06FFA876FFFFA8A8FF
%FFA8FD07FFA8A8FFA8FFFFFF76A8FD04FFA8FFFFA8FD20FF7DA8FD08FFA8
%76FD05FF7CA8FFA87DFFA8FD05FFA8FFA87DA8FF7CA8FD06FF7CA8FFFFA8
%FFA8FFFFA8A8FFA1A1FD06FFA1A1A8FFA8FFA8A8FD09FFA8FFFFA8FFA87D
%A7FD04FFA8FFFFFFA8FD09FFA8FFA87D76A8FFFFA8FD0DFF76A8FD08FF7D
%7CFD05FF7D7DFFA8A8A8FD07FFA8FFFFFFA87CA1FD05FFA8A17DFFFD05A8
%FF7DA8A8A77CFD05FFA87DA1FFFD05A8FD09FFFD05A8FF7DA1FD04FFA8FF
%FFA8FD0DFFA8FD1BFFA7A1A8FD1FFF7DA8FFFFA8FFA8FFFF7DA8FFA7A1FD
%06FF7CA8FFFFA8FFA8FD0BFFA8FF52A8FFA87CFD08FFA8FD13FFA8FD13FF
%A77DA8FD1FFFA9A17DFF7DFD04A8FFA8A8A8A77CFD05FFA87C7DFF7DA8A8
%A8FD0BFFFD04A8FF7D7CFD04FFA8FFFFA8FD27FFA7A1FD22FF7DCFFD0AFF
%A8A7FD06FF7DFD17FFA1FD07FFA8A8FFFFFFA8FD11FFA8FD0FFFA17DA8FD
%53FFA8FFFFA8FD25FFA8A1FD58FFA8A8FFFFFFA8FD13FFA8FD09FFA8FFA1
%A1CAFD55FFA8FFFFA8FD23FFA8A1FD57FFA8FFFFFFA8FFA8FD15FFA8FD0B
%FFA8FD57FFA8FFFFA8FD3EFFCAA8CAA8CFA8CAA8CFA8CAA8CFA8CAA8CFA8
%CFFD2FFFA8FFA8FFCFFFA8FFCAFFA8FFCAFFFFFFCAFFA8FFCAFFA8FFA8FD
%24FFA8767C767C767C767C767C767C767C767C767C7CFD2BFFA8FFFFA8FF
%FFFF7CA17DA17CA17DA17CA17CA176A17DA17CA17DA17C7DA8FD23FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FD2FFFA8A8FFFFFFA8FFFFFFA8
%FFFFFFA8A8A1FD05FFA8FFFFFFA8FD2BFFA8FD07FFA8FFA8FFA8FD21FFA8
%FFA8FFA8A17DFFFFFFA8FFFFA8FD23FFA7CFFD0BFFCAA8FD0BFF7DA8A8FF
%A8FFA8FFA8FFA8FFA8FFFD04A852A8FD20FFA8FFA87DA8FF7CA7FD06FFA8
%A8FD21FFA1A17DA8FD09FFA87DA1A1FD0AFFFD04A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FD0BFFA1A8A7A8A1A8A7A8A7A8A7A8A7A8A7A8A1FD05FF
%A8FF52FFFF7D7DFFFFFFA8FFFFA8FD21FFA1A8FFFF7DCAFD07FFA87DFFFF
%A7A1FD09FFA8FFFFFFA8FFFFFFA9FFFFFFA8FD11FFA87C767D767C767C76
%7C767C767C767C767CA8FFFFFFA8FFFFA8A8FF7CA7FFFFFFA8FFFFFFA8FD
%1FFF7DA1FD04FF7CA8FFFFA8FFFFA87DFD04FFA17DFD08FFA87DA1A1A17D
%A77DA17DA1A1A17DA77DA77DA77DFD0AFFCA76A8A8FFA8FFA8AFA8FFA8FF
%A8FFA8A8A8FD04FFA8A8FFA8A8A87D7DFFFFFFA8FFFFA8FD1FFF7DA7A8FF
%A8FFA8FF7DFFA8FFA8A87DFFA8FFA8FFA8A17DFD07FFA8A17DA17DA17DA1
%7DA17DA17DA17DA17DA77DA7FD0AFFA87CFD14FFA8FD05FF7DA7FD07FFA8
%FD1DFFA87DFD15FF7DA8FD24FFCA76FFFFFFA8FFFD05A8FFA8FF527DFD05
%FFA8A8FFA8A8A87DA1FFFFFFA8FFFFA8FD5BFFA87DFFFFA8FFFFFFA8FD07
%FFA8FD05FFA8FD05FF7CA7FD06FFA8A8FD5AFFA852FFFFA8A8FFA8A8A8FF
%A8FFA8FFA8A8A8FD04FFA8A8FF7DA8A87D7DFFFFFFA8FFFFA8FD5BFFA87D
%A8FFA8FFFFA8A8FFA8FFA8FFA8FFA8FD05FFA8FD05FF7CA7FD06FFA8A8FD
%5AFFA876FFFFA8A8FFA8FD0FFFA8FFA8FFA87D7DFFFFFFA8FFFFA8FD45FF
%A8FD15FFA87CA8FFA8FFA8FD0FFFA8FFFFA8A8FF7CA7FFFFFFA8FFFFFFA8
%FD0BFF7D7DFFA87CCFFD10FFA8FD11FFA8A8A8FFFD10A87DA8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8FFFFCA76FFFFA8A8FFA8FD0EFFA8A8FFA8A8A87D
%7DFFFFFFA8FFFFA8FD0AFFCA7DA8FFFFFFCA7CA8FD0FFFA77DCAFD18FFA8
%FD05FFA8FD05FFA8FD11FFA87CA8FFA8FFA8FD0FFFA8FD05FF7DA7FD07FF
%A8FD07FFA87D7DFFFFFFA8FFFFFF7D7DA7FD0BFFA87DA8FF7DA8FD0EFF7D
%FFA8FFA8FFA8FFA8A8A8FFA8A852A8FD04FFA8A8A8FFA8FFA8FFA8FFA8FF
%A8FF7DA8A8FFFFCA76FFFFFFA8FFA8FD0EFFA8A8FFA8A8A87DA1FFFFFFA8
%FFFFA8FD07FF7DA1A8FD09FFA8A77DCAFD09FFA1A8FFFFFF7DCAFD0DFFFD
%08A8FFA8FFA8FFA87DA8FD05FF7DFD0CA87D7DFFFFFFA87CA8FFA8FFFFA8
%FD0EFFA8FD05FF7CA7FD06FFA8A8FFFFFFA8A77CA8FD06FFA8FD06FFCA7C
%7DA8FD05FFA87D7DFFA8FFA8FF7CFD04A8FD09FFA8FFA8FFA8FFA8FD08FF
%A8FD04FFA9FFFFFFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFA852FD04A8FFA8
%FD0EFFA8A8FF7DA8A87D7DFFFFFFA8FFFFA8FD04FFCA7CFD11FF7DA8FD05
%FFA17DFFFFFFA8FFFFFFA8FF7DA7FD08FFFD04A8A7A8A8A87DA8A1A87DA8
%A1A87DCAFD04A87DA8A7A8A8A8A7A8A7A8A7A8A8A8A7A8FFFFA87DFFFFA8
%FD11FFA8FD05FF7CA7FD06FFA8A8FFFFFFA8CFFD12FFA8FD05FFA8FD0BFF
%A8FD08FF7D767C767C767C767C767C767C767C767C767C767C767C767C76
%7C767C767C767C767C767C76A8FFA876A8A87DA8FFA8FD0FFFA8FFA8FFA8
%7D7DFFFFFFA8FFFFA8FD5BFFA87CA8FFA8FD11FFA8FFFFA8A8FF7CA7FFFF
%FFA8FFFFFFA8FD5BFFA1FD15FFA8FFA8FFA8A17DFFFFFFA8FFFFA8FD80FF
%A8FD7BFFA8FFFFA8FD7FFFA8A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF
%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF
%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF
%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF
%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFA8A8A8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD08FFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FDFCFFFD08FF
%FF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 7.1-c000 79.cb7c5a1, 2022/04/14-05:22:35        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/"
   dc:format="application/postscript"
   xmp:CreatorTool="Adobe Illustrator 26.3 (Windows)"
   xmp:CreateDate="2022-09-07T18:16:41+04:00"
   xmp:ModifyDate="2022-09-07T18:16:41+04:00"
   xmp:MetadataDate="2022-09-07T18:16:41+04:00"
   xmpMM:OriginalDocumentID="uuid:C1BCCE1871B8DB11993190FCD52B4E9F"
   xmpMM:DocumentID="xmp.did:0b6f40f7-518e-dd45-8338-6fe0cef43b53"
   xmpMM:InstanceID="xmp.iid:0b6f40f7-518e-dd45-8338-6fe0cef43b53"
   xmpMM:RenditionClass="proof:pdf"
   illustrator:StartupProfile="Mobile"
   illustrator:CreatorSubTool="Adobe Illustrator"
   xmpTPg:NPages="1"
   xmpTPg:HasVisibleTransparency="False"
   xmpTPg:HasVisibleOverprint="False"
   pdf:Producer="Adobe PDF library 15.00"
   pdfx:CreatorVersion="21.0.0">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Mobile</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Maksim Kratkovski</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="176"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAsAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9M3V3qH6Q+qWiRGkQlZp&#xA;Sw6sVoOIPhirq+YP5bT/AIKT/mnFXV8wfy2n/BSf804q6vmD+W0/4KT/AJpxV1fMH8tp/wAFJ/zT&#xA;irq+YP5bT/gpP+acVdXzB/Laf8FJ/wA04q6vmD+W0/4KT/mnFXV8wfy2n/BSf804q6vmD+W0/wCC&#xA;k/5pxV1fMH8tp/wUn/NOKur5g/ltP+Ck/wCacVdXzB/Laf8ABSf804q6vmD+W0/4KT/mnFXV8wfy&#xA;2n/BSf8ANOKur5g/ltP+Ck/5pxV1fMH8tp/wUn/NOKur5g/ltP8AgpP+acVdXzB/Laf8FJ/zTirq&#xA;+YP5bT/gpP8AmnFXV8wfy2n/AAUn/NOKur5g/ltP+Ck/5pxV1fMH8tp/wUn/ADTirq+YP5bT/gpP&#xA;+acVdXzB/Laf8FJ/zTirq+YP5bT/AIKT/mnFXV8wfy2n/BSf804q6vmD+W0/4KT/AJpxV1fMH8tp&#xA;/wAFJ/zTirq+YP5bT/gpP+acVdXzB/Laf8FJ/wA04q1Hd6nHfwW90kPCdXIaIuSCgB/aA8cVbH/K&#xA;QN/zCL/ycbFWA3WlaqJ/VgurxFbWprWVDLM1bYATLSp2WsVK++KpTBaeY7OOAahf3ZN1pslzb+k1&#xA;1KyNJHsu1BzG7MG2G9N6Yq3q1z5n/RulmF9RSU6aSo5SsS3KcTFyAu/AIV5bgUxVF65H5osl0GC2&#xA;luvrf1VmP1Z55FZ3nDHmWJJPpM1eXTt2xVKIbnzUUteE2pFaS+hyM+4ofUrXw9/oxVNfKV5rcOs6&#xA;O96+pTenDdC5icyeiOPqsjEkNzFNqGhB40r0xVJoLzzlXT43a9B9UG4JaQ1jkaGVSSP9ensNsVTW&#xA;G51xfJlrI8mptMupIUVDKJJEEEfqJzYFgPUL8ditcVQ11J5hsrlxbNfvbxx6hHIxeZ/jl+sRQfaa&#xA;vwiFSCO+/U4qptceY42uzLNqbD6/FJBDA0tHQSzoy8jXgxCjjQcdhXFXteKuxV2KuxVSt7y0uQxt&#xA;p45gho5jZXofA0JxVVxV2KuxVi3mfz5b6DqaWMlsJC8KTCRpRGPjaRQoBVqn90Tlc8nCapshj4hd&#xA;pT/ytq0/5Y1/6SF/5oyPjeRZ+D5h3/K2rT/ljX/pIX/mjHxvIr4PmHf8ratP+WNf+khf+aMfG8iv&#xA;g+YcfzaswKmzSn/MQv8AzRj43kV8HzDMdE1VNV0uC/WMxCbl+7JrQo5Q77d1y2MrFtMo0aR2FDGf&#xA;MfnOTSNVi02HTnvppollQRs3M8i44qiRyMaCIk5XPJRqmyGOxdoH/H2tf9Sxe/8AIu5/7J8HinuL&#xA;Lwh3h3+Pta/6li9/5F3P/ZPj4p7ivhDvC61/MC7fUbSyu9FmsjdyLGjTmSMnkyoWVZIY+XEuK0OI&#xA;y71SDi2u2ZZa1Jfef8djTv8AVn/4iuKuH/KQN/zCL/ycbFUlttS8yyXhikjlSNpkQMIWIEbSSK78&#xA;miRQVVUpuw3rv+yqpJrPmxSga0lZSsjljCa8ViouyinL1UY022I2O1VUzW+1d4yyrIvO89ID0mLC&#xA;3LMAwDRx8dqGrFh99MVQJ1LzTHIUaKRoiIGik9EszO0YMkbBVAVeR+0enjiqYeX7zWLl5v0jE0RX&#xA;YIVZVBHXjVByHg3Pf+UYqnWKuxV2KuxV2KuxV2Ksc8w+ZLuK7XRtFiFzrEoq1d0hSleb9q0IO/8A&#xA;EBq5T3oc2yMBVnklEXkmwuy9x5t1CS+uUcrJFJJ6VuA3xJw+y4Hf4GVa7cdjj4ffuvid2yna+SvI&#xA;17blkn9C6jmuFSeK65uI45XAAWYypQIo341264+FFfFkq22peZfLAibVnfUdEmIAumDG4h5H4fU5&#xA;Fmr4gk77AjZSLMee4ZUJctizeGaKaJJonEkUih43U1DKwqCD4EZa0rsVYPqv/k2NI/5hB/xC9yo/&#xA;WPc3D+7PvZbLdXn1x7eCCNxHGkjPJKyGrs4oAI36cPHLWlv1NV/5ZoP+R7/9UcVd6mq/8s0H/I9/&#xA;+qOKpb5guHuPJusySII3Fpeoyq3IVjWRNiQvXj4ZGfIsocws8if8orZfOb/k++RxfSGWX6in+WNb&#xA;CdX/APJp6L/zDf8AMq7yk/WPc3R+g+9m2XNLsVYX53/5Snyr/wAZpP8Ak/a5Vk+qLdj+mTNMtaUv&#xA;vP8Ajsad/qz/APEVxVw/5SBv+YRf+TjYqmGKuxV2KuxV2KuxVZJKFIUAs56IOvz36Yqt4XDfakEY&#xA;8EFT/wAE1Qf+BxVBaVo0mmwPFHqF1d83MnO9kE5FVC8QaK3H4a0r1wAUkm0aJXQ0mAA6CRfs/T3X&#xA;/PfChVxVD6jepY6fdXrjklrDJMy9KiNSxH4YCaSBbEfJ1ne22kTeYpGE+o6o5keKUcA6lysQjcV4&#xA;iRjzBpSjAdADkMY2vqWeU710Cec447uG59J5NVYGOaAgCRozueFTwCRmhB5U6gnk2WNam8ckdutn&#xA;qsMaWcs8s0kit6sbc5mkjhNVRuTMw/ZoaUG5xVUkhm1BJtKuVKWE8Z4PLvNJEdmG9eJWo+Jvi3G3&#xA;IVxIUFLPy/nuYF1PQblmeTSLjjG7DiTFIW4Hj258DIPZhTbK8e1jubcm9HvZbljUwDzC3H80dJPq&#xA;SR/6KvxQp6j/AGLz9njJ+rKj9Y9zcP7s+9kEc3+5S4/0y+/uId/qu/25f+XfLWlGadDd3Gn2tw9/&#xA;Pzmhjkb4IBuygnYxbYqhrlbtdQeFtUvY0WKN1EMEMu7NIDyIt5KfYGKpDqqTf4T1iuqai49G/rG1&#xA;tGEbeXZmFqpAPf4h9GRnyLKHMJ35E/5RWy+c3/J98ji+kMsv1FP8sa2BeYvV/wCVmaP6Xqc/q+3o&#xA;+nz/ALu76er8GVH6x7m4fQfemlpL5rPmHUorkz/opILVtOWM2Zm5sZhOZgVCgfCnDix79O9rS1ct&#xA;rNzotnJ9Y1KGWR7N3lhNgpassZZeh+F/sn2OKpT5o+s/4q8set6/98/H1/Q/3/bfZ9H+OVZPqi3Y&#xA;/pk9Ay1pS+8/47Gnf6s//EVxVw/5SBv+YRf+TjYqmGKpZrV1rcCxtpNtFdvGedzBKxRmj3AWJvsh&#xA;if5ttsBvokV1WaN5m0zVHaBC1vqEf99YXAMcyEf5J+0PdfpwCQKTEhNskxdiq2WT04y1KkbAeJOw&#xA;H0nFWoo+A3NXbd28T/TFV+KuxVxAIodweoxVSjJSQwnpTlGfboR9GKpf5t/5RXWf+YG5/wCTLZGf&#xA;IsocwkWlS08p6MPrV4tIdP8AhW3qo+KL7LegagdtzhjyCy5lPdOf1NUuKzTzelBFwM8XpFfUeTnx&#xA;/dxV5emtevTCxRGtGmkXr1KtHC8iOoqysillZRQ/ErCo2xVLZJv9ylv/AKZff3E2/wBV3+3F/wAu&#xA;+KpR5akb/H+vgSSOsscRdpU9N2McUIXkvFPs82ptlcfqLbL6B8WbZY1MA8wry/NHSR6ckn+ir8ML&#xA;+m/2Lz9rlH+vKj9Y9zcP7s+9kEcP+5S4/wBDvv7iHb61v9uX/l4y1pTPRf8Ajj2GxH+jxbMakfAO&#xA;pqcVQt0nLVpf3NxLS3h/uJfSp8cv2v3kVcVSLVoqeUdZP1W8FIdQ+JriqjeXqPXNffbIz5FlDmE0&#xA;8if8orZfOb/k++RxfSGWX6in+WNbAvMS8vzM0ccJJP8AR/sQv6b/AN3d9G5R/ryo/WPc3D6D70+j&#xA;h/3KXH+h339xDt9a3+3L/wAvGWtKESH/AHB2H+iX3/Hnv9Z2/vI/+L8VSnzQnHzV5Y/czxVmf+/l&#xA;9Wv7+2+z+8lp+GVZPqi3Y/pk9Ay1pS+8/wCOxp3+rP8A8RXFXD/lIG/5hF/5ONiqYYql2jarb6jJ&#xA;qDQq6/VLt7N+YAq0KrXjQn4asaYAbSRTWseXtL1dF+txUmj3guozwmjI3BSQbih3p0xMQVEiEmn1&#xA;DzH5Zi56gp1rSFKqLuPil3ECQq+qrFVkG4HIGvUnIEmPPkzAEuWxZPa3EdzbQ3MdfTmRZErsaOKi&#xA;v35Y1obVNR0+wW3lvrmK1haXgJJ3WNS3puwWrECvw1+jATSQLQ/+LfKv/V5sf+kmH/mrBxjvTwHu&#xA;d/i3yr/1ebH/AKSYf+aseMd68B7mh5u8qHprVgf+jmH/AJqx4h3rwHub/wAW+Vf+rzY/9JMP/NWP&#xA;GO9eA9y1fMnl24uraK21SzmmeTiscc8Tu3JSKBVYk70wiQ71MT3LvNv/ACius/8AMDc/8mWwT5FY&#xA;cwkWlRV8p6Mfqt4aw6f8S3FFPxRfZX1xQeGwwx5LLmU90xOOqXf7meKsFvtPL6pPxzdP3ktMLFE6&#xA;2K6Nfihb/RpdlNGPwHoaih+nFUiu7yxg8xadYSw3iXd7b3bWsBujykELQmQr+/8A2QwriqB8trx/&#xA;MLXBwkj/AHSfBK/qOP3Vv1bk9f8Agsqj9ZbZfQPizfLWpgHmFeX5o6SPTkk/0Vfhhf03+xeftco/&#xA;15UfrHubh/dn3sgjh/3KXH+h339xDt9a3+3L/wAvGWtKZ6L/AMcew2I/0eLZjUj4B1NTiqFuk5at&#xA;L+5uJaW8P9xL6VPjl+1+8iriqRatFTyjrJ+q3gpDqHxNcVUby9R65r77ZGfIsocwmnkT/lFbL5zf&#xA;8n3yOL6Qyy/UU/yxrYF5ijkk/MzR0ReTG32HqPD/ALru/wBtAWGVH6x7m4fQfen0djefpS4/df7o&#xA;h/4/7r+eXvxy1pQiWN5+g7A+lt/of/H9c/78j7ccVSnzRbzReavLHqJxrM9P9Iln6T23+/AOP0ZV&#xA;k+qLdj+mT0DLWlL7z/jsad/qz/8AEVxVw/5SBv8AmEX/AJONiqYYqpwWttb+p6EKQ+s5ll9NQvOR&#xA;vtO1OrHuTiqpiqye3guIWhuI1mhcUeORQysPAg7HFVyIiIqIoVFACqBQADoAMVU7m0tbpBHcwpPG&#xA;DyCSKHAPStGB8cVQ/wCgtE/6t9t/yJj/AKY0m3foLRP+rfbf8iY/6Y0toHSfK/lG1hli06wtTH6r&#xA;etQLLSVQFZSW5kEcQOOAAKSUd+gtE/6t9t/yJj/phpbXw6TpUMiyw2UEUq/ZdIkVh8iBii3atYDU&#xA;NLvLAv6Yu4JIDJTlx9VCnKlRWlcBFhINFL4vKenjTLKwmluXSy+rlGjubiHk9sVKErHIBx5IPg6Y&#xA;gUpNpnb2UFu7yR8y8gVWZ5HkNFqQPjZqfaOFCpNDHNDJDIOUcqlHFSKqwodxQ4qgn0DTHuort1la&#xA;5gV44ZjPMWRZSpcKee3LgtfliqG07y1FY6/e6sk7v9cRU9F+TFaKikmRmZm/ux8siI72yMtqTnJM&#xA;WAeYYvV/NHSU9GO4rar+7mNEPwXn+S/6sqP1j3Nw/uz72QRadXUrkjSrEqIoUPxbBgZGI/uOtGBp&#xA;7jLWlM9FFNHsBQLS3iHFeg+AbDpiqFurb1tWl/0S3ueNvDvOacavL9n93JiqRatYcfKOst+jbNeM&#xA;OoHmrfEtDLuP3I6dt8jPkWUOYTTyJ/yitl85v+T75HF9IZZfqKf5Y1sC8xRer+Zmjp6Mc9bf+6mN&#xA;EP7u76/C/wCrKj9Y9zcPoPvT6PTv9ylwP0VY/wBxDty2+3L/AMUZa0oRNO/3B2B/Rdjv9T35bmsk&#xA;f/FOKpT5otvR81eWP9EgteUz/wBwa8qT232vgj6ZVk+qLdj+mT0DLWlL7z/jsad/qz/8RXFXD/lI&#xA;G/5hF/5ONiqYYq7FWOah5xh+snT9EgbVtSpusJ/cx125SS/ZpX367Eg5Az6DcsxDqdgnljLcyWkR&#xA;ulVLsKBcpGSUWQD4gpNDxr9mvbJsFfFXYqsmnhgieaeRYoYxyeRyFVQO5J2GKpFb+bVvrkjTbOSf&#xA;T15LJqb/ALuH1OiLGrDlJWT4TSlPlkRK+TIxrm1e+UIlna+0a5fS9TbeSWOjRTGtSZ4j8LEkk8ut&#xA;TU1wGPUJEuhWQearixnSz8y262EznjFfRktZyn2c7x/J/mceKua8N8mRqysoZSGVhVWG4IOTYN4q&#xA;7FXYq7FXYq7FXYqwrXNIvbr8xNPu1svrNpFarzeVT6HIC6Whfi4BHqL2ysg8d+TYCOCvNNLTR72O&#xA;9vmm0rTfqsro9qVkYv8A3ao4cG3oPiTahyxrTqwtjbWNvbGlYIkj+Hp8ChdvbbFULead6t4bj6tb&#xA;3XKNI6TmnHgzHY8JOvP26YqxmXypc6f5T1m0FpDfTzjUZ4pCzSTKLp5ZY4Yl9Kp9JXEaCu9MjLkW&#xA;UeYTzyVBPB5Zs4p4nhlHqlo5FKMOUzkVVgCNjgxiohOQ3Ip3k2DCte0m8u/zC0uZbYvapb/HPJC0&#xA;sCkJcijkcVr8Y/a7jKiDxgtoI4CE1h8vXo1S6mkj036o8UKW4W0b1OSGQycwZONPjXjTLWpCap5F&#xA;/SGkW2nfWILX6vLaTfWLa3aKRhaTRylCVmB4yiPg48GOKoHzFol4vmXy7LBapJFHKxmktLZkVAJo&#xA;GrKwLgbKaVp0OVTBsNsCBEs5y1qS+8/47Gnf6s//ABFcVcP+Ugb/AJhF/wCTjYqp+YfMFtodnFcz&#xA;wTXJnmS3hhtlDyNI4JUBSR/LglKkxjaT/ovzL5h+LV5TpWlt0023as0g/wCLpfA917jqAd8hRPPZ&#xA;nYjy3ZHp+m2GnWwtrGBLeAb8EHU0pyY9Wbbqd8mAByYEk81CPU7Ya9NpNG+sm3W9rT4eBYw0rXrV&#xA;Mb3pa2tMMKHYqxe28sXWpahd3XmSR7qGK6k/RlgzJ9XEANY3aOMDm25Hx1265Dhvmz4q5MlMEJiW&#xA;LgBGhUogAAHAgrQe1MmwX4qsnt4LiFobiNJoXFHikUMrD3U1BxVjlp5dv9I12y/RE0q6DJ6xv7F3&#xA;V442CfujFzrItXO4U/PICNHbkzMrG/NX89zTw+VruSCWSCUNAFlido3AaeMGjIQwqDTrjkNRKcQu&#xA;QY3pPk3zFqGlWd//AInu4/rcEU/p8rpuPqIH41+tCtK+GQGMkcyyOQA8g1deTfMkP1ynmi6P1a3E&#xA;4+K63J9Tb/er/ivD4R7yvijuDrryb5kh+uU80XR+rW4nHxXW5Pqbf71f8V4+Ee8r4o7gjP8AlX/m&#xA;L/qarv77r/sqx8I95XxR3BR8oJqll531DSrvUri/S1tmo0skzIS31eQN6ckkoBHqkVrghYkRaZ0Y&#xA;g1TPsuaHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUvvP+Oxp3+rP/xFcVcP+Ugb/mEX/k42Kta7oGm6&#xA;5ZC01BGeJHEsZR2RlkAKqw4kVpyOzVHiMBFpBpJPW81eXf78PrukL/u5P97Il/ygf7z9fckDbIbj&#xA;zDPaXkU+0jXNL1e39fT7hZlFOajZ0J6B1O69PpyYkDyYGJHN0WnWZ1mbVOB+uiFbP1OTU9JT6tON&#xA;eP2n60rjS2jsKHYq7FXYqgJNc06PVo9KkkKXcqc4uSkI25HFXPwltumDiF0nhNWj8KHYqx78wP8A&#xA;lE7z/Xt/+oiPK8v0lsw/UELpd7aN5M0aKSKV1MGnq6m3mZSKxV/YIOTjyYS5lrUzoYk1GNdOdnks&#xA;0WNY7CdzyJmH7MRphQp6jPoATUn/AEbMEazCo36NuQOS+qT/ALp/yhiqOTVNFt9Vga3s7iGsEwbh&#xA;p90pPxxU6QiuKpL5euY7n8zdZmjEiobegEsbxNtHaDdJFRh92VD6z7m4/QPezzLWl59rurecZvOF&#xA;1pekX4t7eGITNzWLiiBIqmpgmc1aXfw+WUkyMqBbgIiNkKlzp/5pwWstwdZt2WJGkoPS3Ciu3+h4&#xA;eGff9iOKHd9qo2lfmmqlm1u2VVFWY+kAAO5/0PHhn3/YvFDu+1Q0PVfOUHm+00rWL4TwzRGYIqxc&#xA;WRkl4k0ghdTyhr8sAMhKiUkRMbAegZc0uxVJfMXmzStCi/0l/UuCvJLdCOVP5nJ2Rfc/RXITmI82&#xA;cMZlyY4+s/mJqskX1K0TSoJ2ZIZJwFNQpejmVZJDsmxEIGQuZ8mdQHm3FZfmkZJ/9y9rS3fg/Mxh&#xA;fsK9aiz6UbDwz714odzVv538y6UsB8xaY31afj6dzGFVvi6VKs8RY/ykofbB4ko/UF8OMvpLM9N1&#xA;Ox1K1W6spRNCTQkVBVh1VlO6n2OWgg8mogjYorChL7z/AI7Gnf6s/wDxFcVcP+Ugb/mEX/k42Kph&#xA;irsVSLV/KFje3H16zkfTdVWpW9t9iSevqIKB69+56VpkDC9+rMTrbom1lBNBaRRTy/WJ1UetPxCe&#xA;o9PifiNlqe3bJsFfFXYq7FVk7lIiV+0aKlenJjQV+k4qgdX0Gx1Sw+qTggp8UE67SRyDo6t416+O&#xA;RlG2UZUl2ia3eW94ND1whdQUf6Jd9EuUHcf5fiMEZdCylHqGRZNrY9+YH/KJ3n+vb/8AURHleX6S&#xA;2YfqCXaTN/zqWjD63eikOn/CLaqjeLofQNfbfJx5MJc090x+WqXf76eWkFvvPF6RHxzdP3cVcKET&#xA;rZpo1+alf9Gl3UVYfAegoan6MVSySb/cpb/6Zff3E2/1Xf7cX/LviqQ+XW5fmZrB5ySf6P8AbmT0&#xA;3/u7TqvGP9WVD6z7m4/QPez3LWlg9rc21v8AmjqLTypEps2AZ2CgmlrtvlQ+s+5tP0D3orUr3Skt&#xA;tXZr5TaIroiJcsgiH1dW2VHAKcmNdtvl0talx1zy213Zyrq8ItjKR6Ul7zDgROwZ1eRgByUcR/mF&#xA;Uvkv7G9/NHT5LO5iuY1s1VnhdZFDUujQlSd98qP1j3Nw/uz72eZa0pL5s8xRaFpL3NVNxJVLdW6c&#xA;qVLt/koNz93fITnwi2eOHEaSTQNB+oU8wa+PrF5cUkJkBLWzH7JK93OwJA/d9B8PI5GEK3PNlkyX&#xA;sOSa3CXqWssckn1SOyAubVUCtIYY25FS7hlqq1QhQaVFWNctalBjaTm/toNTZ7i7uEhISWN3dHii&#xA;VysZDJ8CcjVVHTfFUZLMQ0smohbnTY+dujFR8TH4JDJGaq3dOQp+1sF3xVjGpWd95P1CLVrFf9xl&#xA;04jurIGqpUkhKk+FeDfstt9k0yiQ4DY5ORE8Yo8+jPbW6guraK5t3EkE6LJE4qKqwqDvvl4LjkIS&#xA;8/47Gnf6s/8AxFcVcP8AlIG/5hF/5ONiqYYq7FUJqeradpdq91fziGCOnNiCx+Jgo+FQWO57DATS&#xA;QLW6Vrel6tAZ9PnE0YZlOzIwKmhqrhW2+WIIPJSCOaNwodirsVSTXdakstW0axEJmj1GZ1k4gl19&#xA;MAqVHgGYM57KDkTKiGQjYKd5JigNb0Sz1ezNtcgqynlBOuzxuOjKcjKNsoypJfJOv6jqE+p6devF&#xA;O+kyJCt3ESfVqXHJu1f3fbBCROx6MpxA3HVX/MEgeUr0k0Aa3JJ/5iI8GX6SuL6gllhFOvlTRFh0&#xA;3ULpmTT1Yw3KhVQGMvJRrhKIqgnYV9snHkwlzZHpts6X1zMYZ4Y3ihRfXl9Uko0hNP3ktKcxhQid&#xA;UhefTLyGNS8ksEiIqniSWQgANVafOuKsevdO1iTzDpl1bRXcelwQ3SahC1wDJI8npehwb6x8IXg5&#xA;bx2xVK/LpRfzP1iMB0f6tyMUsnqSAcLQbnlJ+vKh9Z9zcfoHvZ9lrSwJJpYvzP1AxtxJsyCfRkn7&#xA;Wv7MZBHzyofWfc2n6B70zur67+p61+9686/6Dc/8syf5W2WtSJvtSuEudPD3AUtcEIDY3IqfQl2F&#xA;X3xVI3mll/NDT2kbkRZqAfRkg2pdfsyEk/PKj9Y9zcP7s+9nuWtLAtaaXVfzEtLL0WuLbSkE0sKs&#xA;oPwhZSw5lRvI8IIr0Byk7zrubhtC+9PUntkvpHik+ppaUjW1uVaOH1WUM/Fj8CniwClCerGhBy5p&#xA;Rmn2UF3BFdTxhomHO0tmIaOKNgKU2HLlTkK/Z2ApTFUxmhhmQxzRrJGeqOAw29jiqVThdMlhUSRx&#xA;2zj0raW4f4ICBXgBsW5KNqntSvQYqgTaWN5a3ulPDPeFo+MU/FQyQyD4HiMvCMcHU8eH8qnfrgIt&#xA;INFCfljfTy6NPY3IKXFlMQYiKFBJuymu9RMJBQ9Mrwnau5tzDe+9kN5/x2NO/wBWf/iK5a0uH/KQ&#xA;N/zCL/ycbFUe7qilm6D+OwxVT9JpN5SQvaIGg/2RHX5dMVXCCARtGI1Ebgh04ihB2NRirQt7cRLC&#xA;IkESUCRhRxAHSg6Yq16LR7wmg/32d1+j+X6NvbFV8bh1qNiNmU9QfA4quxVQu44yI5mQGSBwyOQC&#xA;UBPFyD2+AmuKq+KsW1LUrzXbyTRtGkMdpGeOp6mvRR3iiPdj3OVk3sGwCtynul6Rp2l2wt7GBYUA&#xA;AYqBycju7dWPzyYAHJgSTzRmFDsVdirsVdirsVdirF4vL2pDzveatzMFnNb+nHLGYyxYiEcSrq/+&#xA;+j2yAj6rZmQ4aTGPQJwt+kuq3cyX8jOwZbYcFaJYuCcYV2old6nfrk2DWoeWLbULrTrq7uZpZ9Ku&#xA;Dd2LEQfBM0MluW/ut/3c7fTv1AxVLpPL2qHz1aatzM9lDbCN5pDGGDD1xxCoqf79U9PHKzE8Vtgk&#xA;OGmU5Y1sXtvLGpp501HW2uFhtLmIRwekwaX7ECkOskTIBWA9GyAj6iWZl6QExh0C6WO+jn1a6nW9&#xA;kdzVLZeCOixiNeMI2VV6nfJsE3xV2KqN1ai4RQJGheNg8csfHkpGxpzDLupKmo6HFUrh8q2sOuXe&#xA;uR3My6le28FpcTcYPiitnleMf3XWs7VPy8MVQvlTy5qWk6lrVxdyRyQ38/q25Riz0Ms0hMg4RqrH&#xA;1R9muQhGifNnOVgeSaXn/HY07/Vn/wCIrk2Dh/ykDf8AMIv/ACcbFUWP3lwT+zDsP9dhv9ykffiq&#xA;rirsVdirsVUn+CdGHST4G+YBKn+GKquKtMoZSrCqkUIPgcVY/rcev3s8ejWga2tHTleapUV9OpHp&#xA;x/8AFhA3yErOwZxoblONN02z02zjs7OMRwRigA6k9yT3JyQFMSbROFDsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVS+8/47Gnf6s/8AxFcVcP8AlIG/5hF/5ONiqX32pea7bULmOy0F&#xA;L20LK0NybyOEsPTTl+7ZGIo1R1yJJ7mQA71H9OeeP+pXj/7iEX/VPBcu5NR71O48y+cbaIzT+Vma&#xA;JSvMQXiTyUJAqsax1alceI9y8I73QeZ/N90HktvKziANxRrm6W3kaijkfTePkByqB4jfbpjxHuXh&#xA;Heqfpzzx/wBSvH/3EIv+qeNy7lqPevg1TzfcXEMNz5eS2t2kQy3H16OTgoYEngIwW6dMIJ7kEDvZ&#xA;HkmLsVdirsVdirsVdirsVQuqvImmXjxNwlWCQo46qwQkH6DirCbnyv5qh+t/87PM31WAT/YnHKvP&#xA;4f8Aenb+7yrw5fzm7xI/zXXHlfzVFM8f+J5jx+r78Jx/fymP/lp/ZpXHw5fzl8SP81z+V/NS+t/z&#xA;s8x9KeKD7E+/q+n8X+9Pb1fwx8OX85fEj/Nd/hfzV9Z9H/E839/6HLhP/vj1uX+9P0Y+HL+cviR/&#xA;mo7QdF8wWepWl1d65Je27Tz272rLKAeCygNV5pB1jB+zhjAg7ljKYI2FMyyxrdirsVdirsVdirsV&#xA;dirsVQX6Z0z9J/ov1x9f48vRo3SnL7VONab0rgsXSaNWsvP+Oxp3+rP/AMRXChw/5SBv+YRf+TjY&#xA;qmGKuxV2KuxV2KuxV2KpfrWtW2lWyySK01xM3p2trHvJLIeiqP1ntkZSpMY2kv6L82RL+mReNNqh&#xA;PKXSOZFoYv8AfKDosg7SePtkalzZ3HknukavaaraC5tiRQlJoXHGSKRftI69mGTBthKNIm4uILaB&#xA;553EUMQLSSMaAAYUAMZ+r6v5mBvEu7jSNMUV00QsY5Zm7TTAEfuvBP2hvttWveXk2bR80doeuXEl&#xA;w2kauog1iAV2/u7iPtLEdq1puP7QDGXQ80Sj1HJPMmwQHmGGOfQNTglZliltZ0dkZo2CtGwJV1IZ&#xA;T7g1GKsavNU8oBNQSPWomH1JEjJ1FnLMPW2qZSWO4yPGO9lwHubvdW8om7lK6zCVP1KhGoE/ZuWL&#xA;f7t/ZG/tjxjvXgPc6XVvKJ+tU1mE1vLdl/3IHdR6FT/e9qHfHjHevAe536W8o/X+X6Zh4/XOXL9I&#xA;GnH6nxrX1f5tq/RjxjvXgPcs0OHyodeivtP1M3OpXVzOsluNQlnjMaLPxcWxlaOtKfHwr74RIFBi&#xA;QzbCh2KsR82+aNe07WrLS9ItYrq4vUJjicVZmAkcgM0sCABIidzlc5EEANkIggkoP9Ofmt/1YIfv&#xA;g/7LcFz7gmod5UY/M/5nyOqJoUJZvUoP3P8Aulwj/wDH72Y43PuC1DvLovM/5ny+jw0KE+vGZov7&#xA;ndBx3/3t/wAsY3PuC1DvKK0TzB+YV7e26XOkww2j+jJNIfTBEEpPxDjdS70U/s4QZ3uEEQrYsq1k&#xA;00i+O21vKdzQfYPU5Y1sV1i1sLjVNEuEfT4I7O6kkkt454/TnDWs0YWWsNeK8+Qp+1TFUt0ZoW/M&#xA;uf0VgSMSUC2zB4/94k6EKm/0ZT/lPg3f5P4s4vP+Oxp3+rP/AMRXLmlw/wCUgb/mEX/k42Kphirs&#xA;VdirsVdirsVdiqRxeU7H/EF/rVyfrE136SwIQw9BY4wjBTyoeZFegyPDvbLi2pMf0VYf76/4Zv65&#xA;Jiox+XtGiuZbmO2VZ5womkBarBK8a7++Ck2668vaNdxelc2wli5BuDM1CVNRXff5YkWoNK36KsP9&#xA;9f8ADN/XChK/MXk7TtYsPQQ/VbpGVre8HJmjIYE0HJa8gKdfftkZRtlGVJ/kmK2WOOWN4pFDxuCr&#xA;qdwQRQg4qkv+CPK//LCP+Rkv/NeQ8OPcz8SXe7/BHlf/AJYR/wAjJf8AmvHw49y+JLvd/gjyv/yw&#xA;j/kZL/zXj4ce5fEl3u/wR5X/AOWEf8jJf+a8fDj3L4ku9EWPlfQbC5W6tbQRzpUI/J2pyFDTkxHQ&#xA;4RADkEGZPMppkmLsVYR5g/8AJneWflL/ANQt3lcvrDbH6D8GVySXz30kEEkUaRxRv8cbOSXZx2dP&#xA;5MsakssY9U+uRf6RB/x//wC6X/5alr/u3FXadHqn+4qlxB/vC1P3L9P3H/FuKqPk611q3ac6nqEd&#xA;8stvbPaLHb/V/RiJl4xMfUk9TiP2tsVTnWTTSL41Apby7noPgPXFUsvNR/0ix/3K2JpO37PT9xJ/&#xA;xfirGdMm9X8z7h/XiuPjp6kIon+8Kbfaf9eU/wCU+Dd/k/izW8/47Gnf6s//ABFcuaXD/lIG/wCY&#xA;Rf8Ak42KphirsVQWqa3pOlIj6hcpAJCFjVqlmJNPhVasevhgJASAS6XWtKh1NNMluUjvpEEkcLni&#xA;WViVHEn4SxIPw1rjY5LR5o3Ch2KuxV2KtK6NXiwNOtDXoSP1jFW8VdirsVUbi8ggZFk5FnBKqiPI&#xA;aLSpogb+YYqho9bsJPT4es3qp6kdLefdBTcfB/lDFVo8waYY2kBm4LGJmb6vPtGwJDfY6fCcVXSa&#xA;3YR+pz9ZfST1JK28+yGu5+D/ACTiqmfMemerLEFuneFgkoSzu34sVDgErERXiwOKtP5l0xOJkW7j&#xA;DMsas9ldqOUjBFFTEBuzAYqqjW7A8aesebtGv+jz7unLkPsduBxVw1uwPGnrHm7Rr/o8+7py5D7H&#xA;bgcVdHrdhJ6fD1m9VPUjpbz7oKbj4P8AKGKqtpqVpdlPRL/vE9ROcckfJNtxzVa/aGKsM81xer+Y&#xA;3ltPRjnqJP3UpohpbXfX4X/VlcvrDbH6Cn0enf7lLgfoqx/uIduW325f+KMsalfSdH0trUvJYWwl&#xA;E1wDSNGpWd6gMVBpt4YqjF0TRl48bC2HAcUpEgou2w26bDFVW1sLC0r9VtorfkFVvSRUqqV4g8QN&#xA;hU0xVS1kkaRfEdRby9q/sHsMVSy8vrz6xY/vf93t/wAeF1/viT/KxVjOmSySfmfcNI3JufX0nh/4&#xA;8U/YkJbKf8p8G7/J/Fmt5/x2NO/1Z/8AiK5c0uH/ACkDf8wi/wDJxsVRN7f2NjbtcXtxHbW6/alm&#xA;dUUfSxAxJUBj51/WNb/d+XYPRszs2s3SkIR0PoREVk+Z22ofHIcRPJnwgc0fpHlbTtPmN3IXvtTc&#xA;fvb+5PqSnalFrsi0NKDttvhEaQZWvfRtO1TTmttSt1uE5uvxghvgYxhlYUZSVQbg4SAUAkcks+q+&#xA;Z9A3s3bW9KXrazEC8iUf77k2EgH8p36AZGiPNlYPkmuj+ZNH1YtHaTgXUYJmspPguI6Gh5xH4gAT&#xA;SvSvfJCQLExITPChjOr+Y2u7o6NodxGbs7Xl9yBjtU7713kPZcgZXsGcY1uUO2gQaMiX3l+dTfRj&#xA;/TIJZRS9Xq3qEnaX+Vvo6Y8Nck8d8080zzFpOoWP1yOdY1WqzxysEeJ1FWSQE/CVyQNsDGimEUsU&#xA;sSSxOskUiho5FIZWVhUEEbEEYULsVSnUW1Ya5p31JIHt/RuvrYmd0elYeHplVcfa617YqhtOk1T/&#xA;AHFUt4P94Wp++fp+4/4qxVCRyan+irj/AEeCn6Kg/wB3P04S/wDFWKovUZNU/wBytbeD/eFa/vn6&#xA;fv8A/irFVnks6+YtU/T62q6r9cX6wLAyNb1+p2/2DKFf78VRHm03w022NmsTv+kLD1BMzKPT+uRV&#xA;4lVb4unbFVKGTVP9D/0eD/e66p++fr/pH/FWKuhk1T/Q/wDR4P8Ae66p++fr/pH/ABVirtOk1T/c&#xA;VS3g/wB4Wp++fp+4/wCKsVQ3lU+ZDLbfplLNIvq8n6P+ptKzehWHj63qKo50pXjtiqUecDCPzD8u&#xA;GZYXjo9VuGCR/wC8939okN9G2Vy+sNsfoKaxyaV+k7j/AEfSqehD/u9Kfbl/4qyxqTvQih05SgRU&#xA;9WfisR5IB67/AGSAtR9GKo/FXYqg9Z/45F9uR/o8u43P2D064qll5N/pFj/pl9/ft/x6/wDFEn/L&#xA;virGdMbl+Z9wfUlk+P7Uyem/+8Kfs8I/1ZT/AJT4N3+T+LNbz/jsad/qz/8AEVy5pcP+Ugb/AJhF&#xA;/wCTjYqu1nRbPV7VbW75eksiyDgQDVaihqDsQSMBFpBpHAAAACgHQYUOxV2KuxVAjRrMa2dZHIXj&#xA;W/1RqEcCnPnUileVe9emCt7Te1I7ChLNJ8uaVpcEkNvEGEshld5ArMSQB1oNgAAMAFJJtHfVLT/f&#xA;Mf8AwI/phQo3Ok6dcWs9s8CLHcIySFFUNR14k1p1piqpp9lDYWFtYwljDaxJBGWNW4xqFFSAN6DA&#xA;BSSbV8KGK695R1vUtUe8ttelsYiAsUCLL8A4qGAaOeL7RWvTK5QJOxpsjMAbi0tT8ufMCenw80XC&#xA;+kvpx0Fz8Kmmw/0v/JGDw5fzmXiR/mrR+W2uiMxjzPPwaMQstLmhjUEBf96+g5HHw5fzl8SP81c/&#xA;5c+YH9Tn5ouG9VfTkqLn4lFdj/pf+UcfDl/OXxI/zW4/y78wxvI6eabhWmbnKQLmrMFCVP8Apf8A&#xA;KoGPhy/nL4kf5rpfy78wzIEl803DqGVwCLkjkjB1P+9fZlBGPhy/nL4kf5rQ/LnzAONPNFwODNIu&#xA;1zszV5H/AHr78jj4cv5y+JH+a4flz5gHGnmi4HBmkXa52Zq8j/vX35HHw5fzl8SP81yflz5gT0+H&#xA;mi4X0l9OOgufhU02H+l/5Ix8OX85fEj/ADUXo/kfW9PvrW4fzDLcQ21B6DJMQ0YpVKvcSAA8R+zh&#xA;jAg82Mpgjk7X9O1Gbz/oN1bxOIoFkL3JieSJD6FwtHKlQK+oKVYYyB4gsSOEp7HZa8upz3JvLU20&#xA;kMUaRC2k5h42kLMW9ehBEgoKdssa0dZ27QQemzh2LO7MBxFZHLmgq383jiqtirsVQ2pxSTabdwxA&#xA;mWSGREAoCWZSB126+OKpLfyaqt5pqrDqUgaduciCxKxgQS/E5rsCfh+ZxVj2nJOv5ny+t6nNzzAm&#xA;9Lnw+pqtf3Xw05CmU/5T4N3+T+LNLz/jsad/qz/8RXLmlw/5SBv+YRf+TjYqmGKuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVL7z/AI7Gnf6s/wDx&#xA;FcVVrrS7G6lEs8ZaRV4hgzKeNa0+EjFVH9AaV/vpv+Rsv/NWKu/QGlf76b/kbL/zVirv0BpX++m/&#xA;5Gy/81Yq79AaV/vpv+Rsv/NWKu/QGlf76b/kbL/zVirv0BpX++m/5Gy/81Yq79AaV/vpv+Rsv/NW&#xA;Ku/QGlf76b/kbL/zVirv0BpX++m/5Gy/81Yq79AaV/vpv+Rsv/NWKu/QGlf76b/kbL/zVirv0BpX&#xA;++m/5Gy/81Yq79AaV/vpv+Rsv/NWKu/QGlf76b/kbL/zVirv0BpX++m/5Gy/81Yq79AaV/vpv+Rs&#xA;v/NWKu/QGlf76b/kbL/zVirv0BpX++m/5Gy/81Yq79AaV/vpv+Rsv/NWKu/QGlf76b/kbL/zVirv&#xA;0BpX++m/5Gy/81Yq79AaV/vpv+Rsv/NWKu/QGlf76b/kbL/zVirv0BpX++m/5Gy/81Yq79AaV/vp&#xA;v+Rsv/NWKu/QGlf76b/kbL/zVirv0BpX++m/5Gy/81Yq79AaV/vpv+Rsv/NWKu/QGlf76b/kbL/z&#xA;Virv0BpX++m/5Gy/81YqqW+kafbzCeKIiVQQrF3agPX7ROKv/9k="/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="xmp.iid:0805732d-9b18-aa47-b5ba-1043771ab8ec"
    stRef:documentID="xmp.did:0805732d-9b18-aa47-b5ba-1043771ab8ec"
    stRef:originalDocumentID="uuid:C1BCCE1871B8DB11993190FCD52B4E9F"
    stRef:renditionClass="proof:pdf"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:3545088d-3494-494c-b97d-052feac6b640"
      stEvt:when="2022-09-07T18:13:09+04:00"
      stEvt:softwareAgent="Adobe Illustrator 26.3 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:0805732d-9b18-aa47-b5ba-1043771ab8ec"
      stEvt:when="2022-09-07T18:16:27+04:00"
      stEvt:softwareAgent="Adobe Illustrator 26.3 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:0b6f40f7-518e-dd45-8338-6fe0cef43b53"
      stEvt:when="2022-09-07T18:16:41+04:00"
      stEvt:softwareAgent="Adobe Illustrator 26.3 (Windows)"
      stEvt:changed="/"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmpTPg:MaxPageSize
    stDim:w="1812.719900"
    stDim:h="1226.478300"
    stDim:unit="Pixels"/>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Группа образцов по умолчанию"
       xmpG:groupType="0">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="Белый"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="255"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="Черный"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="0"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="RGB красный"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="0"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="RGB желтый"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="255"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="RGB зеленый"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="255"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="RGB голубой"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="255"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="RGB синий"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="0"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="RGB пурпурный"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="0"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="R=193 G=39 B=45"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="193"
         xmpG:green="39"
         xmpG:blue="45"/>
        <rdf:li
         xmpG:swatchName="R=237 G=28 B=36"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="237"
         xmpG:green="28"
         xmpG:blue="36"/>
        <rdf:li
         xmpG:swatchName="R=241 G=90 B=36"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="241"
         xmpG:green="90"
         xmpG:blue="36"/>
        <rdf:li
         xmpG:swatchName="R=247 G=147 B=30"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="247"
         xmpG:green="147"
         xmpG:blue="30"/>
        <rdf:li
         xmpG:swatchName="R=251 G=176 B=59"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="251"
         xmpG:green="176"
         xmpG:blue="59"/>
        <rdf:li
         xmpG:swatchName="R=252 G=238 B=33"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="252"
         xmpG:green="238"
         xmpG:blue="33"/>
        <rdf:li
         xmpG:swatchName="R=217 G=224 B=33"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="217"
         xmpG:green="224"
         xmpG:blue="33"/>
        <rdf:li
         xmpG:swatchName="R=140 G=198 B=63"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="140"
         xmpG:green="198"
         xmpG:blue="63"/>
        <rdf:li
         xmpG:swatchName="R=57 G=181 B=74"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="57"
         xmpG:green="181"
         xmpG:blue="74"/>
        <rdf:li
         xmpG:swatchName="R=0 G=146 B=69"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="146"
         xmpG:blue="69"/>
        <rdf:li
         xmpG:swatchName="R=0 G=104 B=55"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="104"
         xmpG:blue="55"/>
        <rdf:li
         xmpG:swatchName="R=34 G=181 B=115"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="34"
         xmpG:green="181"
         xmpG:blue="115"/>
        <rdf:li
         xmpG:swatchName="R=0 G=169 B=157"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="169"
         xmpG:blue="157"/>
        <rdf:li
         xmpG:swatchName="R=41 G=171 B=226"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="41"
         xmpG:green="171"
         xmpG:blue="226"/>
        <rdf:li
         xmpG:swatchName="R=0 G=113 B=188"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="113"
         xmpG:blue="188"/>
        <rdf:li
         xmpG:swatchName="R=46 G=49 B=146"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="46"
         xmpG:green="49"
         xmpG:blue="146"/>
        <rdf:li
         xmpG:swatchName="R=27 G=20 B=100"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="27"
         xmpG:green="20"
         xmpG:blue="100"/>
        <rdf:li
         xmpG:swatchName="R=102 G=45 B=145"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="102"
         xmpG:green="45"
         xmpG:blue="145"/>
        <rdf:li
         xmpG:swatchName="R=147 G=39 B=143"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="147"
         xmpG:green="39"
         xmpG:blue="143"/>
        <rdf:li
         xmpG:swatchName="R=158 G=0 B=93"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="158"
         xmpG:green="0"
         xmpG:blue="93"/>
        <rdf:li
         xmpG:swatchName="R=212 G=20 B=90"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="212"
         xmpG:green="20"
         xmpG:blue="90"/>
        <rdf:li
         xmpG:swatchName="R=237 G=30 B=121"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="237"
         xmpG:green="30"
         xmpG:blue="121"/>
        <rdf:li
         xmpG:swatchName="R=199 G=178 B=153"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="199"
         xmpG:green="178"
         xmpG:blue="153"/>
        <rdf:li
         xmpG:swatchName="R=153 G=134 B=117"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="153"
         xmpG:green="134"
         xmpG:blue="117"/>
        <rdf:li
         xmpG:swatchName="R=115 G=99 B=87"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="115"
         xmpG:green="99"
         xmpG:blue="87"/>
        <rdf:li
         xmpG:swatchName="R=83 G=71 B=65"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="83"
         xmpG:green="71"
         xmpG:blue="65"/>
        <rdf:li
         xmpG:swatchName="R=198 G=156 B=109"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="198"
         xmpG:green="156"
         xmpG:blue="109"/>
        <rdf:li
         xmpG:swatchName="R=166 G=124 B=82"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="166"
         xmpG:green="124"
         xmpG:blue="82"/>
        <rdf:li
         xmpG:swatchName="R=140 G=98 B=57"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="140"
         xmpG:green="98"
         xmpG:blue="57"/>
        <rdf:li
         xmpG:swatchName="R=117 G=76 B=36"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="117"
         xmpG:green="76"
         xmpG:blue="36"/>
        <rdf:li
         xmpG:swatchName="R=96 G=56 B=19"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="96"
         xmpG:green="56"
         xmpG:blue="19"/>
        <rdf:li
         xmpG:swatchName="R=66 G=33 B=11"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="66"
         xmpG:green="33"
         xmpG:blue="11"/>
        <rdf:li
         xmpG:swatchName="R=0 G=0 B=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="0"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="R=26 G=26 B=26"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="26"
         xmpG:green="26"
         xmpG:blue="26"/>
        <rdf:li
         xmpG:swatchName="R=51 G=51 B=51"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="51"
         xmpG:green="51"
         xmpG:blue="51"/>
        <rdf:li
         xmpG:swatchName="R=77 G=77 B=77"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="77"
         xmpG:green="77"
         xmpG:blue="77"/>
        <rdf:li
         xmpG:swatchName="R=102 G=102 B=102"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="102"
         xmpG:green="102"
         xmpG:blue="102"/>
        <rdf:li
         xmpG:swatchName="R=128 G=128 B=128"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="128"
         xmpG:green="128"
         xmpG:blue="128"/>
        <rdf:li
         xmpG:swatchName="R=153 G=153 B=153"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="153"
         xmpG:green="153"
         xmpG:blue="153"/>
        <rdf:li
         xmpG:swatchName="R=179 G=179 B=179"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="179"
         xmpG:green="179"
         xmpG:blue="179"/>
        <rdf:li
         xmpG:swatchName="R=204 G=204 B=204"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="204"
         xmpG:green="204"
         xmpG:blue="204"/>
        <rdf:li
         xmpG:swatchName="R=230 G=230 B=230"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="230"
         xmpG:green="230"
         xmpG:blue="230"/>
        <rdf:li
         xmpG:swatchName="R=242 G=242 B=242"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="242"
         xmpG:green="242"
         xmpG:blue="242"/>
        <rdf:li
         xmpG:swatchName="R=136 G=168 B=13"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="136"
         xmpG:green="168"
         xmpG:blue="13"/>
        <rdf:li
         xmpG:swatchName="R=127 G=71 B=221"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="127"
         xmpG:green="71"
         xmpG:blue="221"/>
        <rdf:li
         xmpG:swatchName="R=251 G=174 B=23"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="251"
         xmpG:green="174"
         xmpG:blue="23"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                  
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -1226.48 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1226.48 li
1812.72 1226.48 li
1812.72 0 li
cp
clp
1812.72 1226.48 mo
0 1226.48 li
0 0 li
1812.72 0 li
1812.72 1226.48 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
8.19161 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
26.9358 1197.89 mo
26.9358 28.5913 li
1790.8 28.5913 li
1790.8 1197.89 li
26.9358 1197.89 li
cp
.701961 .701961 .701961 rgb
@
.603489 lw
1672.25 105.442 mo
1512.8 105.442 li
1512.8 424.321 li
1512.8 424.468 li
1672.25 424.468 li
1672.25 424.321 li
1672.25 105.442 li
cp
0 0 0 rgb
@
1496.73 90.1672 mo
1496.73 442.602 li
1512.8 442.602 li
1512.8 105.442 li
1672.25 105.442 li
1672.25 442.602 li
1688.31 442.602 li
1688.31 90.1672 li
1496.73 90.1672 li
cp
.729412 .631373 .533333 rgb
f
1496.73 90.1672 mo
1496.73 442.602 li
1512.8 442.602 li
1512.8 105.442 li
1672.25 105.442 li
1672.25 442.602 li
1688.31 442.602 li
1688.31 90.1672 li
1496.73 90.1672 li
cp
0 0 0 rgb
@
1592.52 424.321 mo
1592.52 185.313 li
@
1672.25 397.914 mo
1512.8 397.914 li
@
1672.25 371.339 mo
1512.8 371.339 li
@
1672.25 344.764 mo
1512.8 344.764 li
@
1672.25 318.189 mo
1512.8 318.189 li
@
1672.25 291.614 mo
1512.8 291.614 li
@
1672.25 265.039 mo
1512.8 265.039 li
@
1672.25 238.464 mo
1512.8 238.464 li
@
1672.25 211.888 mo
1512.8 211.888 li
@
1672.25 185.313 mo
1512.8 185.313 li
@
1632.45 185.313 mo
1632.45 405.719 li
@
1552.43 423.715 mo
1552.43 202.725 li
@
1632.26 423.777 mo
1637.5 404.422 li
1632.26 404.422 li
1627.01 404.422 li
1632.26 423.777 li
cp
f
1552.43 185.313 mo
1547.18 204.669 li
1552.43 204.669 li
1557.67 204.669 li
1552.43 185.313 li
cp
f
1547.78 424.468 mo
1547.78 427.013 1549.84 429.076 1552.39 429.076 cv
1554.93 429.076 1556.99 427.013 1556.99 424.468 cv
1556.99 421.923 1554.93 419.86 1552.39 419.86 cv
1549.84 419.86 1547.78 421.923 1547.78 424.468 cv
cp
f
1627.84 185.313 mo
1627.84 187.858 1629.9 189.921 1632.45 189.921 cv
1634.99 189.921 1637.05 187.858 1637.05 185.313 cv
1637.05 182.769 1634.99 180.706 1632.45 180.706 cv
1629.9 180.706 1627.84 182.769 1627.84 185.313 cv
cp
f
1194.26 186.252 mo
1194.26 425.553 li
1114.54 425.553 li
1114.54 106.526 li
1353.55 106.526 li
1353.55 425.553 li
1353.55 425.553 li
1273.99 425.553 li
1273.99 186.252 li
@
1099.26 91.2519 mo
1099.26 442.174 li
1114.54 442.174 li
1114.54 106.526 li
1353.55 106.526 li
1353.55 442.602 li
1368.82 442.602 li
1368.82 91.2519 li
1099.26 91.2519 li
cp
.729412 .631373 .533333 rgb
f
1099.26 91.2519 mo
1099.26 442.174 li
1114.54 442.174 li
1114.54 106.526 li
1353.55 106.526 li
1353.55 442.602 li
1368.82 442.602 li
1368.82 91.2519 li
1099.26 91.2519 li
cp
0 0 0 rgb
@
1194.26 398.999 mo
1114.54 398.999 li
@
1194.26 372.423 mo
1114.54 372.423 li
@
1194.26 345.848 mo
1114.54 345.848 li
@
1194.26 319.273 mo
1114.54 319.273 li
@
1194.26 292.698 mo
1114.54 292.698 li
@
1194.26 266.123 mo
1114.54 266.123 li
@
1194.26 239.548 mo
1114.54 239.548 li
@
1194.26 212.973 mo
1114.54 212.973 li
@
1273.99 398.999 mo
1353.55 398.999 li
@
1273.99 372.423 mo
1353.55 372.423 li
@
1273.99 345.848 mo
1353.55 345.848 li
@
1273.99 319.273 mo
1353.55 319.273 li
@
1273.99 292.698 mo
1353.55 292.698 li
@
1273.99 266.123 mo
1353.55 266.123 li
@
1273.99 239.548 mo
1353.55 239.548 li
@
1273.99 212.973 mo
1353.55 212.973 li
@
1353.55 186.398 mo
1273.99 186.398 li
@
1353.55 186.398 mo
1114.54 186.398 li
@
1154.17 425.553 mo
1154.34 143.941 li
1313.91 143.941 li
1313.74 408.561 li
@
1313.85 424.925 mo
1319.09 405.569 li
1313.85 405.569 li
1308.61 405.569 li
1313.85 424.925 li
cp
f
1149.56 425.978 mo
1149.56 428.523 1151.62 430.586 1154.17 430.586 cv
1156.71 430.586 1158.78 428.523 1158.78 425.978 cv
1158.78 423.434 1156.71 421.371 1154.17 421.371 cv
1151.62 421.371 1149.56 423.434 1149.56 425.978 cv
cp
f
900.404 476.483 mo
900.404 476.604 li
900.385 476.483 li
820.68 476.483 li
740.954 476.483 li
740.954 662.657 li
820.68 662.657 li
820.68 556.355 li
900.404 556.355 li
900.404 662.657 li
979.965 662.657 li
979.965 476.483 li
900.404 476.483 li
cp
1 1 1 rgb
f
900.404 476.483 mo
900.404 476.604 li
900.385 476.483 li
820.68 476.483 li
740.954 476.483 li
740.954 662.657 li
820.68 662.657 li
820.68 556.355 li
900.404 556.355 li
900.404 662.657 li
979.965 662.657 li
979.965 476.483 li
900.404 476.483 li
cp
0 0 0 rgb
@
724.903 460.419 mo
724.903 677.614 li
740.954 677.614 li
740.954 476.483 li
979.965 476.483 li
979.965 678.042 li
996.187 678.042 li
996.187 460.419 li
724.903 460.419 li
cp
.729412 .631373 .533333 rgb
f
724.903 460.419 mo
724.903 677.614 li
740.954 677.614 li
740.954 476.483 li
979.965 476.483 li
979.965 678.042 li
996.187 678.042 li
996.187 460.419 li
724.903 460.419 li
cp
0 0 0 rgb
@
820.68 636.08 mo
740.954 636.08 li
@
820.68 609.505 mo
740.954 609.505 li
@
820.68 582.93 mo
740.954 582.93 li
@
900.405 636.08 mo
979.965 636.08 li
@
900.405 609.505 mo
979.965 609.505 li
@
900.405 582.93 mo
979.965 582.93 li
@
900.405 556.355 mo
900.405 476.483 li
@
873.83 556.355 mo
873.83 476.483 li
@
847.255 556.355 mo
847.255 476.483 li
@
820.68 556.355 mo
820.68 476.483 li
@
979.965 556.355 mo
900.405 556.355 li
@
979.965 556.355 mo
740.954 556.355 li
@
780.587 662.657 mo
780.587 513.898 li
940.33 513.898 li
940.33 644.304 li
@
940.163 661.854 mo
945.406 642.498 li
940.163 642.498 li
934.92 642.498 li
940.163 661.854 li
cp
f
775.979 662.781 mo
775.979 665.325 778.042 667.388 780.587 667.388 cv
783.132 667.388 785.195 665.325 785.195 662.781 cv
785.195 660.236 783.132 658.173 780.587 658.173 cv
778.042 658.173 775.979 660.236 775.979 662.781 cv
cp
f
1170.79 899.736 mo
905.04 899.736 li
905.04 820.01 li
1170.79 820.01 li
1170.79 899.736 li
cp
@
904.747 914.907 mo
904.747 899.736 li
1170.79 899.736 li
1170.79 914.907 li
904.747 914.907 li
cp
.729412 .631373 .533333 rgb
f
904.747 914.907 mo
904.747 899.736 li
1170.79 899.736 li
1170.79 914.907 li
904.747 914.907 li
cp
0 0 0 rgb
@
904.747 820.01 mo
904.747 804.839 li
1170.79 804.839 li
1170.79 820.01 li
904.747 820.01 li
cp
.729412 .631373 .533333 rgb
f
904.747 820.01 mo
904.747 804.839 li
1170.79 804.839 li
1170.79 820.01 li
904.747 820.01 li
cp
0 0 0 rgb
@
1144.22 899.736 mo
1144.22 820.01 li
@
1117.64 899.736 mo
1117.64 820.01 li
@
1091.07 899.736 mo
1091.07 820.01 li
@
1064.49 899.736 mo
1064.49 820.01 li
@
1037.92 899.736 mo
1037.92 820.01 li
@
1011.34 899.736 mo
1011.34 820.01 li
@
984.765 899.736 mo
984.765 820.01 li
@
958.19 899.736 mo
958.19 820.01 li
@
931.615 899.736 mo
931.615 820.01 li
@
1160.98 859.873 mo
906.651 859.873 li
@
1170.79 859.873 mo
1151.43 865.117 li
1151.43 859.873 li
1151.43 854.63 li
1170.79 859.873 li
cp
f
904.747 864.481 mo
902.202 864.481 900.139 862.418 900.139 859.873 cv
900.139 857.328 902.202 855.265 904.747 855.265 cv
907.292 855.265 909.355 857.328 909.355 859.873 cv
909.355 862.418 907.292 864.481 904.747 864.481 cv
cp
f
1720.59 852.301 mo
1720.59 1118.05 li
1640.86 1118.05 li
1640.86 852.302 li
1720.59 852.301 li
cp
@
1735.76 1130.18 mo
1720.59 1130.18 li
1720.59 840.138 li
1735.76 840.138 li
1735.76 1130.18 li
cp
.729412 .631373 .533333 rgb
f
1735.76 1130.18 mo
1720.59 1130.18 li
1720.59 840.138 li
1735.76 840.138 li
1735.76 1130.18 li
cp
0 0 0 rgb
@
1720.59 878.877 mo
1640.86 878.877 li
@
1720.59 905.452 mo
1640.86 905.452 li
@
1720.59 932.027 mo
1640.86 932.027 li
@
1720.59 958.602 mo
1640.86 958.602 li
@
1720.59 985.177 mo
1640.86 985.177 li
@
1720.59 1011.75 mo
1640.86 1011.75 li
@
1720.59 1038.33 mo
1640.86 1038.33 li
@
1720.59 1064.9 mo
1640.86 1064.9 li
@
1720.59 1091.48 mo
1640.86 1091.48 li
@
1680.72 862.115 mo
1680.72 1116.44 li
@
1680.72 852.826 mo
1685.97 872.182 li
1680.72 872.182 li
1675.48 872.182 li
1680.72 852.826 li
cp
f
1685.33 1118.34 mo
1685.33 1120.89 1683.27 1122.95 1680.72 1122.95 cv
1678.18 1122.95 1676.11 1120.89 1676.11 1118.34 cv
1676.11 1115.8 1678.18 1113.74 1680.72 1113.74 cv
1683.27 1113.74 1685.33 1115.8 1685.33 1118.34 cv
cp
f
1629.12 699.442 mo
1708.85 699.442 li
1708.84 692.581 1708.4 685.643 1707.48 678.661 cv
1696.02 591.646 1615.91 530.176 1528.9 541.631 cv
1448.86 552.168 1390.44 620.79 1390.5 699.442 cv
1470.23 699.442 li
1470.2 660.186 1499.36 625.934 1539.31 620.675 cv
1582.73 614.957 1622.72 645.637 1628.44 689.067 cv
1628.9 692.553 1629.12 696.016 1629.12 699.442 cv
cp
@
1395.92 658.239 mo
1472.94 678.877 li
@
1570.23 622.699 mo
1590.86 545.692 li
@
1529.1 622.698 mo
1508.48 545.722 li
@
1703.4 658.24 mo
1626.41 678.87 li
@
1493.43 643.377 mo
1436.94 587.059 li
@
1662.36 586.745 mo
1605.82 643.28 li
@
1549.64 619.99 mo
1549.64 540.275 li
@
1509.92 630.655 mo
1470.07 561.626 li
@
1687.47 619.861 mo
1618.47 659.703 li
@
1480.83 659.861 mo
1411.66 620.071 li
@
1629.32 561.425 mo
1589.35 630.651 li
@
1528.98 541.676 mo
1616.24 530.215 1695.95 591.717 1707.44 678.776 cv
1708.36 685.763 1708.81 692.703 1708.81 699.568 cv
1708.81 714.747 li
1724.66 714.747 li
1724.65 699.558 li
1724.64 691.967 1724.14 684.308 1723.15 676.795 cv
1717.58 634.636 1696.78 596.025 1664.58 568.074 cv
1632.66 540.377 1591.94 525.123 1549.92 525.123 cv
1542.31 525.123 1534.59 525.63 1526.99 526.627 cv
1440.26 538.019 1374.91 612.372 1374.97 699.58 cv
1374.98 714.747 li
1390.39 714.747 li
1390.39 714.634 1390.39 699.568 1390.39 699.568 cv
1390.33 620.876 1448.71 552.219 1528.98 541.676 cv
cp
.729412 .631373 .533333 rgb
f
.599333 lw
1528.98 541.676 mo
1616.24 530.215 1695.95 591.717 1707.44 678.776 cv
1708.36 685.763 1708.81 692.703 1708.81 699.568 cv
1708.81 714.747 li
1724.66 714.747 li
1724.65 699.558 li
1724.64 691.967 1724.14 684.308 1723.15 676.795 cv
1717.58 634.636 1696.78 596.025 1664.58 568.074 cv
1632.66 540.377 1591.94 525.123 1549.92 525.123 cv
1542.31 525.123 1534.59 525.63 1526.99 526.627 cv
1440.26 538.019 1374.91 612.372 1374.97 699.58 cv
1374.98 714.747 li
1390.39 714.747 li
1390.39 714.634 1390.39 699.568 1390.39 699.568 cv
1390.33 620.876 1448.71 552.219 1528.98 541.676 cv
cp
0 0 0 rgb
@
1669.02 699.506 mo
1672.42 679.742 li
1667.2 680.236 li
1661.98 680.73 li
1669.02 699.506 li
cp
f
1425.78 699.403 mo
1425.78 701.948 1427.84 704.011 1430.39 704.011 cv
1432.93 704.011 1435 701.948 1435 699.403 cv
1435 696.859 1432.93 694.796 1430.39 694.796 cv
1427.84 694.796 1425.78 696.859 1425.78 699.403 cv
cp
f
.603489 lw
1667.96 683.865 mo
1660.06 623.905 1608.67 580.123 1549.76 580.123 cv
1544.59 580.123 1539.36 580.46 1534.1 581.153 cv
1474.92 588.944 1430.32 639.786 1430.37 699.413 cv
@
1188.94 698.717 mo
1109.21 698.717 li
1109.21 539.395 li
1268.66 539.395 li
1268.66 698.717 li
1268.66 698.717 li
1188.94 698.717 li
@
1094.04 524.121 mo
1094.04 715.869 li
1109.21 715.869 li
1109.21 539.395 li
1268.64 539.395 li
1268.64 715.945 li
1283.81 715.945 li
1283.81 524.197 li
1283.81 524.121 li
1094.04 524.121 li
cp
.729412 .631373 .533333 rgb
f
1094.04 524.121 mo
1094.04 715.869 li
1109.21 715.869 li
1109.21 539.395 li
1268.64 539.395 li
1268.64 715.945 li
1283.81 715.945 li
1283.81 524.197 li
1283.81 524.121 li
1094.04 524.121 li
cp
0 0 0 rgb
@
1188.94 672.299 mo
1109.21 672.299 li
@
1188.94 672.299 mo
1268.66 672.299 li
@
1109.05 645.724 mo
1268.66 645.724 li
@
1188.94 619.149 mo
1188.94 539.395 li
@
1188.94 619.149 mo
1188.94 698.717 li
@
1268.66 619.149 mo
1188.94 619.149 li
@
1268.5 619.149 mo
1109.05 619.149 li
@
1149.01 697.941 mo
1149.01 579.214 li
1228.86 579.214 li
1228.86 679.711 li
@
1188.94 619.149 mo
1109.21 539.395 li
@
1188.94 619.149 mo
1268.66 539.395 li
@
1228.8 697.941 mo
1234.04 678.585 li
1228.8 678.585 li
1223.55 678.585 li
1228.8 697.941 li
cp
f
1144.4 697.941 mo
1144.4 700.486 1146.47 702.549 1149.01 702.549 cv
1151.56 702.549 1153.62 700.486 1153.62 697.941 cv
1153.62 695.396 1151.56 693.333 1149.01 693.333 cv
1146.47 693.333 1144.4 695.396 1144.4 697.941 cv
cp
f
1062.82 1088.34 mo
1062.82 1008.62 li
983.092 1008.62 li
983.092 1088.34 li
@
1275.42 1088.34 mo
771.299 1088.34 li
771.299 1008.62 li
1275.42 1008.62 li
1275.42 1088.34 li
cp
@
755.218 1103.73 mo
755.218 1088.47 li
1290.02 1088.47 li
1290.02 1103.73 li
755.218 1103.73 li
cp
.729412 .631373 .533333 rgb
f
755.218 1103.73 mo
755.218 1088.47 li
1290.02 1088.47 li
1290.02 1103.73 li
755.218 1103.73 li
cp
0 0 0 rgb
@
1248.84 1088.34 mo
1248.84 1008.62 li
@
1222.27 1088.34 mo
1222.27 1008.62 li
@
1195.69 1088.34 mo
1195.69 1008.62 li
@
1169.12 1088.34 mo
1169.12 1008.62 li
@
1142.54 1088.34 mo
1142.54 1008.62 li
@
1115.97 1088.34 mo
1115.97 1008.62 li
@
1089.39 1088.34 mo
1089.39 1008.62 li
@
1062.82 1088.34 mo
1062.82 1008.62 li
@
956.517 1088.34 mo
956.517 1008.62 li
@
983.092 1088.34 mo
983.092 1008.62 li
@
929.942 1088.34 mo
929.942 1008.62 li
@
903.367 1088.34 mo
903.367 1008.62 li
@
876.792 1088.34 mo
876.792 1008.62 li
@
850.217 1088.34 mo
850.217 1008.62 li
@
823.642 1088.34 mo
823.642 1008.62 li
@
797.067 1088.34 mo
797.067 1008.62 li
@
963.987 1048.48 mo
771.299 1048.48 li
@
1258.68 1048.48 mo
1062.82 1048.48 li
@
775.907 1048.48 mo
775.907 1051.02 773.844 1053.09 771.299 1053.09 cv
768.755 1053.09 766.691 1051.02 766.691 1048.48 cv
766.691 1045.93 768.755 1043.87 771.299 1043.87 cv
773.844 1043.87 775.907 1045.93 775.907 1048.48 cv
cp
f
1067.43 1048.48 mo
1067.43 1051.02 1065.36 1053.09 1062.82 1053.09 cv
1060.27 1053.09 1058.21 1051.02 1058.21 1048.48 cv
1058.21 1045.93 1060.27 1043.87 1062.82 1043.87 cv
1065.36 1043.87 1067.43 1045.93 1067.43 1048.48 cv
cp
f
1275.42 1048.48 mo
1256.06 1053.72 li
1256.06 1048.48 li
1256.06 1043.23 li
1275.42 1048.48 li
cp
f
983.343 1048.48 mo
963.987 1053.72 li
963.987 1048.48 li
963.987 1043.23 li
983.343 1048.48 li
cp
f
1575.27 873.933 mo
1329.94 873.933 li
1329.94 1123.8 li
1345.11 1123.8 li
1345.11 889.103 li
1575.27 889.104 li
1575.27 873.933 li
cp
.729412 .631373 .533333 rgb
f
1575.27 873.933 mo
1329.94 873.933 li
1329.94 1123.8 li
1345.11 1123.8 li
1345.11 889.103 li
1575.27 889.104 li
1575.27 873.933 li
cp
0 0 0 rgb
@
1424.84 889.103 mo
1345.11 889.103 li
1345.11 1101.68 li
1424.84 1101.68 li
1424.84 968.828 li
1557.71 968.828 li
1557.71 889.103 li
1424.84 889.103 li
cp
@
1345.11 968.828 mo
1424.84 968.828 li
@
1345.11 995.403 mo
1424.84 995.403 li
@
1345.11 1021.98 mo
1424.84 1021.98 li
@
1345.11 1048.55 mo
1424.84 1048.55 li
@
1345.11 1075.13 mo
1424.84 1075.13 li
@
1531.14 889.103 mo
1531.14 968.828 li
@
1504.56 889.103 mo
1504.56 968.828 li
@
1477.99 889.103 mo
1477.99 968.828 li
@
1451.41 889.103 mo
1451.41 968.828 li
@
1424.84 889.103 mo
1424.84 968.828 li
@
1542.22 928.966 mo
1384.97 928.966 li
1384.97 1101.68 li
@
1557.71 928.966 mo
1538.36 923.722 li
1538.36 928.966 li
1538.36 934.209 li
1557.71 928.966 li
cp
f
1380.37 1101.68 mo
1380.37 1104.23 1382.43 1106.29 1384.97 1106.29 cv
1387.52 1106.29 1389.58 1104.23 1389.58 1101.68 cv
1389.58 1099.14 1387.52 1097.07 1384.97 1097.07 cv
1382.43 1097.07 1380.37 1099.14 1380.37 1101.68 cv
cp
f
860.465 124.159 mo
794.615 124.159 741.042 177.731 741.042 243.581 cv
741.042 350.195 li
820.767 350.195 li
820.767 243.581 li
820.767 243.581 li
820.767 221.657 838.54 203.884 860.465 203.884 cv
882.389 203.884 900.163 221.657 900.163 243.581 cv
900.163 243.581 li
900.163 350.195 li
979.888 350.195 li
979.888 243.585 li
979.888 243.581 li
979.888 243.581 li
979.888 177.731 926.315 124.159 860.465 124.159 cv
cp
@
860.464 124.159 mo
860.465 203.884 li
.701961 .701961 .701961 rgb
f
860.464 124.159 mo
860.465 203.884 li
0 0 0 rgb
@
800.766 140.179 mo
840.613 209.197 li
@
756.901 183.788 mo
826.08 223.728 li
@
894.851 223.733 mo
963.868 183.886 li
@
880.261 209.173 mo
920.017 140.064 li
@
820.767 323.618 mo
741.042 323.618 li
@
820.767 297.043 mo
741.042 297.043 li
@
820.767 270.468 mo
741.042 270.468 li
@
820.767 243.615 mo
741.042 243.615 li
@
776.234 350.195 mo
776.234 352.74 778.297 354.803 780.842 354.803 cv
783.387 354.803 785.45 352.74 785.45 350.195 cv
785.45 347.65 783.387 345.587 780.842 345.587 cv
778.297 345.587 776.234 347.65 776.234 350.195 cv
cp
f
979.888 323.618 mo
900.163 323.618 li
@
979.888 297.043 mo
900.163 297.043 li
@
979.888 270.468 mo
900.163 270.468 li
@
979.888 243.615 mo
900.163 243.615 li
@
939.963 335.488 mo
939.963 243.585 li
939.963 199.715 904.334 164.021 860.464 164.021 cv
816.595 164.021 780.842 199.715 780.842 243.585 cv
780.842 350.195 li
@
939.963 350.195 mo
945.206 330.839 li
939.963 330.839 li
934.719 330.839 li
939.963 350.195 li
cp
f
991.746 363.436 mo
991.738 244.175 li
991.734 238.454 991.355 232.682 990.611 227.019 cv
986.436 195.246 970.828 166.146 946.66 145.08 cv
922.712 124.206 892.157 112.71 860.625 112.71 cv
854.909 112.71 849.118 113.091 843.417 113.843 cv
778.337 122.429 729.296 178.466 729.344 244.191 cv
729.353 363.436 li
740.912 363.436 li
740.912 363.351 740.912 244.183 740.912 244.183 cv
740.868 184.875 784.679 133.13 844.907 125.185 cv
910.387 116.547 970.205 162.899 978.826 228.512 cv
979.518 233.778 979.851 239.009 979.855 244.183 cv
979.855 363.436 li
991.746 363.436 li
cp
.729412 .631373 .533333 rgb
f
.602062 lw
991.746 363.436 mo
991.738 244.175 li
991.734 238.454 991.355 232.682 990.611 227.019 cv
986.436 195.246 970.828 166.146 946.66 145.08 cv
922.712 124.206 892.157 112.71 860.625 112.71 cv
854.909 112.71 849.118 113.091 843.417 113.843 cv
778.337 122.429 729.296 178.466 729.344 244.191 cv
729.353 363.436 li
740.912 363.436 li
740.912 363.351 740.912 244.183 740.912 244.183 cv
740.868 184.875 784.679 133.13 844.907 125.185 cv
910.387 116.547 970.205 162.899 978.826 228.512 cv
979.518 233.778 979.851 239.009 979.855 244.183 cv
979.855 363.436 li
991.746 363.436 li
cp
0 0 0 rgb
@
418.676 475.594 mo
415.141 469.472 li
489.717 426.415 li
493.251 432.538 li
418.676 475.594 li
cp
.729412 .631373 .533333 rgb
f
.603489 lw
418.676 475.594 mo
415.141 469.472 li
489.717 426.415 li
493.251 432.538 li
418.676 475.594 li
cp
0 0 0 rgb
@
415.141 491.673 mo
406.657 491.673 li
406.657 469.477 li
415.141 469.477 li
415.141 491.673 li
cp
.729412 .631373 .533333 rgb
f
415.141 491.673 mo
406.657 491.673 li
406.657 469.477 li
415.141 469.477 li
415.141 491.673 li
cp
0 0 0 rgb
@
663.136 491.673 mo
654.653 491.673 li
654.653 469.477 li
663.136 469.477 li
663.136 491.673 li
cp
.729412 .631373 .533333 rgb
f
663.136 491.673 mo
654.653 491.673 li
654.653 469.477 li
663.136 469.477 li
663.136 491.673 li
cp
0 0 0 rgb
@
521.347 392.288 mo
507.814 414.626 500.681 441.375 500.681 469.477 cv
500.681 454.079 498.448 439.944 489.717 426.415 cv
.501961 .501961 .501961 rgb
@
654.653 469.467 mo
651.118 475.589 li
517.683 398.55 li
521.217 392.428 li
654.653 469.467 li
cp
.729412 .631373 .533333 rgb
f
654.653 469.467 mo
651.118 475.589 li
517.683 398.55 li
521.217 392.428 li
654.653 469.467 li
cp
0 0 0 rgb
@
253.066 1007.64 mo
242.155 1026.51 235.911 1048.42 235.911 1071.79 cv
.501961 .501961 .501961 rgb
@
107.545 1093.98 mo
99.0612 1093.98 li
99.0612 1071.79 li
107.545 1071.79 li
107.545 1093.98 li
cp
.729412 .631373 .533333 rgb
f
107.545 1093.98 mo
99.0612 1093.98 li
99.0612 1071.79 li
107.545 1071.79 li
107.545 1093.98 li
cp
0 0 0 rgb
@
372.761 1093.98 mo
364.278 1093.98 li
364.278 1071.79 li
372.761 1071.79 li
372.761 1093.98 li
cp
.729412 .631373 .533333 rgb
f
372.761 1093.98 mo
364.278 1093.98 li
364.278 1071.79 li
372.761 1071.79 li
372.761 1093.98 li
cp
0 0 0 rgb
@
364.278 1071.79 mo
360.743 1077.91 li
249.575 1013.73 li
253.109 1007.6 li
364.278 1071.79 li
cp
.729412 .631373 .533333 rgb
f
364.278 1071.79 mo
360.743 1077.91 li
249.575 1013.73 li
253.109 1007.6 li
364.278 1071.79 li
cp
0 0 0 rgb
@
218.757 1007.64 mo
229.667 1026.51 235.911 1048.42 235.911 1071.79 cv
.501961 .501961 .501961 rgb
@
107.545 1071.79 mo
111.079 1077.91 li
222.248 1013.73 li
218.713 1007.6 li
107.545 1071.79 li
cp
.729412 .631373 .533333 rgb
f
107.545 1071.79 mo
111.079 1077.91 li
222.248 1013.73 li
218.713 1007.6 li
107.545 1071.79 li
cp
0 0 0 rgb
@
519.77 333.743 mo
519.77 340.812 li
375.343 340.812 li
375.343 333.743 li
519.77 333.743 li
cp
.729412 .631373 .533333 rgb
f
519.77 333.743 mo
519.77 340.812 li
375.343 340.812 li
375.343 333.743 li
519.77 333.743 li
cp
0 0 0 rgb
@
665.656 333.743 mo
665.656 253.978 600.265 187.619 520.5 187.619 cv
440.735 187.619 375.343 253.978 375.343 333.743 cv
.501961 .501961 .501961 rgb
@
529.392 341.752 mo
529.392 350.235 li
511.883 350.235 li
511.883 341.752 li
529.392 341.752 li
cp
.729412 .631373 .533333 rgb
f
529.392 341.752 mo
529.392 350.235 li
511.883 350.235 li
511.883 341.752 li
529.392 341.752 li
cp
0 0 0 rgb
@
529.392 179.135 mo
529.392 187.619 li
511.883 187.619 li
511.883 179.135 li
529.392 179.135 li
cp
.729412 .631373 .533333 rgb
f
529.392 179.135 mo
529.392 187.619 li
511.883 187.619 li
511.883 179.135 li
529.392 179.135 li
cp
0 0 0 rgb
@
665.656 333.743 mo
665.656 340.812 li
521.229 340.812 li
521.229 333.743 li
665.656 333.743 li
cp
.729412 .631373 .533333 rgb
f
665.656 333.743 mo
665.656 340.812 li
521.229 340.812 li
521.229 333.743 li
665.656 333.743 li
cp
0 0 0 rgb
@
131.815 321.86 mo
131.815 295.929 138.649 271.594 150.614 250.558 cv
.501961 .501961 .501961 rgb
@
275.718 344.04 mo
284.201 344.04 li
284.201 321.845 li
275.718 321.845 li
275.718 344.04 li
cp
.729412 .631373 .533333 rgb
f
275.718 344.04 mo
284.201 344.04 li
284.201 321.845 li
275.718 321.845 li
275.718 344.04 li
cp
0 0 0 rgb
@
122.807 344.04 mo
131.29 344.04 li
131.29 321.845 li
122.807 321.845 li
122.807 344.04 li
cp
.729412 .631373 .533333 rgb
f
122.807 344.04 mo
131.29 344.04 li
131.29 321.845 li
122.807 321.845 li
122.807 344.04 li
cp
0 0 0 rgb
@
272.183 328.137 mo
275.718 322.015 li
151.064 250.046 li
147.529 256.168 li
272.183 328.137 li
cp
.729412 .631373 .533333 rgb
f
272.183 328.137 mo
275.718 322.015 li
151.064 250.046 li
147.529 256.168 li
272.183 328.137 li
cp
0 0 0 rgb
@
634.091 657.843 mo
640.289 651.644 li
538.164 549.519 li
531.965 555.717 li
634.091 657.843 li
cp
.729412 .631373 .533333 rgb
f
634.091 657.843 mo
640.289 651.644 li
538.164 549.519 li
531.965 555.717 li
634.091 657.843 li
cp
0 0 0 rgb
@
495.194 660.097 mo
495.194 651.422 li
495.194 651.422 486.71 651.422 486.378 651.422 cv
486.378 680.323 li
486.71 680.323 495.194 680.323 495.194 680.323 cv
495.194 671.82 li
498.827 671.82 li
498.827 660.097 li
495.194 660.097 li
cp
.729412 .631373 .533333 rgb
f
495.194 660.097 mo
495.194 651.422 li
495.194 651.422 486.71 651.422 486.378 651.422 cv
486.378 680.323 li
486.71 680.323 495.194 680.323 495.194 680.323 cv
495.194 671.82 li
498.827 671.82 li
498.827 660.097 li
495.194 660.097 li
cp
0 0 0 rgb
@
640.273 660.097 mo
640.273 651.422 li
640.273 651.422 648.757 651.422 649.089 651.422 cv
649.089 680.323 li
640.273 680.323 li
640.273 671.82 li
636.64 671.82 li
636.64 660.097 li
640.273 660.097 li
cp
.729412 .631373 .533333 rgb
f
640.273 660.097 mo
640.273 651.422 li
640.273 651.422 648.757 651.422 649.089 651.422 cv
649.089 680.323 li
640.273 680.323 li
640.273 671.82 li
636.64 671.82 li
636.64 660.097 li
640.273 660.097 li
cp
0 0 0 rgb
@
531.921 554.692 mo
509.072 580.424 495.194 614.302 495.194 651.422 cv
.501961 .501961 .501961 rgb
@
531.921 776.555 mo
509.072 750.823 495.194 716.945 495.194 679.825 cv
@
640.233 680.282 mo
634.034 674.084 li
531.909 776.209 li
538.108 782.408 li
640.233 680.282 li
cp
.729412 .631373 .533333 rgb
f
640.233 680.282 mo
634.034 674.084 li
531.909 776.209 li
538.108 782.408 li
640.233 680.282 li
cp
0 0 0 rgb
@
215.53 678.261 mo
135.765 678.261 71.1026 742.923 71.1026 822.688 cv
.501961 .501961 .501961 rgb
@
241.531 678.261 mo
321.296 678.261 385.959 742.923 385.959 822.688 cv
@
222.544 677.888 mo
215.518 677.888 li
215.518 677.888 215.518 669.405 215.518 669.072 cv
241.293 669.072 li
241.293 669.405 241.293 677.888 241.293 677.888 cv
234.267 677.888 li
234.267 681.521 li
222.544 681.521 li
222.544 677.888 li
cp
.729412 .631373 .533333 rgb
f
222.544 677.888 mo
215.518 677.888 li
215.518 677.888 215.518 669.405 215.518 669.072 cv
241.293 669.072 li
241.293 669.405 241.293 677.888 241.293 677.888 cv
234.267 677.888 li
234.267 681.521 li
222.544 681.521 li
222.544 677.888 li
cp
0 0 0 rgb
@
222.544 831.439 mo
215.518 831.439 li
215.518 831.439 215.518 839.922 215.518 840.254 cv
241.293 840.254 li
241.293 839.922 241.293 831.439 241.293 831.439 cv
234.267 831.439 li
234.267 827.805 li
222.544 827.805 li
222.544 831.439 li
cp
.729412 .631373 .533333 rgb
f
222.544 831.439 mo
215.518 831.439 li
215.518 831.439 215.518 839.922 215.518 840.254 cv
241.293 840.254 li
241.293 839.922 241.293 831.439 241.293 831.439 cv
234.267 831.439 li
234.267 827.805 li
222.544 827.805 li
222.544 831.439 li
cp
0 0 0 rgb
@
215.518 822.787 mo
215.518 831.438 li
71.0902 831.438 li
71.0902 822.787 li
215.518 822.787 li
cp
.729412 .631373 .533333 rgb
f
215.518 822.787 mo
215.518 831.438 li
71.0902 831.438 li
71.0902 822.787 li
215.518 822.787 li
cp
0 0 0 rgb
@
385.72 822.787 mo
385.72 831.438 li
241.293 831.438 li
241.293 822.787 li
385.72 822.787 li
cp
.729412 .631373 .533333 rgb
f
385.72 822.787 mo
385.72 831.438 li
241.293 831.438 li
241.293 822.787 li
385.72 822.787 li
cp
0 0 0 rgb
@
607.589 1073.62 mo
613.921 1073.62 li
620.559 1073.62 li
620.559 1080.65 li
620.559 1080.65 li
601.257 1080.65 li
467.985 1080.65 li
467.985 1073.62 li
607.589 1073.62 li
cp
.501961 .501961 .501961 rgb
@
629.375 1073.62 mo
629.043 1073.62 620.559 1073.62 620.559 1073.62 cv
620.559 1093.98 li
629.375 1093.98 li
629.375 1073.62 li
cp
.729412 .631373 .533333 rgb
f
629.375 1073.62 mo
629.043 1073.62 620.559 1073.62 620.559 1073.62 cv
620.559 1093.98 li
629.375 1093.98 li
629.375 1073.62 li
cp
0 0 0 rgb
@
472.813 1078.43 mo
467.981 1073.6 li
522.251 1019.33 li
527.083 1024.16 li
472.813 1078.43 li
cp
.729412 .631373 .533333 rgb
f
472.813 1078.43 mo
467.981 1073.6 li
522.251 1019.33 li
527.083 1024.16 li
472.813 1078.43 li
cp
0 0 0 rgb
@
581.15 1078.43 mo
585.982 1073.6 li
531.712 1019.33 li
526.88 1024.16 li
581.15 1078.43 li
cp
.729412 .631373 .533333 rgb
f
581.15 1078.43 mo
585.982 1073.6 li
531.712 1019.33 li
526.88 1024.16 li
581.15 1078.43 li
cp
0 0 0 rgb
@
459.169 1073.62 mo
459.501 1073.62 467.985 1073.62 467.985 1073.62 cv
467.985 1080.65 li
467.985 1080.65 li
467.985 1093.98 li
459.169 1093.98 li
459.169 1073.62 li
cp
.729412 .631373 .533333 rgb
f
459.169 1073.62 mo
459.501 1073.62 467.985 1073.62 467.985 1073.62 cv
467.985 1080.65 li
467.985 1080.65 li
467.985 1093.98 li
459.169 1093.98 li
459.169 1073.62 li
cp
0 0 0 rgb
@
476.891 912.481 mo
476.891 919.637 li
781.859 919.637 li
781.859 912.481 li
476.891 912.481 li
cp
.501961 .501961 .501961 rgb
@
482.052 917.287 mo
477.22 912.455 li
531.489 858.185 li
536.321 863.018 li
482.052 917.287 li
cp
.729412 .631373 .533333 rgb
f
482.052 917.287 mo
477.22 912.455 li
531.489 858.185 li
536.321 863.018 li
482.052 917.287 li
cp
0 0 0 rgb
@
590.388 917.287 mo
595.22 912.455 li
540.95 858.185 li
536.118 863.018 li
590.388 917.287 li
cp
.729412 .631373 .533333 rgb
f
590.388 917.287 mo
595.22 912.455 li
540.95 858.185 li
536.118 863.018 li
590.388 917.287 li
cp
0 0 0 rgb
@
468.075 912.481 mo
468.407 912.481 476.891 912.481 476.891 912.481 cv
476.891 932.838 li
468.075 932.838 li
468.075 912.481 li
cp
.729412 .631373 .533333 rgb
f
468.075 912.481 mo
468.407 912.481 476.891 912.481 476.891 912.481 cv
476.891 932.838 li
468.075 932.838 li
468.075 912.481 li
cp
0 0 0 rgb
@
777.03 917.287 mo
781.862 912.455 li
727.593 858.185 li
722.761 863.018 li
777.03 917.287 li
cp
.729412 .631373 .533333 rgb
f
777.03 917.287 mo
781.862 912.455 li
727.593 858.185 li
722.761 863.018 li
777.03 917.287 li
cp
0 0 0 rgb
@
668.694 917.287 mo
663.862 912.455 li
718.132 858.185 li
722.964 863.018 li
668.694 917.287 li
cp
.729412 .631373 .533333 rgb
f
668.694 917.287 mo
663.862 912.455 li
718.132 858.185 li
722.964 863.018 li
668.694 917.287 li
cp
0 0 0 rgb
@
790.675 912.481 mo
790.342 912.481 781.859 912.481 781.859 912.481 cv
781.859 932.838 li
790.675 932.838 li
790.675 912.481 li
cp
.729412 .631373 .533333 rgb
f
790.675 912.481 mo
790.342 912.481 781.859 912.481 781.859 912.481 cv
781.859 932.838 li
790.675 932.838 li
790.675 912.481 li
cp
0 0 0 rgb
@
107.83 514.761 mo
103.447 522.353 li
228.524 594.566 li
232.908 586.975 li
107.83 514.761 li
cp
.729412 .631373 .533333 rgb
f
107.83 514.761 mo
103.447 522.353 li
228.524 594.566 li
232.908 586.975 li
107.83 514.761 li
cp
0 0 0 rgb
@
248.549 522.397 mo
248.549 522.397 257.032 522.397 257.364 522.397 cv
257.364 493.496 li
257.032 493.496 248.549 493.496 248.549 493.496 cv
248.549 522.397 li
cp
.729412 .631373 .533333 rgb
f
248.549 522.397 mo
248.549 522.397 257.032 522.397 257.364 522.397 cv
257.364 493.496 li
257.032 493.496 248.549 493.496 248.549 493.496 cv
248.549 522.397 li
cp
0 0 0 rgb
@
103.469 522.397 mo
103.469 522.397 94.9858 522.397 94.6534 522.397 cv
94.6534 493.496 li
103.469 493.496 li
103.469 522.397 li
cp
.729412 .631373 .533333 rgb
f
103.469 522.397 mo
103.469 522.397 94.9858 522.397 94.6534 522.397 cv
94.6534 493.496 li
103.469 493.496 li
103.469 522.397 li
cp
0 0 0 rgb
@
228.524 594.566 mo
241.201 574.56 248.549 547.236 248.549 522.397 cv
.501961 .501961 .501961 rgb
@
228.524 421.419 mo
241.201 441.426 248.549 468.75 248.549 493.589 cv
@
107.83 501.203 mo
103.447 493.611 li
228.524 421.397 li
232.908 428.989 li
107.83 501.203 li
cp
.729412 .631373 .533333 rgb
f
107.83 501.203 mo
103.447 493.611 li
228.524 421.397 li
232.908 428.989 li
107.83 501.203 li
cp
0 0 0 rgb
@
201.625 74.4182 mo
201.625 97.4773 li
201.625 100.264 202.582 101.718 204.522 101.718 cv
206.546 101.718 207.459 100.4 207.459 97.4333 cv
207.459 74.3504 li
207.459 71.5324 206.678 70.0913 204.496 70.0913 cv
202.652 70.0913 201.625 71.4242 201.625 74.4182 cv
cp
216.281 75.3955 mo
216.281 96.3241 li
216.281 105.277 212.068 109.116 204.184 109.116 cv
196.7 109.116 192.85 105.181 192.85 96.4121 cv
192.85 75.1626 li
192.85 66.452 197.639 62.6494 204.584 62.6494 cv
211.577 62.6494 216.281 66.3878 216.281 75.3955 cv
cp
.501961 .501961 .501961 rgb
f
220.934 63.3241 mo
239.646 63.3241 li
239.646 70.997 li
229.621 70.997 li
229.621 81.2771 li
239.078 81.2771 li
239.078 88.95 li
229.621 88.95 li
229.621 108.439 li
220.934 108.439 li
220.934 63.3241 li
cp
f
260.507 101.447 mo
262.198 101.447 li
265.601 101.447 266.165 99.2282 266.165 95.708 cv
266.165 75.5055 li
266.165 72.1741 265.417 70.3608 262.132 70.3608 cv
260.507 70.3608 li
260.507 101.447 li
cp
251.82 63.3241 mo
262.487 63.3241 li
271.783 63.3241 274.988 67.563 274.988 76.9007 cv
274.988 93.8599 li
274.988 101.634 273.345 108.439 263.078 108.439 cv
251.82 108.439 li
251.82 63.3241 li
cp
f
287.932 74.4182 mo
287.932 97.4773 li
287.932 100.264 288.889 101.718 290.829 101.718 cv
292.853 101.718 293.766 100.4 293.766 97.4333 cv
293.766 74.3504 li
293.766 71.5324 292.985 70.0913 290.803 70.0913 cv
288.958 70.0913 287.932 71.4242 287.932 74.4182 cv
cp
302.588 75.3955 mo
302.588 96.3241 li
302.588 105.277 298.375 109.116 290.491 109.116 cv
283.007 109.116 279.157 105.181 279.157 96.4121 cv
279.157 75.1626 li
279.157 66.452 283.946 62.6494 290.891 62.6494 cv
297.884 62.6494 302.588 66.3878 302.588 75.3955 cv
cp
f
315.507 74.4182 mo
315.507 97.4773 li
315.507 100.264 316.464 101.718 318.404 101.718 cv
320.428 101.718 321.341 100.4 321.341 97.4333 cv
321.341 74.3504 li
321.341 71.5324 320.56 70.0913 318.378 70.0913 cv
316.533 70.0913 315.507 71.4242 315.507 74.4182 cv
cp
330.163 75.3955 mo
330.163 96.3241 li
330.163 105.277 325.95 109.116 318.066 109.116 cv
310.582 109.116 306.732 105.181 306.732 96.4121 cv
306.732 75.1626 li
306.732 66.452 311.521 62.6494 318.466 62.6494 cv
325.458 62.6494 330.163 66.3878 330.163 75.3955 cv
cp
f
343.503 81.9903 mo
344.578 81.9903 li
347.474 81.9903 348.659 81.0754 348.659 76.875 cv
348.659 74.6951 li
348.659 71.6681 348.05 70.1628 344.856 70.1628 cv
343.503 70.1628 li
343.503 81.9903 li
cp
343.478 88.8272 mo
343.478 108.439 li
334.816 108.439 li
334.816 63.3241 li
346.074 63.3241 li
353.631 63.3241 357.371 66.6463 357.371 74.5356 cv
357.371 76.1582 li
357.371 82.588 354.801 84.4984 352.868 85.4133 cv
355.673 86.7682 356.99 88.8308 356.99 95.125 cv
356.99 99.4813 356.924 106.067 357.302 108.439 cv
348.908 108.439 li
348.347 106.401 348.387 100.526 348.387 94.7675 cv
348.387 89.6926 347.808 88.8272 344.504 88.8272 cv
343.478 88.8272 li
cp
f
369.025 94.5347 mo
369.025 97.6588 li
369.025 100.625 369.762 102.004 371.742 102.004 cv
373.74 102.004 374.21 99.9616 374.21 97.833 cv
374.21 93.5739 373.406 92.3419 368.801 88.488 cv
363.719 84.1831 361.108 81.6346 361.108 74.9884 cv
361.108 68.5439 363.242 62.6054 371.786 62.6054 cv
380.861 62.6054 382.2 68.7933 382.2 73.958 cv
382.2 76.5542 li
374.008 76.5542 li
374.008 73.8517 li
374.008 71.1144 373.557 69.7595 371.841 69.7595 cv
370.242 69.7595 369.725 71.1382 369.725 73.6922 cv
369.725 76.4093 370.216 77.7514 373.949 80.6611 cv
380.582 85.8754 382.966 88.8015 382.966 96.2324 cv
382.966 103.295 380.549 109.116 371.588 109.116 cv
362.982 109.116 360.525 103.924 360.525 97.239 cv
360.525 94.5347 li
369.025 94.5347 li
cp
f
408.319 90.0501 mo
407.677 84.2766 406.779 75.4963 406.357 71.1767 cv
406.012 71.1767 li
405.858 74.3211 404.788 84.4709 404.19 90.0501 cv
408.319 90.0501 li
cp
403.434 97.7028 mo
402.323 108.439 li
393.475 108.439 li
399.855 63.3241 li
412.792 63.3241 li
419.323 108.439 li
410.299 108.439 li
409.056 97.7028 li
403.434 97.7028 li
cp
f
422.407 108.439 mo
422.407 63.3241 li
432.007 63.3241 li
433.437 68.8299 437.958 89.2635 438.317 91.2436 cv
438.526 91.2436 li
438.046 85.241 437.738 77.0345 437.738 70.7367 cv
437.738 63.3241 li
445.794 63.3241 li
445.794 108.439 li
436.103 108.439 li
435.167 104.147 430.236 80.8041 429.946 79.3593 cv
429.711 79.3593 li
430.048 84.6708 430.316 93.6418 430.316 100.733 cv
430.316 108.439 li
422.407 108.439 li
cp
f
459.886 101.447 mo
461.576 101.447 li
464.979 101.447 465.544 99.2282 465.544 95.708 cv
465.544 75.5055 li
465.544 72.1741 464.796 70.3608 461.51 70.3608 cv
459.886 70.3608 li
459.886 101.447 li
cp
451.199 63.3241 mo
461.866 63.3241 li
471.161 63.3241 474.366 67.563 474.366 76.9007 cv
474.366 93.8599 li
474.366 101.634 472.724 108.439 462.456 108.439 cv
451.199 108.439 li
451.199 63.3241 li
cp
f
494.666 94.5347 mo
494.666 97.6588 li
494.666 100.625 495.403 102.004 497.383 102.004 cv
499.382 102.004 499.851 99.9616 499.851 97.833 cv
499.851 93.5739 499.048 92.3419 494.442 88.488 cv
489.36 84.1831 486.749 81.6346 486.749 74.9884 cv
486.749 68.5439 488.883 62.6054 497.427 62.6054 cv
506.503 62.6054 507.841 68.7933 507.841 73.958 cv
507.841 76.5542 li
499.649 76.5542 li
499.649 73.8517 li
499.649 71.1144 499.198 69.7595 497.482 69.7595 cv
495.883 69.7595 495.366 71.1382 495.366 73.6922 cv
495.366 76.4093 495.858 77.7514 499.591 80.6611 cv
506.224 85.8754 508.607 88.8015 508.607 96.2324 cv
508.607 103.295 506.191 109.116 497.229 109.116 cv
488.623 109.116 486.166 103.924 486.166 97.239 cv
486.166 94.5347 li
494.666 94.5347 li
cp
f
516.729 70.997 mo
510.159 70.997 li
510.159 63.3241 li
532.006 63.3241 li
532.006 70.997 li
525.394 70.997 li
525.394 108.439 li
516.729 108.439 li
516.729 70.997 li
cp
f
545.316 90.0501 mo
544.675 84.2766 543.776 75.4963 543.355 71.1767 cv
543.01 71.1767 li
542.856 74.3211 541.785 84.4709 541.188 90.0501 cv
545.316 90.0501 li
cp
540.432 97.7028 mo
539.321 108.439 li
530.473 108.439 li
536.853 63.3241 li
549.79 63.3241 li
556.321 108.439 li
547.297 108.439 li
546.053 97.7028 li
540.432 97.7028 li
cp
f
568.091 63.3241 mo
568.091 108.439 li
559.427 108.439 li
559.427 63.3241 li
568.091 63.3241 li
cp
f
582.216 81.9903 mo
583.29 81.9903 li
586.187 81.9903 587.372 81.0754 587.372 76.875 cv
587.372 74.6951 li
587.372 71.6681 586.763 70.1628 583.569 70.1628 cv
582.216 70.1628 li
582.216 81.9903 li
cp
582.19 88.8272 mo
582.19 108.439 li
573.529 108.439 li
573.529 63.3241 li
584.786 63.3241 li
592.344 63.3241 596.084 66.6463 596.084 74.5356 cv
596.084 76.1582 li
596.084 82.588 593.514 84.4984 591.581 85.4133 cv
594.386 86.7682 595.703 88.8308 595.703 95.125 cv
595.703 99.4813 595.637 106.067 596.014 108.439 cv
587.621 108.439 li
587.06 106.401 587.1 100.526 587.1 94.7675 cv
587.1 89.6926 586.521 88.8272 583.217 88.8272 cv
582.19 88.8272 li
cp
f
607.734 94.5347 mo
607.734 97.6588 li
607.734 100.625 608.471 102.004 610.447 102.004 cv
612.449 102.004 612.919 99.9616 612.919 97.833 cv
612.919 93.5739 612.119 92.3419 607.51 88.488 cv
602.428 84.1831 599.817 81.6346 599.817 74.9884 cv
599.817 68.5439 601.951 62.6054 610.495 62.6054 cv
619.57 62.6054 620.909 68.7933 620.909 73.958 cv
620.909 76.5542 li
612.717 76.5542 li
612.717 73.8517 li
612.717 71.1144 612.266 69.7595 610.55 69.7595 cv
608.951 69.7595 608.434 71.1382 608.434 73.6922 cv
608.434 76.4093 608.925 77.7514 612.658 80.6611 cv
619.292 85.8754 621.675 88.8015 621.675 96.2324 cv
621.675 103.295 619.259 109.116 610.297 109.116 cv
601.691 109.116 599.234 103.924 599.234 97.239 cv
599.234 94.5347 li
607.734 94.5347 li
cp
f
76.13 147.009 mo
65.6501 147.009 li
65.6501 160.549 li
77.2117 160.549 li
76.8891 162.414 li
63.6407 162.414 li
63.6407 131.75 li
76.6691 131.75 li
76.6691 133.616 li
65.6501 133.616 li
65.6501 145.143 li
76.13 145.143 li
76.13 147.009 li
cp
f
83.2254 160.555 mo
86.5733 160.555 li
93.0086 160.555 94.9777 155.331 94.9777 146.342 cv
94.9777 137.51 92.3962 133.611 86.6173 133.611 cv
83.2254 133.611 li
83.2254 160.555 li
cp
81.2123 131.75 mo
87.2883 131.75 li
93.8446 131.75 97.0825 136.617 97.0825 146.166 cv
97.0825 156.609 94.2443 162.414 86.7493 162.414 cv
81.2123 162.414 li
81.2123 131.75 li
cp
f
104.357 131.75 mo
104.357 162.414 li
102.344 162.414 li
102.344 131.75 li
104.357 131.75 li
cp
f
114.522 133.616 mo
107.507 133.616 li
107.507 131.75 li
123.55 131.75 li
123.55 133.616 li
116.535 133.616 li
116.535 162.414 li
114.522 162.414 li
114.522 133.616 li
cp
f
134.525 149.545 mo
132.343 140.959 131.045 135.844 130.682 133.71 cv
130.59 133.71 li
130.143 136.282 128.709 142.373 126.967 149.545 cv
134.525 149.545 li
cp
126.505 151.41 mo
123.832 162.414 li
121.819 162.414 li
121.819 162.414 129.417 131.751 129.417 131.75 cv
132.039 131.75 li
139.945 162.414 li
137.752 162.414 li
135.031 151.41 li
126.505 151.41 li
cp
f
145.808 160.604 mo
150.461 160.604 li
154.616 160.604 156.808 157.929 156.808 153.538 cv
156.808 148.845 154.227 146.689 149.786 146.689 cv
145.808 146.689 li
145.808 160.604 li
cp
149.874 144.879 mo
154 144.879 155.738 142.912 155.738 139.197 cv
155.738 135.88 153.989 133.563 150.45 133.563 cv
145.808 133.563 li
145.808 144.879 li
149.874 144.879 li
cp
143.798 131.75 mo
150.916 131.75 li
155.041 131.75 157.791 134.37 157.791 139.01 cv
157.791 143.28 155.723 144.994 153.882 145.625 cv
156.306 146.393 158.865 148.639 158.865 153.452 cv
158.865 158.776 155.833 162.414 150.604 162.414 cv
143.798 162.414 li
143.798 131.75 li
cp
f
163.533 131.75 mo
165.546 131.75 li
165.546 160.551 li
176.786 160.551 li
176.334 162.414 li
163.533 162.414 li
163.533 131.75 li
cp
f
192.604 147.009 mo
182.124 147.009 li
182.124 160.549 li
193.686 160.549 li
193.363 162.414 li
180.115 162.414 li
180.115 131.75 li
193.143 131.75 li
193.143 133.616 li
182.124 133.616 li
182.124 145.143 li
192.604 145.143 li
192.604 147.009 li
cp
f
206.641 154.695 mo
206.868 158.23 208.695 160.921 212.413 160.921 cv
215.951 160.921 217.957 159.123 217.957 154.8 cv
217.957 151.133 216.608 149.252 212.251 147.141 cv
207.73 144.972 205.574 142.899 205.574 138.526 cv
205.574 134.764 207.976 131.387 212.633 131.387 cv
217.935 131.387 219.471 135.365 219.559 138.711 cv
217.55 138.711 li
217.414 137.395 216.963 133.242 212.497 133.242 cv
209.057 133.242 207.628 135.653 207.628 138.341 cv
207.628 141.736 209.149 143.344 213.146 145.275 cv
218.419 147.842 220.058 150.451 220.058 154.658 cv
220.058 159.519 217.484 162.777 212.365 162.777 cv
206.795 162.777 204.852 159.068 204.584 154.695 cv
206.641 154.695 li
cp
f
228.873 133.616 mo
221.859 133.616 li
221.859 131.75 li
237.901 131.75 li
237.901 133.616 li
230.886 133.616 li
230.886 162.414 li
228.873 162.414 li
228.873 133.616 li
cp
f
243.357 145.779 mo
248.124 145.779 li
252.117 145.779 253.599 143.238 253.599 139.382 cv
253.599 136.02 252.074 133.609 248.315 133.609 cv
243.357 133.609 li
243.357 145.779 li
cp
243.357 147.638 mo
243.357 162.414 li
241.344 162.414 li
241.344 131.75 li
248.462 131.75 li
253.342 131.75 255.744 134.676 255.744 139.377 cv
255.744 144.054 253.577 146.034 251.56 146.665 cv
254.695 147.613 255.425 150.432 255.425 154.583 cv
255.425 155.799 li
255.425 158.254 255.473 160.749 255.876 162.414 cv
253.779 162.414 li
253.372 161.019 253.372 158.102 253.372 155.709 cv
253.372 154.717 li
253.372 150.179 252.514 147.638 247.945 147.638 cv
243.357 147.638 li
cp
f
262.242 146.831 mo
262.242 156.505 264.423 160.96 268.593 160.96 cv
272.85 160.96 274.896 156.512 274.896 146.921 cv
274.896 136.854 272.674 133.205 268.549 133.205 cv
264.512 133.205 262.242 137.521 262.242 146.831 cv
cp
277.001 146.791 mo
277.001 156.769 274.867 162.821 268.501 162.821 cv
262.366 162.821 260.137 157.035 260.137 146.921 cv
260.137 136.858 262.773 131.343 268.593 131.343 cv
274.731 131.343 277.001 136.561 277.001 146.791 cv
cp
f
282.303 131.75 mo
284.313 131.75 li
284.313 147.774 li
286.817 144.454 292.497 136.594 296.076 131.75 cv
298.371 131.75 li
289.035 144.433 li
298.683 162.414 li
296.303 162.414 li
287.679 146.116 li
284.313 150.518 li
284.313 162.414 li
282.303 162.414 li
282.303 131.75 li
cp
f
314.077 147.009 mo
303.597 147.009 li
303.597 160.549 li
315.158 160.549 li
314.836 162.414 li
301.587 162.414 li
301.587 131.75 li
314.616 131.75 li
314.616 133.616 li
303.597 133.616 li
303.597 145.143 li
314.077 145.143 li
314.077 147.009 li
cp
f
67.2444 71.0021 mo
60.7182 71.0021 li
60.7182 63.3791 li
82.4303 63.3791 li
82.4303 71.0021 li
75.8549 71.0021 li
75.8549 108.209 li
67.2444 108.209 li
67.2444 71.0021 li
cp
f
92.5506 108.209 mo
92.5506 93.8521 li
92.5506 93.13 92.4358 92.3231 92.2334 91.5327 cv
84.3559 63.3791 li
93.7487 63.3791 li
94.9576 69.8424 96.3635 77.2712 96.9215 82.9195 cv
97.2005 82.9195 li
97.9281 77.5557 99.3613 69.9627 100.532 63.3791 cv
109.422 63.3791 li
101.364 92.252 li
101.249 92.7991 101.161 93.2476 101.161 94.1831 cv
101.161 108.209 li
92.5506 108.209 li
cp
f
120.275 83.5978 mo
121.67 83.5978 li
124.941 83.5978 125.636 81.7652 125.636 78.0316 cv
125.636 74.9381 li
125.636 72.0415 124.957 70.1733 122.08 70.1733 cv
120.275 70.1733 li
120.275 83.5978 li
cp
111.643 63.3791 mo
123.136 63.3791 li
130.581 63.3791 134.274 67.315 134.274 75.2554 cv
134.274 77.9933 li
134.274 85.8461 131.309 90.5863 122.802 90.5863 cv
120.275 90.5863 li
120.275 108.209 li
111.643 108.209 li
111.643 63.3791 li
cp
f
155.887 88.409 mo
146.648 88.409 li
146.648 100.63 li
157.485 100.63 li
156.445 108.209 li
138.015 108.209 li
138.015 63.3791 li
156.38 63.3791 li
156.38 71.0021 li
146.648 71.0021 li
146.648 80.827 li
155.887 80.827 li
155.887 88.409 li
cp
f
168.311 94.391 mo
168.311 97.4954 li
168.311 100.444 169.044 101.814 171.008 101.814 cv
172.999 101.814 173.464 99.7848 173.464 97.6677 cv
173.464 93.4364 172.671 92.211 168.092 88.3817 cv
163.043 84.1038 160.444 81.571 160.444 74.9682 cv
160.444 68.565 162.567 62.6624 171.057 62.6624 cv
180.072 62.6624 181.407 68.8112 181.407 73.9425 cv
181.407 76.5245 li
173.261 76.5245 li
173.261 73.8385 li
173.261 71.117 172.818 69.774 171.111 69.774 cv
169.52 69.774 169.005 71.1416 169.005 73.6799 cv
169.005 76.3796 169.498 77.7143 173.207 80.6055 cv
179.799 85.786 182.162 88.6962 182.162 96.0786 cv
182.162 103.097 179.766 108.882 170.86 108.882 cv
162.31 108.882 159.864 103.724 159.864 97.0797 cv
159.864 94.391 li
168.311 94.391 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 26.3.1
%%For: (Maksim Kratkovski) ()
%%Title: (SET Doors+Stairs-temp_05.eps)
%%CreationDate: 9/7/2022 6:16 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6qi;`-PpZ@>!<!Fb"Us%1YA8c$O::tl/5Va;3TJ)'CtP>m@uM35NEZ$h="Q;ZlCR\Jp%Njk3JYGlbUSl!SlpD?+k;2__;OAC
%n2rr7kXYM/hnT0ejm,/!hu(fmmAA]86]?.(QB6:=djIBVdGM\9oo&:IpY8I5'kZ<+DW\MUg`LHLBMBR0^3T_V2_SLPqpjF[cX2(o
%h;QVZ2fHJ.g$\@-B<QNoGkOZ'jOrsF04)><o<5e)X(TcYLHKYToDI/'jf92q2fHHVp23rL-5NJ^q!^Lq-Vm;;pta)BrqcGkn%X>A
%.s_-5f0B:)56$Y8e?AYfDdL)'-S:Xn#.3UGJ$U49K:_*!nNZud`pikobO=a:jl\0ZoC$H(qD713K\uga:Jf='c\j^F2_Vmnp@d1O
%QZ$3RMrYn!rE)8=*FJa'g%V],BhN[9?1R<nTBoCns0_ac[j_'4:DIS3i&02aIta^8q"<*dJ*Us<^Z"ps9=n?ao;c4=nW'P,P\E'h
%q)I(1iSk"Q"2[N:I"2%QRr;XsHhW,5hPP=WG<[Z&acGs&^KG0/2s)gMUpBl3$gf:<-8/"jA4`4>9C.M#6sff\o#8BCD"kClSpgRs
%X\lt&gNUDXq7gI[=2O7@B".^7qc>H-rkn&gmpmOKbF22N0A_*Tig!9N<HWW\%"p;E(V]be^O>hLO"]>rRD4%?4_Ehh]4IGtZbQP>
%S%j=DV\a9do*X5R^\mfElefGPYAEi,_q],rb=.kD1Zp<Ik,(bKF,IT+9g4P^(M)mag%F&r'e8cU<(u)NKR/.Dp>mB'^A_96<>Ip&
%(f:#[`F^Cp2fE&P]i)AQERA^kgs%VPDuSWt04XP?h2BnASIiOsr*ldBRVmTE)gfVDs5j,rrqZ5nQPdoUlk]DPk3ZMHbDsp*4[Ur9
%phsO;ce\Rrn$r;2),e?G;Xh@WHp8U`1aW&n$(n)J:K,\;:FA?/O-P=O9#4l2i3lO&>:HJ6=5"S\Basenq;UG:iO7<V)h,\Kgib[8
%[_i-,*Y.u+E54W7'0\RM9&\g.'5fe#oHA(Y2Ha7[n'k/'W.1C(Pk]gacnBdeD<R>\<^/sLn/_7r;u"YPqf(c:kSLtn06@QY;3_WW
%<fKl548Y%F:lKk^XZE?5!o/O5iB-HfSP\IT`5_+6lWEFKiO_:R^"3a-o<i`;IQ$&\b&>Z\gkJ#P40$_ce=Pu=2KAKq\"SjHdlK>^
%0`$Uop^8*A3l#rT4GrVK\"SlXY*5jGU4]Ku^cS)&fQa;>T/ph`N]h:/_=OqZhJ3AKG\rn`=mPcqdp)_XpRm.6UZ`gBf:M<KkTdh%
%2PkQg;9)*I`cp3j%a*g,jh?n"q",S!kt]N!1er72]TS3dKeF(2>9/-/T8pV!=U1"IpPJG>C%H>6^L+%n$M8E<ZGu2s<Q`n'f)a;L
%:Ae!f?<=m*,EM`e?.YJTf")?UdX;S+PfUmHC@[Y)cF/f,3ZDar%jrH+LW#\J:%gM]`VO6R'>O%c=Cn_?)"jZsVgcmsrk8<\06oZm
%/R!Yh=0;>nqGY.p7K6\[rq==FDK#3Cor!9+p\OX\;nqD`j&(`cTDE\SVgkm7okWi"`of(3poa4hJ,<UL'7Gi2@Ete2&l5F[jhq(-
%'DoR8rZWE(G?bYY5iV_:p]!ZE^5g1s=SM.6n8\A(O/HL//3Zf45>a3+JXh'%a(_]s*;([$c`nP]X8^%mrr7(DIn)Bmk^)FV.$$l$
%oX@H0f7"d=rV`?uhJl1oqm4R-g>r;(*H,O?)G9'<KQ7#g$hX/A0a:YkjJqtSa4mXXWad%6iVJ&\;nRNk7&qPJmlkHDr9sO^gZ(?c
%l[N[Zhf-*emrt;W,+fUW`IG2^gEKnZ'e)F%0a@!=r=o'2]@*[=hiA("+N)_[4</8#2W=(OXBD%R%XimchI]iEkLM,Il0O>[k`>=d
%GD?XPCVSGUCV_967bL8%T.Ks\33'XCqf5Fo3WmsIg"XsT,10/%d%Sd6YYI%@jlubekUWh4@+]D`82O[j/*gAAfEJHWWXbD/)>h.j
%4!F-DDlX=Q/]/.-U$mbVTIraVkPZ6mEt_C&iHD0h2"poj1%2L\O%nBr1>W(9oA=@!p,6[CO5].udX.oeQ"E.s"[Vb6S*FL&\N,UB
%K*0iJ_h[ZihJDQ=P)t^_BKq\8f@-s7cA&7GS[Al!B"c5U)NX3f_bb>R:Wh?k,.@%Oa75kXYJ\nI\(8I)<fJ>VU!km4Y,AQ`DOmlR
%9"W+/:ipQi;U>_5?1_A<CrZA_"12=g[PiCNU#TaCg^MWH3h.PD`@tH:Bmk?U\*=1-^2lpR_rqNH\P?BO?1>.8_fTaSc8b2J]IclG
%s+Na'3-9q>2(q(<n>*r@DDV"\N)fC,mQY,+Y)k]VR-%fWZ^7ckFX1'0Oj5HRj3'-,>=N`R5@"N@BRWTeg,QP&(t6/#f=B/jrH-ZK
%^0tK3+1_OlW/Cti:Rq!9EU\^lSZTQr!UO%Ois'I=+n!njqT:Sdk35YQPO`2h#PZZZD+H/ZdI$.()H=Q>N6>L0^_^8Df&\qNBWN?K
%,o_fXfAU?_s#.-d*Y5`oJ*GV[((A*Kj8&!'/p!:@[S-==8[dq3Fa`'"n97k58S..cq0J[(Wcd@T[R3W21D^-j?_+]JIX6,hNrF4^
%VeI(+5BakeQU*$C*k3hjO(+JXfDE3F4d,!%n]U`Y4LB'%9u(\tA_QOQIK8E^L^2N[5UA%Zq=sHtq+eM48D=1:\^=0GmjgbGfd.S5
%(HRKGa=>cKVH)?5\]._%7ZpG@f@Ys=rigjm/QcS!-Pu#![P3_.:laJPNQ0S8+GQ/rnek=I\a0LCd'kq[PJ1EuDh:CA4^FI4G2@k3
%dH$hKhC6ELRQkXh;qiRWN,05JkQ^HdI$JIdUPnk2n6[L,"h1DI3%6KN@jnruGdL8(;PpIFe."i^]DUR0d?V*+$=s^[4Uh:2M8%[X
%<e&H,(<6BFBPRW18mNH6&g$]rmP>^0k$uBMoA-jpKYK/=ZbQ7?iC:nDPJ2IM`POW8E]J(#aGJKVXui_.iF$/3,G@^:Bi3dBN@rp7
%P:H#AHWA(&hk@`:jiY_nkk:L;)9:o:_8LZ#'jU(SR;cW[ZDD",a_WFu[Vk:9%;%cMj_=bFaAGa6(;D/.[2W4NQsGn:=;NrAVj"l:
%<5H1Xj3UlGZAJlhZmSdBDKUMF<?lS%_gGJMI35?)2"shd(7bn;Q_s;:W_ae;qZoZ6qV,"!ot,s@pPk8Q4Uc2u8PEdO`iZrQ5t,<)
%-o4:#Jr@BlACSu^7uP?g)u?l/H<pMUXbF1e/O$<J%@Ac8WN8I2IUb<jR%Q?ULhJ'f5%M]R,7[IcX)beSKs#E_BQP/XN\F<-"oVlS
%BiQ:L1ECWZTXBaETTa(3.1WZSH*-K1@'(ra&(l3k9!kW*!7$g5Qh8;,SlH`NW4O0+%[`<par$[X\S/hqe'*0bOKG;)N)\*0\8fL<
%O]Vi[BAO'Lj?._YD8K"o^7X:9f3YW(N<\bP@a,<o@aW14VU]^B]cbIHUQWa7Ko`oGj?9;aC])TQLgd(B]@g4RnY()2B$hXTDp`9>
%b!oT_-B'b+kIf)O]"P7*Vh-^g9/"[Ml'p0__:lUjZi7a4=D:rg%Mj(_>go:(L=M3B*EFDpbObURd:+8*OA#9/69%q!d9*6&,"f#d
%#$Rur.dUB&Dpl4Q?'iZIo,aBkdkNKl'tC:3<2$#ueoBP%K@DF)beI0<CieJ]/oRPP6t<89pE>(DpCkh]8B\op*piX=mJ7K'j58]'
%R(,jc\jn_?'3*s>M)_9-pZ#pn&H@#00>XO@,d>c?+5-Yhs#uZq62Q"ap$Sl/>uedpDZ$T*MG9]^XbC0pc,U-l#P1WWP@_KIU[Mp0
%'!V5Kb\f?pXa40Q#JDS&8PuIERY+0HgBFt`<14ne\mp;+K)[t5+1c9`lWP1BQ/6;gN)=P`l?7p4]K^A_iFcA-5hFaka.WE\8R:(c
%gleJQVX:b-@WiY-i5i@.Oif^aHs"rc7>Wh$YSN5,Te9c>NCfd=nCF/>;>a^O59ES.S"5\dC,=Pq:RiI2e(a`V7,kQQ<HWNWNZB6g
%)s(_=fF;kl\Lc5@gm+W0_RVJhpi,;cgu,X.X\+gfDtAE(P]>ES\s7-D5.*!M50cnOAR;)+Fi_"dh^,gkdJ*?N"S-PM=2s`+]<G#>
%pMm:Mh$8A)?aa@fX'`k)^Wft)61nLmm)BbYqV?i;_E(@=Fii3-qo!>s$0q4e+$+Lf507$`L!QYLPG:(B)dVrY<Mg@o[IM/eNi_3^
%8=YgEM[/q/po]o5f;P2XZm0Dbq+S!*o72P^W/Ub9Cj\@kQc\n$>?Ae:8Z@<H0eV06R6.s'a>J:M<Gn;e5n#)I*O]I`%d5tEGP>"C
%4k/<-`U59<SSml]_W](<<'XYLF1.=!FlG*dD)5^ls!(Z\`6%Cef(b#%pnZ."TL@lnep.ehjC2+hD5+a=NISBM6?adAYFH$M(]D@u
%Sn`c0p`G9Rn)EKC,L8duca_;M*P1>ubL+$'YO8W,=Ag=mhVW*BN:VKO-gde^YgjjXj#Zpbl[tmh]tOiW86sEgqd)3NYBnn4h#0Ih
%(&-QhYPmgRPE2d(hs0U\g!pgDpEBS:nfI6#,ZitX54%I*9mk12IttKTWTlLAjgQ>f^&Ap1#kmTCbr<]i5mDr'-iE8sRoaP-BV2GW
%n?_#bGk_0G:Gi0*"^h6,)gUB'CZI`CIId./g%*[s?@=IKrls1VhgbOpf7/&:oZ</4^OGe#06[Bg`Ue:lhS/np0>?<Ant5ror:-!,
%O+3d2r-^'Dn'`if9@3]ad^!,R>X$IGTC;E)\_79sI;m3`=j")-;leF(hfn\YjgRI":ZG3RT"TQWdnf(.rolWhoDJ-t+5X[/B!("c
%Bo:Uc[&Zr;gN#PLB'Y-J/4k;Ws)m14?$EK%Gk((D[s5Ygqj7TclG_NH^6KbSr5$"Mj%WFnHZ'`bHIT!W$1ml`mdBD-1;NXsmD4-u
%o<6Ks4o^k`Hhl"F4mII!T"TUH[Qj[=6i.td@A00ZN7\?oX*(>YKg5&<M60_6J&"$86XIG&a2bR_nEe]+Q[aD[m+[#8q0]Z$qu(a=
%ZMX$Y2m5EYq&p5"oN%ht%F)>1WkO#L.1TY%+*h&e?Y=ItCbM99eiqkdRGr_l_opY=^NdBfc1`mK^!Pj\[/"&*m":[JeE=JKgW4PB
%gM>5$@[MM]^\IkMr8h]VpK>NtVNosO+4FrkfE:/Zqt?R=k`LMn=4``:eE<ZWA,J2&_iNML<qrL1pNGRUcUh:&SHqt&"#&`mF^;9+
%Tr9';A+gI\CccaH>s$*@MX?[YNQkFKGkL(hfACu\>&ZqofhZN>Vu,pn:Y%HfCAe)'bs/sgp%#_5FP*ZDj05clo-u?fqWErTPI2k^
%^tg,E3H'u(a2;d0fN>28J$Me+N1MU!mCS_2?bQ6ZT>#[H@ZY6n=!D:;Eo^#GqQPVjk2$%0Gg#!WIJ3>,O^WaJqscn`If8UPOY6ZI
%7Ct6Jns\n+bV%b%rUe2r4alo$5(00iA(*R%WD7<ASIX*tKTO%jC1q#t%cJ,"R,T)YD"0D)j'=t]CR-,LdQS]"h)rqjT'&5fq=a':
%Gs<D6]0,2BkFD,ff01;"<'lFQ/u@(Gb&'/'A%=+f3n7&:SSJum][g,%l^eCsGK[@H,qe`PP9he:W`c?,$h_.1E`e@Fh/Z[oD/,b9
%dopL-bIgHJD3:m,>@.2MBLcBQ\=PluVfoYBeB31iS[qP.AmUm,iDod:OYuNLr7^K0oSIr[fQGtSGBTPTg/"1g>ecjofuK"$?+oBI
%Y.VHD`dI5Tm_.oaQdg9;B?S>$;WHg+DND?(`^ekZq!1S4pYGA3=,moHV^14NV/qn`i@@i__HF0aQ@1`U[m]1-3EC0e6bJ>T'SO6F
%_I()eKVJg8+-"IbmP#IH)'SK2\PC"QKG=fc.Dd3r/DPY;jC>nK^JU#Ta`A5<S\=N`_p^!UH\D9HpS?)_^gPm3K7jW_;a$6VJJTVQ
%,4HeUNk>X)D36^p;1^;=SMQBe:#o*$r$dauX^%lf;^np@9>@:BcF`^0o]nL-10u?CKW"V\L'ntrpo+2!.m7jrB32gWa;q+sEpm!M
%I4ab22(ftq[>-E7nND)Dkk4-X+8mKCIcdiKNZ-fq;$MKT#aldq\eBN*#&.XEIPQ`u3")4SZ@H/Bh&90a3XJ$-,.0[R=X^\JKV&D+
%-7CFUNr1/paA'I719i;Mi[E)N7]pdTNKKA5Y:WgISZ<Gs3O6+TDqT)q4'j.M;=:.kO@qn2^h'%b8<)[fFl5#l+P5pAk+'n:30)-Y
%)m6O/4(fPsb&t^LKI.bdQ0uBk:*hc(Ej(8%qg$om\_]h^?Y]MJWc>pR53(7I2$UZ:YJb4R``:+)Pb6ch12rV@P`hmdniqESCtu/7
%,(_Fj1_(=U_a.m<aQ!b9DMk<Z($0P!Rp9tHbm]Q5#d;,i3=Pg<Ol&HV_?'_P4-JJ)j*-bL>GFN(PRC_K<2iai*4T7Mk11Ar:@9IA
%D'E&&XfYL23UdXkAt2L?,3;\'5WFX0hs_hn0tuWe_q2EEWA?6W`!4JEg6U(gFKSWM)E"Ei"5<#nkL/be-'BsrN`WBqldoQkn.Nk0
%&0H>FO1D(+8)8A;O1h@/8)O2n;N8t!i,CgGAM^EcHqL;UGIflYe2LM==dEGTSrQ;aOX?QB3R5[$I##W0YST'%Un7CD%Uji"C,lQ:
%2<ra]FSI*q45Ja"2=EsV69%CLg/##L:9sI4AW>KfC0>*7AD-L:a8qLG#'[Aqp*)LROW^[*^fa\^lmQ;17%_#R<OrulUrfpDZF$sZ
%.S40::a_B5mUU_f\C,;,`@nOfMf8Z))o;oUE.fZ5#=T[pAs%DLFDb[c@\Hl^+S_DI;5/#qO=0N7dF4o76>eJM@.?-';'L-_<(jAN
%Me8;fBqn40_XtVbP7/\GQgc\61-f*O&-\;<JAG2k?rMGe@Ps%I-G3/-OnAc/ZJBcbFiWf]QS0pLZT,"*O_X+s7D#Hnpp9TC&(`pK
%BlfhpL%UTInT2:S_WdZXm_S3;]>sHhfASHNeG-!>mP/?[\YR58htqmuNJLX1_GS$dPV4$<$V1"T21FL4?T?1ENq.n!I(gMYUWg=l
%IC4S%oZ8rf$i]VD5PulX^8\D+Qb8f*A:`&Ui0PEU"&O-*[EOdfj^j9MIYk[!_<6db!E/mHkGiJ#S[9*hghE+mbp9s(^Z)?Imk!E%
%\?3A"his5cc0a\dq(l%9aKb*k"<d0EH05#\IjP7RI(YRFpiM!j!tRM;i:6=?iLY:GJ9ZZ&`"VLL+i\_s?EilEh=oqUZHF4uT97;i
%KJAfY1Xi*lS8bPEj86kUpNQ$9a'M[Rq8(t7LpGUBObae+R7K`F##L3DEDm#Q9l16>>l!J2;1=Q%0Zg7dG14=>A7t!WfXYUe]2,[4
%<W6T6@NtC@q(G(o#rO94F)9asWmf_tWVue.U\>WA8=6S6&1KhJ+IdnNKkB3e*Ef][o0P5dgu<m&X=P=%\]$uo#W1sM&M"?5Lr4Wu
%e#]T>?(,m,A1fDjkO(:SX%Yl5>ZSmc=!r&geaB(k_C\2"/CJcIBXicnM(\0Roe;kMiACj_&(0n\l(h1p+LjZ1%#2<F&XIu#)Q])R
%5bsMim*0Kq3_\=u+lttLau$;%>)Zkt#'7T3;6IOKSLi[1j(&rO"@u+G_<)uEf<A-d@WsOKQJ.#B:2A5*G+EU.8[%S0O\8C9\k@4k
%rQ99u?M3Y?c^agOpm]dSU"NZi]C=A:Gic4aWU\]ol+ZIIa_\XY.6&u=O1lb8cKCPDGZ"0Kf9[C?oZ<)V9AS`L2D)pe&<*C0F*02P
%#39I%h\!`93RP2'T10W\YX_I"*amspoS(H5OcH;;%g4H'OnRj-GF^61L'1NfeIgp05jgK%:n?AD"S^tU)BoI+&"Euu..A^bL'J+3
%@?@/GC'CaeF.;'UUWM?QYrfn_Al?+I]=Hn9%d%.cBA<Z,_'NB;6"jU9jJ*]r]%@p;VZCjKE8%Ga30e@)8L3(fq41j.p`?r:F$Jc:
%HEGJIV-g:$hLm6SGo4:cVK1BsSTBf21ito2f@)+fFQJt[^%-NQ+uPZV?hMRLS6o1S7G.cEHiGBL52r^U\c00U,c=N4mIQd5DR\aS
%=`JYkqF:'S]FD/en"^PBR[7b>ZFZ7$FI8E_AAVb];WABL6P:F`]:Bh+N\iCPCg9ledV<#Bdh7X51bHfQ%X-+('PUa>BNi!nYdBja
%?s&;(<"aIoCK<JT._/-MFHb/(S9/13'#)&JP.$+@CIY+7f=C-Z0H*NBQR8KX=EL0Tkfa#`?8MjLc;8RXKMcF;956R>$-T*IHL7Ff
%pi0BGIS#OnI.FPo?ZV3>L?sP/_oo#-Y;tS&QijnD,1?8qIWIH)kR<Jm.ibJ0*]2&\$GprRBPt=;^69Ee&V]!eiB9[eDD.`Z'\Us!
%//+D[<t<a$K8LPWURA[/M%7O`('_&Y1Nu>FGb7#u]'X+u_>kIB^;6G_SX_pD!F/@W_P`thU%AFnV;*P`[(rqA<(W+&;>ca=3m,,c
%_\I5OO=)Yr):59Wb%1G:7+Fc9C@X5<Rbs:?.=VGTX5n<?3*g-hjD;hXiHi?MUD_U7niu/cHFYNe6Gj^sZ=Y\i;1')2KH"Y_j"ak^
%\B<Kic`W0ZWA.\hik8E<cUElmfSc9u^":^\O1W`@]D#Z1j!4!gOR'*\`XShs+q8E7U5<h/W!eM7dR)4]Z;01cK`_Vl_Td;SfFR%4
%:`.\'!#pJ?;UOF-e7N_LCs1H<73/-<if<s%#SVtr.U]SrPaE6/^a^@;o!4\]9_MqZfs-N7RPu\qNdU7c??^A[WoYY.mblfPSp[:o
%L+If4L0t(s3)eF&,.XLVVSDInG--LY2'C1N.[&Rq%&$mb`0BoFCRa7g%E[A#,uHQ_:L^o$"Eck=l8#as>/Jh-Sr`+jQR@)nkhubO
%GON/>`qS?]i,q/sUrJ=u:V4?jp`\7E\C0SfOM,n,@+&@L[Ra9AW4eUb&hD2qE>I6"2Xn;n^NINMn?FhZ:9Q[Mqn&Zbcg67@pS>/g
%3DVA9/aQQF"V3t8<_oE^9QiHiV\kUI!Yd8LjlYOE=0=;(F);RAg5oXGVh?IW=)&`(/2#A\H:gWq[#4B08t1$Pd`k&SJ![tE5>R9T
%!p&0Hg!2.71Gq#A.a:`QICE'60];#XZVW7;A>XsZ;YY5;4Fr=DV/ON58(n-88_al%dpNuBClO4-LmfMT;f[W2Hu%/MVX?[jp3rYC
%]8/i^m66>jG%BSEFSM</`[5H\\+8emm9'RCK4qO:4m*AEQoI^QgJf=]bBS^;7e8jVq;nV^mf(T%lUeu]&rkCc-B+R&bJdI7Y)RBQ
%2-psD089&m$g/jaG;2fD%$P#[rjXa]ltBGH]a85Yh*kg?R9Zdh7^5Y*["ec?E:-^W)auMaCq;#QLgdUM9a&)qU6c3m/nu[GY?[m7
%lN5Sm`$?.U<:K-ar[WrJF5@GI?C[^6Y.Nge(!F=-h-!6lSRkJg1iU(MXpe(;]c".HVd5H,jM>8K94Ke`Ff2!rVjWk$4]fiZ#C"sS
%N]9)Xk^6$FZkYXO)Vns0]"^uqYCS=(=k6igoZ>"U&:%g_9aOPd?N-DOjMbHWjubB@"+_Eua4f]+T;Hno9)aK9e?^_H.qoD`>+2#D
%/mE(^gI-Ou#F)SN$W"=A4+D&UT>&(sj2$`l*pi=dF?c]W+^I?]&ZsarQB<bqPIWN2l[fc?n0PIN9<.V1j[R+n-+2-8g8N39@TsXM
%mQ+#[FI6'L3S.D=CK^<E9n+7-'%]LRBcjC!iOXP4hl;(+O:et/-8dln`IhV^Yt<1nb(%Gga@Mea?\<H.l'NqlgiXLNV$*&KoS)V_
%RWr.obN'PI@U6aOm0TBDT)-usb:6:ZNRR">V(n=Y[b$.L*Kg*I^CCcZO2dHp7tUYl95EmF8(BG5AbqTFHY)iBYe1:B4j`Ll1o-E<
%[<p2'<iK[kE<P4cW:Y/HMKgs<#4V;,NQ<i=-$l6V;RdN1H@a$GUq<#TP&aALSab3_8MA`!'=M(:0^qQeRKm<!^Hm8V7sYkeks$TO
%U$3)L4^!Cr7@9`a"6g#e6+A<EpZa!b*"k!&*L1h\b(/G7WTR-!j9L0_WUYK,)ZNJlNpn<f2:XT';fM1jR0G6nfSBX/ps,O)ApV@V
%G'iT6!hOMgA9Gtf(-2E9=9pG]5aGA9$p]ccANYW86purga93GI9Z2C1)ji0+JoMAuT,?pF7n4us!7Gj_N0)CZUEjFR+7RcbbJ<Ml
%-@d8$2X4.:.j+j9#oo2FYLKc2!=ICnkn#7`#p3mb/@[Qcqq<puoaTOA0IaS7n>GUgli*"NBS5Vspo9$$pK^\W[IR,/"6i'&X-UN8
%l7B[Q;7PdE:%gAL>2u8+Oqm;CXE'!J2q>47dZuq.4XNkY\a&&E06I8Y`h,H"AWaUZ=ImN.7m;jrE-;Q0Xi_]-imDu8Zp%X&O^>l,
%2-n&5<^eb;X7WIh-&Zf?k#F_cAZO?JHl0"@!p8:OY]7Tt>Wq7fU94E@l%!g;eG=<e-g(k]=!8L1[EEZ4WUWk^^FHkKoj2SH,.p)<
%H:/B,`JsUt&&]Mp?M@Ph52ehfX':CT^2UI+6P"-WL0iFB[t1)c#jrEiWZnh]=Eoir<JJ<EN^dTYGUm5s*H5Ht.k2SDmEjNu*Z/DQ
%BJ7MmY1j0Ii(q6Fg>C%()7J@,8$NFBQ#7%]F$"r.p[3ClgKb>:ZTqk0KbH$C1T^m'o",,)Wl?lMrZ44mm4@m2K7Dhg>D(>C:pMeY
%9J,_5lY3399h=cq6\9;\=Kl-+"UF4si8AI&n?NK5[]n\F!eW-nKC96U^'G+\2].o?PXf%]_Lb#B@Z>g7CfKi?TQ"i*KBI-g95!1=
%D0Y=9>MXX->^6!&hF<:G@CSe!jnL^U![B>N(?=a$SS!d>Zt6K)\4>_L8R;.Y)E28YnN(_.XDW[^CEoV\f/RZ,#1p#55QDlAO1(p@
%LVE0ki9h?=lGm6P)=*.djPql!b'q><24cf922CG#g0$L%oJ?j8J'.9k`nrC#XZ[nD@hW0#_P_t6DppY(YEP_O_iq(STMV'a$A0$+
%K+g*nnZJ>i)FFuB!t5jf"r]CE8&N07JUNHcn0/!Vc0_VKQ8F8%DLsNs^e:kj+^uf;,7cUs2D[O3W*#8gSBTLH-H8(`DM"<p5)1`d
%g^<ta25h8$M&]BSSQ/*^E"hfljoBc!9rrD*,ulJ+-g0gUl`_?^&NU!"Z2j^d?KNXVQr$)#Dj^oBSgAQOeb)ecJ#X5G`iDRJ.6d>X
%>LnHoF6u\=3gl/,i*9iDk;oV@@fTdjeWNCUj.MeRh6t^uTs:M;F/QGP^k)/`%8V7#)d"f=gGfWlR^HO%mk$,.W;WmNHX?GKn"'o+
%"<C-Q!?#uN3WQGh1d/4?,(hQ+];#/ee,Us-Sgk8`j3"s@pMA^9ldZQK_ccs6UAjajS@uc9Ek21Ig+q:EP\NU>L&=iGR7&S6b<7h(
%lJSSqPk3uDplns(%E<[m9Z7-j>XI"OR-0c;6$7r\?V"+1nS6AA-WTc;.l(B@qa^iFT8+.q;/GnfRVd#J^<[1/*5"HFGeC*f<td/k
%S6UchqZK>(%o"&1!h]pL,ID#C'E;=eo@RN50"s4%W1$Q0;jB3Uq'$H^R%Iahh=0(Wfj^!12Vs$2biM6XFPm$#)X@BA!Oc0JZ5VhD
%jL0p_LG2N[4&CUJ7;h\-_$af]!@*tGNH'IZ+:<\TaV<N*MsT[=6odA?(]GqBI(B1Ggq?CS8<&@<*@arTO6JK?i_=1/Ql*,#$gHk!
%Sdr&#"S!0;RId=PHK)u6lk-g^G3Wc]CU/[B@X&Lh2AD,TV[l?i+E>""gj1:Vf2)u4(b4+si!r)/eZqoCDf?/j$)h5WJLe0oit]2K
%euCLZ<*"nam3ti'\36\C;W`G>5\mjbL2uS$chUc@F-!/bWMc%V,fLZlZ&PJ;MkRX6IcBUU@n/75M[R9a75R5JQ1^:YbN>i!?HWH&
%TR]Xo>F"j[B\<7cf9"0(2'/o67JjDFkB^7<S1Q@57ii_ZQL<H5QKeg.D:Lsn^BQK1QS7d<Xi8bgAN%igGS\`3%;Il(3#Is#ZBuA8
%]62'HY\j+W#"CtrXp-%W.D/ibfd==REj/=dFZ11,Bn1Q9K^Tsljmc>PFIsk78_'(4DWPVrqa/mL"I28aC!2K,%:rLd53?k63.s:m
%a<EB@%B@U>`mA0;3^h.ge/5<]6kQ(Y)YK+dW5UWdOsq[l@<L6Q#dqlEU.A0Z>pur9b:3eg<37,4kG'QT<X;2g$c@4In@[a<"Gho5
%_;mKd0pcoLrVEJ55?68b=%0e(8T3+l$q/blP\].k%i]q2eWr,_ad_BX#\@0,lBj=iD53pZ><U6D\nd?'huY$g10jmc^uiJ2l[[-,
%,XnG&4)S$X<jcgG_fk_Fa]1hr0H]]XTbItUJ$=1\XacUb<61)4DLj^U#.CeYCB1%q\Xst2UB]$:5R0OQ^bb0P=Iem]*'_e^4flYa
%S?WKKb2D\WfRba5ktZ1ErAi*1;ob1f]%ggQ1/^[bo_D]X?u<=:2!FRKAZ1$HLuUsENFnQ%VK=W*NfHRh'D(>@KetiQ<]AIj8.mBj
%"J.1k*Vs1Idmit4KqHAA>)sm^C-mCA4\)&B_c:Ze3c#9M==J$4^knL\f<Ebi[RR:N;Uh][X\er]+X)10L/ZYq>m$'H9itYTj&@kt
%;"*f8#C"QbF1l1,V7+X;4q=a/_!FO7n-pc]lg2D@ff.>qZ_K<4$D^rQ-%L:uA;b"DR/.t.Ts&L-Mqhs?n\;9u_oD(&MQ<Mn]$A3e
%m>(1=G6;;sO06:>,8kk57[KbQ%I]'0Ie41\du(c4E,ZYOhFoc!aUg;[A$Frh3gPO5^3q4N.RuLdCNBI%obXGNL3nsiQn>/c%h;Eq
%E91n;GoQA+YO-lk:MUcY?g^Dipj.d?`7n`E!!aS9(Acu_MDYR5.G`mIEbkG%_<BVcV?5.K'Ns]r0r;B!/OX0\,=e,X^]M*Yj%_=M
%?YJ3s:>Olj7Bgu)a]0WcPXNIHW_1=Jq*EWQ-HB%@4E#RiB=?%05[d_'L0J`X]`q8Xo/1%=He\li!d(h1c(9@/OF3#kI<5\i7K3,=
%R/%qr?F.s8q^$&t1#</I\cl@s>R]SOX&EVQaga]MFiUT/R*+Vj7DB,PNP;.sC!S=JC#cbik^AJdF12_j&266mRN/Q?:,FgJBOkd5
%0,2U6M/#d>ReTic3&?%?0]=fbK@5AA]SEHE"6]d8+>iU+klK9V2"=]tJjEW`8eI\T->Wn,3?2[OSB#Ura131&'?6\f7`Y0bcKR$`
%RoMYtCS+bgU1'GFEIO6_]oOs3cLEm;2U<S@35U?pof1^XEH1Dfaq>@Sp(!_fESf<8+6S*CrAM0Ka8&ea)lJ7L$LVsaO-D?H6D-VB
%BL-=kYb?i7,$(/bJqD:M7KU_5R=^jA9N">m9pjb"E>ANF6Q];CIt@ZnH9$c]%N.<_].4)B]N94P%t!`.Q29fl7:j20lh)c5(qhS&
%[h6-Q)JJ9I]3rn^.:dF1rOPhV.TM+*Mt+G9jZ^4qImn&+$>&h%AemIrY&tEV^:3oUE4Eo:[SnC/\WL>Y<31]*iPMQUX2oJ3Z=%NB
%K=EmuMMm&ch:btGbLY785l)Y0A[/]sp[b;_`=(RDna+r;,8ZTQ:W:Eme)68]CiYg.UI:4@,cU'&i`k0G[Vfs>g;:7W=.R;9'"kO=
%Y:f&IQa(,)%K"-[]TI'c`n#"]GB\d"ZA`XJqS]]0JrT!&SRY=%D%3(PGKK+/1<jnB$e&k7<"sI3W&p@n9)R\G9&ZAY=0B-"5G]9=
%5\#_'f/]>4p>Mq?Z?he$eIUSKm^sL`Pg7CZi>`n4Or.K>WbLXQ-_o('CN:?<9j9#@!&_;1@p*5lLD].=?F0t8BHek+Si$2<Xi?7m
%S_:\>Z(%Ts`Zj7KVMXuAm_S+3O3)B+QlPSM&2>"C<qsu1%.3RAm-u(]28F4>./6qa,IHY-%(L'W9&Dq[cN$)bjmN$d^k!;?6??h5
%FB*cHBKs/mc'B#_`C.gh/^A'BS#g]`\p]NU5DsK1qIE,s)NBo@3-G&@&8>atZVsa"9N6f9(usFBe+T.D5N]rBC!u?Je+T*M7QU,s
%LMo-D2OKpk-HRd9_LEh*>RprV\AlPg2c@S/ZIU"bCF8BENRmoW+pM,heU3-h`e.4.qe>'gkN6*E$_[kg1\Y4ra)pbI=:Nbl(u8RH
%=;:D(lf/n;ph@'G0NMPNDf+Z@?TT5'0@<%1hcI<A?+Mk]2Ni+:;Rb/#4QCZf?$B@G5.tR649G<&p:r7>rWnL5kiPKm`Rg;J'@S:J
%Rcthg0uXHrNNjUM4L6jX6@(If2P*!V,/eotAkL!17u`?HUH'17Yo5%:O>(@@9OA3m?OW1f0i3=mM(^^UKdOO\`'ZBOmq\To[o^nZ
%T2J\,-<Ap66bFc>7t3m]1j]Ei)LrYd39/%CkR!;_.cI<?%,lY@.-uBf'aciCJPGiMq*1nGj%85c=RW"+[ii3lH1X^nhT%bX0lOc7
%bkmdJrQTDl-]//\'g8L16)Z"0qPGZ'VHs#Z1-t1]eFnG$me7p7s1Ze-mq[dN5KWr,J(GnE_s_B,hfIGl[j^-kPg4;>cLqC49_-#)
%m=Ve&:_Onh!rfZRbm8#Ah;l(&R'*?V+=\PoEk'1Z)-Q`-AsalG448#VmO)PZNQg?;<&-:BkLIp<_b,)Ya3La<=UeG2#X>.(-.n9]
%,(Go5jA0[6B5,@U/<`%4NL#k)5ahCoN_Y6leH1g_L`=i()_%sLl%8]#'lHTmRSlNtd<(Rm#r@'H%<:jJMj[e2ABRqF5/bA12B1G>
%ZPo"^h/GL"RYm=<$;M+Gg!`(8PEA7V6`@^iD*77%PEAUnEnK-?#%`nJ<nHrb%PU`RF#1A/g*$W^2Xb%o&0)+M[<9N22TPE2iHW*(
%8$7fRk6*5/jLXlghD(LsR8d8T#aO(R]:M5s17mXSW)&Cuc96(mS%ND016sA11p>`(,GSBsG*9ahc@EX'6dC\,m;_n]K"B"]ZOZF6
%R=58/cB&73#9MBikRG!;(o>oKjud'iKL5;V3DGL^KXdEVC`V;maW[n(>mKsqXpoJDhn'Bg#7DZl*DA99_ghT7N;s?\BaApi.`/Wm
%a)'PZhH6a3j;nGdoU$*O%8WT)7r@TG%blM^1E4!`E6JOQTLPP$UX4I7d(bL`0*lt?_C>Xc3CsmH_@5`KNdS`QDg+>)/^(@=#\4^-
%92oHcpC-nN%1W#;pl+!WL1!6RSnY.\Od=^h+CV`76RRJ"_fc6//:cbN*k&LZT%&U*IVM"JZ@JYV,Ra0151JP11u"E'p*m/&#5=[U
%c_!6.9-qHt@DGK$:/81_-d?9jDUOnRF<&(oNe8^k,GW5on=59DkRmLS\8cP+NQqaY9*gHV&^c4]_IK7BJar*QTm1*6Xq2$P`cDX/
%j064$(nP8j]KL9+<g\V/mjRPJWC'?I91<o`M=mC`>;Ki6YR/ca#WP+WoPC`F`IMrs_>N_VWUf,Loo)J51/BaU['@>m%.)-QWuQ6H
%kft]iY9l^\`PIP!)4OUi]'q\+7W\0#6?cpaE`A+2V`Vdl.eMBjKe2/*'7iBdi!T^BmbmTY%Yo9I*FS.6>>b4A1&6,p5%F9*I#k^m
%bs.f15IU+XX)i*5bpQ?2KmW.p*9tuFl>DS9fAie`d\a_7$a0#>js5TUfu-4+RQ66"WLHH":GjLS7;rnHq5NL%+A.Z6OIp8_\cQ&#
%6#c"-i6K;,KcBO6YgQ<k^@sJM:TVWIgHN33*2IsA@f<W4B(4Y5-jXfA)6:c_ihUNc:p-RbR*i5T06E;:HiCq5&(>l`.06u8Ah]!?
%);_;-O1b9]N6@P)QS1'G?Xd9S`412OEVU7-ng2<;98q%1ht<=\L+bCRKdOO\`0V=-cP>Ia-"$WLS(GE$qssElQ`pGae";XmrqOUa
%-\).J5>1k+YF`FSpYtRUlMmQXgO)cY#_WCh<8G=PZX&C_VM\umPA.Opb;A\MghrQWe1R#*;eA"Qd&1+HnW3^-TASrV_0Ys=J'u+3
%Mu<S3V=\,+TQ\*&rR67cG$dJq;nqIgT`-RIH1qc*04)0c]1m9`g#$Wr\Yj[Va_Q;$:Ub9"*FD![p[ZSpB5dgWqjAL%qOdJ"hRqS@
%q"El/KO<P`rUSd6[pSNp4oZTZcsQbFjf92)rVFM)G<adZhg"/\_7/:ss7j:YEn$]\dYK@7(-jq0,\mcWV)[WLD4K\I2D\7KnsfXK
%R9$U6a#P_1BrY_\;S't]=_sI']tp*j;N.!(=E^tsDa\lQ15YBf86$#69h7us#pT98T'MT(N)X+c4==j'XCS;Ub#0EZMMSc8D7K\W
%aY(g!VRD_5#<[n'0M0em]e#EpbDl0a<dU'oq*qq-V52ltWAH%q2km0;I8j=g:!D&^2W"cZM*#,i2tJ::[raEan@SQ`Dp('G/$R!^
%,RVa*"\VJ"#*@^gno#eV0'u-bm9Pml]S*Ln.[FdYjbp@ah,:$j1EK1J!8H<]\?jK[>eJ1q[W]iA;^05#Q6D_r5lm3t)8gVrKH6a/
%/uA=S0).E!<&bV1P>4pEYuDg^>bs]S4\olZPSX%8nt%1VQ?F&!-7ue0AI'g"Bu8YL^XHVO1,N-lUSnfGT<rB;B$O4=Mj"R"&<P2*
%aS"(r#cM%W5IpZ'Seo$@"GV+odRMk.J++C;+CWF`1=XqVm3P+N1OM!8U;;%I_Pa4U9(RXoG/>Zj$,lq[a?)*"&W9R[k,G(#ha$ea
%Ou`5+k8Rk#9oJ[ARAgK\aqC*EPgmgTT1b^Qd3'\^b65dag:0e`h$@d+CiE)G44f,j/*Pf\P>W:a`"AuSC[hR#`>CZ#TT/dlSZF`D
%)=%L1CpFe\UkL#aYQ/H_?8saIW;JR=g";;2rZjSd:/nD9;<nRf4c76jA"JkqG6Mj,JsG&15UE]_Udl(*k10oNZhL';16i#S%1Fl6
%ZK*39(2kD4kn;Q\%'4Zp6C%8/b\ISk?Zj5qb*j_$>%po>pno[IN&Gb4m3rnl)0/m2/ID[@DcpAOrgH_GWeG-fRibJ;r@oGq(tCo$
%8cX"MAh!m/?&?ErFH!%1VA^nD2^4r''(Mj)YTs<I(aXI1N?uFbRuMEeYhW^pi),n=O\p!CiB\X.W,p=<O9%m5#SS'[@ZeKkV?Ik9
%/7a;a,]Y:^&TJ%c+WnsKdAg_-nL"G(_5#HFapAEt%YT`J7F]N^&lfuX2bD+JN8oNCP/3C)('Z6tO`4M[lmdB$bGu!#LdX^M)UUt?
%W"bRYB^sm=F-PaB@g(q\Zp].jhUA437j!`8Q<+b)"6B(g(C\m3OoWg_;PO)cHU'.!0u<DAQ^ZP_@1uMX,0:n[J8WGk79I"l$m>"b
%U\$o!;RmB<4NY+VbAo+q-*dn9DDAQ?8+n@LWO1k'/m*uC+G\.WbtWO3O32WrBdO(arhqq&bnLf'Jam6*Au%6e%];uTl4Uf3(i5Ef
%Z4m(u`OH%/;Ee8qaq0XPA@^5;"Cnef'.A(n7.(6L+`<Mb%(nE,3FWJ<9*+QqOCn+(Tm-UsaT<:DY54$/QV'i0c!H8Z$74+bVeYIW
%LtqQ]+q+W4-L;<PRSi:7Eo)qop$h6udH7[VA1n7Mc=j_HJ;goBf^b&SI8FPS\N_QC/i?[T7pYlsOe$(F<6R_LPJpj3_:"#Dg64;2
%.U0``\AR2qBS%N<2BA#1=-aIBAm[RNVFU\%CGLuZ&HO-4#9B[*k1PP>0>aPG3RX&l&uNIb&t)Lg#53Genh(kATbu!O'Q0P)-nZEn
%O@5B9fsW59@X[0FZ&@fdQtFW@&iCk*JW*5(jiB"eKU=.r@9P_LL&;(.)'L(RdWh!-LprA\@2_o)74[G)9hMY%\j1iZQ8usEdeJFE
%,igL0.oHEa=ENcfAW8!UR[fau9_1"C(/L[Im4apuZGOaP3!'bbn?U9I`kJtj^PkgGf%ri>84k&!aHcpGD*-Q!ojDrr-VYaRh:K05
%91bRUi81A`SWr1b4YZ"TA$pkaAFGc=78uhrJ:_LNb!`uUmjsnY-YDWX;8<L6"dg;RgVtTQC;`u9l;1QZKZjpZ-1sbEY'g_i/kaFP
%2"O#,1A!@h#)\p\fi=OK96$A/B(6R#k7@h1jBCf>E-95D8N0GH,51rmJkCTUJRVp#O;qcX&r>KXHKI9QPOd16A@[c'$Vb;=2Gnf6
%b>!01Jo:PF2qCEBUWgC[%;0)M_jC?u1+tXXb'gg$PXLeS[:?LrQOLr:.@.*3;X/.ofZQ?eb%9tEUb!C%"_Y$a$sHNm+[?U*ku>3s
%:6#4.F)`Cd=%>M1J,j,t7ub*o:bXQ-;0kqM7MEW2dpb)2CtT(a?T?RJ>/D8aj>^XOBgU8uljH`.Sr`]5M/'o2Ao+3YbA:p)2\g='
%kUWlf!i$+NfX>g1W@VrB<j>.p?,Ap`;Bd)li>N;jA8tobV+A&T=\/e0)C5db;UDI&(]'<-6:rZ0pQmMD]408YZBB>Y;lntP#q?Ga
%cH!F=^`G$HRM`E-7CH@)\X]q;7$CM8b]7VBPU'D/(j!6kPX]dc#-G.@a^s"cWg>WJoN;=$..j>^_GXNGKInKaMQZNkSA\!WCQMOT
%6Yo(h_SEI92#aX\f7WQuHOR1q-%&BD`#RVL@^Eet<.L?i(:;gh%/qXg%[>"TdhKLVL,+T"M!0MD$8Hhgm]Zs/XD2%#WN]K96_SC<
%;/F@\CgB6_-jH;2?`%)p7S%V=E?;HO:cl`pLg"-rc'EK!^iSRr65M*mPe(O"$J<"'B\"=dSJSZ,;>927"oXGi9_Gs3K!$b_jKgfX
%8iMrK)?l!Ye4c7b.,R;`^!uoSi#hAC@/Tet1<>BdHN)%S5Q0a#gR#,D\GPfFJ,B0>pYYoFc+@Vuq:p!FWOW'ugaF;ei5r^#e\D//
%emT*s'k59is%G2ar/0tLjsfnb_kL@VlZ/S1;PLZMBk/nU#l,4B-kf`4%U_UJjespr=-LKdSdQ!_lu0^(#C/ZPL5>Va]N!t27-1(,
%Nd1!9C-isIMPE`3>ad-E5sfIQQ>HHoq1nT,rkiBND.?T*:0eWejig#!cl6LR"n".YY0"mYR"Ig38G+I2)rLGAT*m51fE\WV:s%7a
%URS4kn^=X]A2&Ji94bS:!nW9BKEZ`j(hf4`9-j^?"_njZJCFh\dCG^-0MFI#/t$iO$:OoJ&5f-rJd4f9?'?^<"<:ikE#ghnYRZf"
%k@oP9"t_R2"hKuAl:Pkt^JEFAN)j@cACO;kc.3:8MO\^[AlNSfBM6F7dW$OBK0<Xp&[@\<"qeInaC6Pp,""0e[;0@3J-ubdHk^LQ
%omnH^<`UA>S$tq<)`oBPTG#d%Q#a:5?EaiQ]elKd0hbe,G-t^tai"qA7?o60OJ`MYLc<Y6UL$P$I&@6Cb-".H`@E(tV7Kk+A=L@]
%%)F`u9i(U;HYG=#bR_uZ-4j+7Qp-n!9Z`-cM`&R-&.p<m7d-JHFKV*tRRDCc;28c>@"X-67VsI;9.-E..1pT_R9]t5@2k'B$$uhJ
%+pJ#n+p6(@JY<5N\b8;o@g?Ik`2#X[Sn3Dt^sGT.W)BqoM[TSM$m/d*q,ns\1bB@:TBo_cVGO"&&;>5IkCDbZ'uDB]^q_A(F&oP^
%OiG6n)3L6jW@oLdaS$6G"M?l0DW,WgTgTZq]X:)0(%Lf!hfKL^[BO7GYLRNdTX2G2*3h81O,#>#_$#pB3_3[Ne8?_$dEh#HKE`]"
%8/-&&,;BNL)4;aB-qDpb)-dF8&@O([7"HjSUd5<Q`#P8u%bk^CK=hB0HiZ795]W,MOo^Z``0Eo;!0JOInV;!mKfscPZ!#U"-?.Uk
%_fOS:;&<q5`))bWie0%(A.gGdd5Xp:a?`C]a`MM16DNmW0nMd?g+9QDTr#i-=44H)=`E;)[lC-b=BI-4ZR3RH@0X$;AJINqU-39D
%0OY6nMO+$S"dth0l=iTdhreI\Q=anKqNu!Wb\VX"&1*9<VSBF#27RLDcM<4K0#e=.I2(&(a-$Ed+=52f/M,!mRitDb8s)k.0CE;2
%$*'(B71p<*5o@8_j>'l9^hg:QU'+sP4MrF,W0<A9NSVS@iF&00Yf`u.cH9P>_Q9\8TnIHUXB6mWN<E$-WBT#a3Fl$CkiB%:@;CSf
%-uTYo>\79o'CEGGXU*>R;TJmUMRh4<b^We?.VXQth&ni?;:r`?9hXdFHh',["Cu#@U,-=e=1^k)1>PN(UaitWXL)!O.a3R(EXZ5=
%U?i*P7hi=Vl_Jd&M$\P>k:E@'_GN^TEl$s3UF+OMjQ>ftB*OQOSf)5mOr;Q>DUG7K?3p\rI,t@/$RR*0[1hY8G&<Aj3Bb5eeU!1c
%VPRD\E\t`;m(B(-."V0rju?eWnon(1SZHLig$QUhEtP*_9"0NS5`O(EAOIH;/;`R=8jl1WV'\l65,SDd<\7Ie1Naj3bA`B(e473?
%i$*J(V/N&3[@><^>\(KD:b"DEf]<o*C1N.n[-GfZ#ehbBO'.99d%+)Q<dbmk]JsO?.^4t$"isfSe6*QE\43WqoYK%eE0G0.`]cbG
%/eCOhNFD2*P"[;lA-Q96>+,N3&Q(jSDQQQ4KJ[bYQbml2PB%04;R?p_,[$J-Z$"n*=V=;lNcc(/N0cZq6\=Er`UIPL0^03Ti&47]
%B#(97ZSn8]?qj/u=_"C,G-NpG`2M?'HWKEPTr]Rurmf-S'i%Ia(SjE/jdCEk;pBTBU"YqO?+hc0JX:i$rs02?E\'0;9Uu2bfsrTY
%Zq$fM_@R*M58;r_)_@gDm,&@26sQ%$5ZEp@#W$Yha'Q3i*sQ@)\$!`9V?Spc4J5FD-Sa]1/u(+bWlk^M#[D*s'lLKK)lsr/$7'Xg
%Fe.%QBra:pXUf9:fs,6lK*@fBn@C#j:5c`2X"%p:TdKjfNWfO?+,+h_\P5;05K,].r<ha*`!f2//0RY#Q6.7;o?l^o">%A3Oot[0
%OJ$,0AdB2,6IQ9LM_g_R;7[WR/V?Qca#jO04J>dCBelZ&;'TF/q">n2>h+HSClGu_88=:494@M8pE:r7Ptia\I5:7aE!$JlAeY5'
%0Z8sg^QlE^!h0_E2)("]?f\@6b?L>t(bW8%)%IKd[3uT[V`tFS,>1Pj3)lS]c6,dh&=<2taemWbYY2K3&t;12>c%gLP\24^lk;'3
%lCbu9Z%15[MT+h3Y`l&h8]_$P"s)d24UQbBgEn9#(-*/kFE$fObW6mW+h.sk[UM3$?jAui;(sl,Y:XLeSHFOYd7gd2jkbcCF/O[W
%aH-ZTPks?FL*.lJU'up41*negb?2qM\KD>R'./K*!YK\=0"AFQ2%;)O^,X>:`g/)+(L!;0iI*1Pn_ic1Ag-`B#[R(<".kl[+YlW;
%hePk.eBm"bOC\MT';i(Zfkb'HoqfVZ^:&C8?N_Pdp-im7h>UYT;DQ/Hfr[9&RT;kU`rlKR`@N@%W43$QP@/fj6NglS_+29!Uf878
%(:>QF>1?rU((Z9[lBI$dD52YE+n0Jj9^i^/mHPghqZ+q-Es'5TbT2h6;=27Q8C2_5:CaW@9E#kHY=5B_j924E#q9Gq=0[p8M6I02
%eCsbtXcVO[-0ucl5aK3m-Msf>7C>YE`LnXCrdK8#e6sLTqJt8LKrT8K6%cEIC`gVAc.r$k*A##^lKu+FlfTA@LTF#g;;9ZZ1f$Ft
%KgA;ZV!!Oml(LG[(HYLLJ<mI&'.HCf8f8\>J05ai=Cjb4ERAA&f7r*05Wf'/f?bJX5=0]Hd>E`*$c>CHo:*Sl+M0Hh@AltQ]'Bb2
%<9><5-1I,OP`d!o]Qe0?ND"m,3^]WFkV8qV"i>&GZ.Pk*2B@3&0q(m`@SNT:A3*Dho>:_VJsbr$n.:a-:2mApcPaJS\DJF-;:Vce
%ma6ZDZL!L3d1u<MTV9>J#8(.'[M(#9[kn53TWPR=+A?:"5R+bY"U7RB>`uBQ-+(qZP@^72W0bjPRLC^bA-R^<a:fh?.A.>\qS?Id
%SqAK#lBW\'9(15j+j0f(%WNSEEKl?b.30&'JSlKeWc28^B=d=MYsON8H3iRmlAa`GN7<FF:aeEHIa&>j#M7q5g4]i6+t/h_j&3%4
%#7N6:),u5B0hg:>h#]aE7LM1)E9,7t\WI9[d=TUa5.h*i(BI6GckgO>i;SoX.SrIH)u#YdqC@/-(>Wgq^2Qh#o#(UO9_TN_$BRXg
%L*0/>5!u6=/&Lf6M4.ZMi`ir>"B8YTS@*1L75V[VcDA%-D@5%sEl0<C^J-(.Jkp!Hd#;t@H3s2k\s[)NPAr1kX?ZjZdEmXrZUp@2
%\W<1JQiqXC(N[AGN"RaT$bM%-N2i2tQ#;<f5o5*,-8S-_a@)^:l<^:,.\W+G,*Rr^=\q4H5Xq9&aLj<I%'0jF6_j>l0j#941:uY9
%09'X<"R25f`eer-1sut%/SKW'qCG6LM>-^1;lUak,3r/A+:*qQ3oLhckqi.6B9U#A@4r;73#g]$Ns;`gg'soTaF]pf3e[unTgS#X
%PgL?Y;iNa;a."8a@UhsG3ECc;L4;$p0mGGH/p5-BW[Vu(1nu+RX?t!L2sQ29M]6*"JNa)LOO5_'hkcb<UW13uGLnEJnG,ic\]I^N
%D<O9#8Y'T.g*=0I2(ShIdE[&88ra=P>*4kK;Tp-tPDudBXeZ)V9l<S'lKO"m6OOPql7#g-m>4I"VPL4]*0`3pE0b?!dr5B?+T7K=
%3a#B-0tD9?>,R*=M7tP+Kds1./-d2C/YM&-$:edc["cZ\KcrEE,BIJ:%4it9$NCe9Jc\XbKQ,So:irGIcjYK05SuaVeb]ke"=5$)
%Z5?VEChJ+_8e$LJ"U9X6CKb<irQMk/).?Q^.d6d5<s8M'dmo-D;ZccNY.&5]i9/BUQ@`dF&/c[m?li2d'H8qEGa-!tL4TJ\dH1d:
%=M2"L^VoDhjc+h6#YY\F7\WqJd>:?G1K/9kDU=gZ8*E*;#>C&7dcl]IAD/.<1"DKnM[iik6<aU13X&VJ]%[2#q#c5i?pJAs.;afY
%2ki]7SCei=2@+Z-3uG5h9_9AN]G^.[N7`Y@c6O%j2n&Mg=.>u)4tr4W-F9O^M9pu2#iV"_2(4CrF!6255gWP-AFt[>_M4)Bc(tdc
%LkBDTFOj_'pLQf]5a)O/9SB'd3au$$X`+/8NN8F1f]o9?N'NggN!=-qqMGpR[XI=ON#.B7KH;sd=[>Dq5h$?&$I,0h[+f?.':BZL
%&.oNY;B!c)V;Wh_$/V%@m='so2QJan`LA;q>/>k9?_Qer=Hr@Er"Y=q5F<g+rV09JFWB:@oVE6\8l@TQQO&:se<$P#K!):V)'254
%N"R%p:ssY`Z*6f"]4$t8:_kTY9.>uU/`gY"$G#W+a'-=7UfQ`9YQ:0A%#6;7<Jh^<1Vu'_'o7s9fXdH+LlSPk0:AW$jHg3,*#8]3
%$Xlu!`MZ\WBY7@;bu@6/L1ES>%TCao<K+p=$+hcpn'FK6h<7:[$,W7;42?HVOAR6/$+?uY]QFl4.:cAM^P8%>b&5iY5j+P5756H.
%2s/#dW.lB21dQ:5WN`hH2Fu"KXGn.S8RHshAd+5XLS2N\N?LRRh..*R$j?Et>Mq>A(_Io&5WF'.qB9CRE2LN@#0EFWM$17*%<.hs
%q8$')Z@Td+X<F":\(D&PF-8Q,_SE%3e?k)QM2[h5#s'X2K[;<6$T*9fL3,^kNPN;//]s4o%OeU9iASd6H[=q^mPa"nTS'1oAjFY)
%=$g,g,#'h9Rkhm5Z,+oM-7"JoCIfl5.M+N24"#*?R>_-m$)<4f`;@fdIEhVeQGDrC\b2*^*VKbl>KX$>@jVR+_^^R.DDHdmPMqH)
%F$b`'%jhF35Zju!TMli\-4D-O,@iXY2Xq!I"9acgL;b)u!#:2ICHdM:$;"W'R8R*MhPrL=9f'nq4``nsq%i_\UL,MBJE=TJTAbk^
%.``fC5=7tt.`SXM@i;OiPjQ7.K[]A=-sSUk7o[H=V,Xi;_6K&?")=)4>NSMT)9O>gH?bX[bLih3c<;b^Lf?<e,o.4/'6Q^1:8;!>
%$=pZ!>K,RV^h?Pc@%a*-S5<H&\VGb@69o?p?Mc#F"ZAZFTEQ5ri\1K,p"D\$kA(%o/04s>50`2A%8#JalKU]X%uB]o+%u"(8DY#-
%juSf2UT"Wa!Pf[tjs`=a[0=<DV+DQ[Hd^_I7=@S";D8FhPZ9VQ6H+#4]QDX8rOnFd8S`3CbqaJECrEnE^g=Xh&K@j,M^=;U`%G`!
%DkXn34oP;2qN)TZ,AK:J7[b#bWJS'T!F+%b9UO>4"9f/C7E]T_L!!3e')f,'2$p"NqH-a>-tY=>kG9"0&P!6o/iY=m!]Ml[$N`Au
%1W5]Gg3ok)B88qoZ%9cE7^jo.B43*IoQ<+K>N&rPQ>aA+U64gT4p[UjZ,8g=O,R3l$am=`d*Z+KES_c`97SsDN\JnV"M5A\WUb@r
%g;H'$>9MW+,`6f-J\fN%LBgGK#T#;m7idPW!PuEG#X<#o6WR>*-*ep2IVD3iOtm/Xb3%,S)N]bAUB"jKfY]Od+P;c'9;8d`-T+UQ
%m_o8Y(3!"EP@9A9M6+V9Y3%>XopAO6aTA^hXeVSCK83Rdhg+g\l@rc`f<?tf'/4)gNS^&UYmdTg]AefX/#XO%8UK..00)<:&*>m+
%#Ra61Q%0=7<Z?.Z()G9<c6sDUkUbu7<X],&d$@(8>@Ni?2!]QT)e>=UIjZ6g(,3(n*M6&o0m4sr*5rP,"=QPc1J8RoA<.N!dDjiZ
%+=IgS%k=0q/:bl^BP0`gmkXRF9'bCH'N&&q5o<'j`^_4(bUsYe;p;-Lh@A\&&tL,t,>\ON(nZ>12%9qU:`@*%R=dDMOJu-b!"k)H
%kYM['`m&a-%YC[Z#JoL1>lYoiVWL;[7lUE7",pCj/U`AaQ@\TN:DQF?_WV4>2+#A7h$,R,1JeOe7F=kB@+5o!&qRbWnOZ,N]0?J<
%["1\-,rIFd33L^,8[HZp8tgtBQ7ujoSuf;BUU8J:24L!j(5juU&^P426:?ZF]X'U5)%+:f4dKK/$<!pna5K9V=gHo*j>qsA(!->u
%#MT<0?\P`+P'%'99"Ter)+*JE:jZ;unIERYTnLhYYum<e4W9_H-O`]q7+A%:ZR.&m'r">Z`n.S?qN/0A6hs4J'V[k?!W$[NEKd+,
%dR#OR7ZkZ"Pu(_[(2I$!2MM;9$fe'q'37rHiRK<Dn5_B[Lh9R:)?:L+5`"+>Q?.T#*RJ@$_/h1o:Fg`9;j\Eh#.l`ZNWuBqGB*>#
%Z/g/J?8XQOR5BOl=sg<m&Q1G#p[EHq3"_iTV]=>4!bpT.6X1VEl"DaAV@c&EU\1>+JX<-nJZW2:[$/9n9u[6Xc_*pcop+sh$CVF3
%,\*UVnUa]U]ENauKNU/Z#1KEl;KMtG\sQPs(IIJ]s$M(sg+u>=nQ':\,D3!%*Jbks1qCk*1IP'FeCIcHe7bf5(`4<Z!Q/"W>LO:t
%+.N@-#V]&Y!R:8m1;bJ1$$qL=""FQTcGQfOArXu+?pg;1-Fb4TIDWciNN`X8:QkqfgOg9UKArk@Mo:BJRP12I.cFj%^K=AFU1KC;
%PYp_FlS*l*6pt(/4I!KrH0bQhEGU9qg];u*#Wtoi,26^,bsH?C7T/%md5Tp(dkB@IckaV`r89Mc-_hIrG+.[]@/!mDC52X?nJ8L+
%LN@!a-:m'18R8dso:o]%+:p)bnAM)T.KA4k*K]%$@`1;MAs)o!M+1/C85*b9:J;P)D@L\\FeTbFDW.PJ'0<p@cp"?p^7)Fu+EgXZ
%#6et%:G=&5/L+WBL>5[a3TSsoBKj\`"uOd565pnSA.2E.+\1["#44(%L8coO$n6-%"ul)uq#))t*%!P=G/H';QkNTdA<JM8,uR:&
%(J>,kCg-e/kADrN`\2Xk&KM=[*-E*8i>LZ=<TbO4]W@1B+MrtP%$rKE4pd!B`>eD&'l8)AIIHI^S02T>/]O-M%9U>pLJas9;b"!5
%R@m"_Q!lM,(u@lf<`h\qdr$n;[m)(8PJQQAYCJ&ZgJqm`k[>-h8%C`_M_Q+I!eSo=TIF+3Z>NLhgp5kDFGd0Y4ktGs]an$^>TgWL
%,&a[jbX5I)eIY1Q7VKY;7uC-,!"*E"iD-qdaqiK_N;-uD$,GFi.1ptoKW2LDBB:'\<ZM8PAB\%an/Sr9Wu=`e4bh?u(1gJtHPD[h
%L`p`_g%VG5!Eq/i(QFcY*b(0_0Ep^TD)YLZm#]0oM]Q%kB0g'CAXB;u;O9.rWHVhTBOF0&li_UNL+Xu="[s<K.2CV,n;5.S@08l%
%.*T5#hm\_98HFO55kNc^nM&HQW8m[Y2u>DS+]<`^B6^\P&:AZ0&h;`dM0UD<VW]-7l3eCA9H0DJH*np5KqW'6"mRf9EF7Wk02s$]
%.';>2KP/1&*(bo@LD;U')qICNpGRoJn;o!d9l/-X,e,KnFau/rNWL^2c!#P>#WmpN+#Ctt=rq^P1uk87),FdXi3Q9jBj*hk/S%o7
%'MtN5/Jc"g]9R6]</j.@3*&ieW1,Zfm6S6B&fX]b`YsUdYQg%*D=SSWc@FiM:.CI]GW!hJ<rX/*CLkFT;-O>h?u]Xj8@#2[$]Dgt
%N$9!C3ME;\%p;5B3L+cH,3JD7+&c1\Z.._;#-X[C)JafM80iF6ZE=NHrjnik@ftZp+tZf$/f+4C&_%%[[cm"2h^N^*3%PJrMS7C-
%eX[.`M"3^K)%(MU2,Ab:rN=slLd#*hGSKSqW/?OIaC0;Ge'C7W%p>>b]XE/;]7SK'oC'Ei`Nto7^H0%'p.o&/q#aK`roWU;n%Z8&
%Y<VUD(Z2rOp?ooO?cbsdhqiN@rlORMs$-F-"kr4YP44R<:-LI8<UdcNdR9?T1N\;lmL-N??/nWk!pTj=b;/Pj"NAP8b%rEGd6`%Z
%Wc]\JR'e'.(nR#HeChbD$[u?CB8/gsT]ljcdL7lf&TU/`2(=^9e2'<#mD_\[8qs?`)(85QpCDQ`Z7=F0JpPMs4\!jNgt`hh'Vp=k
%O8gI\"Yr@[-N@j,+C/*&;M+q\(R-(0=\GUKOMVS&WYGihBTp$Nm<oEl3)%uVkIarRd@GlDm7#rHZruGY[;Ujl7DY/b\O@0(=ZWU\
%buf9_0!HMt:<+1)W3?97'J]apQr3EJB1o79@jN?nX2f>"cDGhBEE4Y'm#rb;KYA#XJRaWq$V&)Y]c@_'\>RPg@A"!nCQrL+;DK>e
%Opgba!i*5<j[;feb6Q9G0!Mi/SXfet#]#FfO!,`L=,shG:dSeX&QF:5JeE3C8]g6;Tq)bg(P]-?b*&dmqC#dB5&=MY^.eah7^lX=
%etr?_5`@r9"cHWI3QAk<k4o4G@VW-7Z'iaH<au\M[2=3[ObifQ#i\.mKT8+adhbF(5itRq/4t_:@`AQlF(E?Jb[ggUX`bYg>8@T*
%Vld!SA&JKUm6sd9XUfCQ8iKFEF93[QK^R^<Ln71:5F9>FQsl&MZ@Jk]\j3g.0CYVX7T*<+o]hpc\EK]![Tj7AF(+sC[0K`CG\FW+
%\aYH-`J#B0UJrlkP<.o[JgJ<h]kAIa%Qdp^n:iZn0;si3GonHNG"4n%,BOO4O?H7.=c#h@Ll6#HS/q`k5n9<\9hA5C93]HrVPs]W
%F(=NlaAab(#jI*_o^*t$.'d>]Nl-kGDNSO6)%uPlP!i[iHP3=r!u+G1A6k,0)b%30H8oD3,VSJ_H]0<#.A=UlEm7S53_lNKc&0M1
%2\dEgRKqbGE[/0hTb#R\WP#`eat;R(ZDQA14U`V?@QgTMb#a2B07qJ(>*CK##m`ERnP<m2"8\0-Gp!V.mK]C7brGS1ZsUCc)c0A:
%2$H^)#$=jTFATW$fj'AR#MRlhKbNZK,0seBVo+st,ulb/WUHQLj0bokUtVSOF@H!d8$:,%7qL=";?rF?>?39Vn,jS!,G7jU1D,P(
%.g_Zl9MiBp]!KZRU,d!;-Hf7_Nhk<>8.\6^"3^m?BX#kJ@Of[)bd8KuSTnKR,QY($m4c<s.qqnZ04W0<iL^P#O-:fpGlrS@NM:9M
%0piOI0Oa=00T5q)6tT&TG;Q3<k&3oIR9.n84R67jX?%9IkchXKO9H.V$::2(s.PZj%gL9$Kl\42/hog40QomYL_O]Yp@tM9bUobB
%NlFYdO_<CtOtH`F`@VRB[6S)e\apFM&h+2#M7Y2"&LbGZ&7u](.8U9fQ&e1FaKG_6%'oQ63$QrtPTO!.D:4Y#@Oo=/!a`Mn[j#Od
%$R4'Cgf#Yb#+iZ&MQ"g,&[I8?H+m(AraOi*qA<E_9VXACDV(?eCBMq,[!/g?]\n&W"KWl7dc?Z-pBtChF2u7OR0t-E)MbE'"i(?c
%\enmL@Q:_+0/ff?FoXKIL$'Jc7$&^(+JE9h@L?ojfL\s8576TtdoKI)JJZKl9M@(*WQdjjC#%)IA&k\5ck/>N5=OC/#SInMg?kS0
%(DSA!ksWQ<<1Lob\qD*)_?%73p&s_?RP@H8WJ20O8.[JS^o"6iRjL!!JBM>oU4CZEc(n1MRc+Pqc.G15J7V!A*dqJ\$p_u9PVm*u
%D7$]CCa*!@%G-UD5U%WAG3mNU<a`'N->[;&3BXY;ErhVe*\nLm_Z@U[&5m5`LddZ.#qRgs4pt,O+RUHtYdp'\mAL%gW!:MBNW]S%
%VHkRgrP\CTql<Cs)hI+DABYHB@-T7#"Z?lgL.KLlm3J`U>@HRqGSafq/'Qj@B`c;<lpHGZ`HE@"`!:UdG<l.Y0Fad&c2.b_cKl9u
%,pk$2Bjr]Z5"N#+gAR8`\hfi5PbNHC&qmR!kdmP-;EM4fR[Me>D?l@6EcajoMo&D\S2..!&HGEZD1NJYb>b[@c5Xc4(C%^fPVQI-
%/f[&J;\(A>+@HjX<FN1AeOZ^.R:Lm2+p(er("+',5:WsE'#S"gon[F>^Qkb4O?F67><+eHo"[p)MAbY%O\fUANK^kqYX-WsM<HkI
%$JnnKQm]lRU8sV5%jIB+\2/fXTVrS;eqF[b/?$\Ka:h*381rc;N:2icILYEK7fC2iMZ@UX^Oo#0=(D4XOL8G>6rfc-L<*q)/P4f0
%\OkUsYTsI[V_i5VOE`0c'a$[s^Wn\_68V6Z#Va3,9IOMWSBi*$8mi6E^d'CBS,o"ABM=H/-]"U#R$jjOH(gY@cRAA3a`6s#60s1C
%LLpFD9>pq?p)5fQQ%j=4[.FDda2\+GXTB_ND?CHf;#p?!K0k.mIQj'bX@/j=I?(^J9rb"E8K5HE(,')`kBchIAd*kD?[r2G;tME,
%GOY27je"CRmaEDK^^[3W(rN@MH]#3f)=SPdqEcX!DD)9rd)LVEOdId61mNb3PK"p]gHoo.dQf83emRuYM#qZrnW$J?a]$G/E;Nhe
%]E\T&d^)g[\dchG!rjW#)E19jUd)qf*_%[^)3?/cm=eApo9kRE[\15qJQ?1b"dX7=HAc?2i"[HJ23t?61m*)7oSAa^m8':P0p3,r
%!UPkUrsXf*&SRj#);]L:C`TbVZDcDlC)OJ&Ag"A/+]hLaKHoX%]'_&bLdAnp(I>euPDPLb7bFJu?4<R;1#uXZQP,O,N9-:Pdp[//
%"^h@c,^iQ+Yfh6c&ZGmbWKS:T?lj&#b1j!7`[G6=O2`#;'8iK]1K+BL/d=1'0d+o=j_4gI[>ZEfN"q8I=gAk_6DTeFC'F."[31PL
%ki6XR&bmr@[t9@8l[9EZVGNGmV!\N5?mB?sLF(F?S-adK2%ri>C7)3U1cU,Q/PT*_Lk!t48n_8&/-W>ual*S8Z\^m*E'$lp.90k9
%l$LmI=`io$KWm`LSJ_6!+3cd0/Y*P%WU/9E;tAQC`dCcu*kBMtM;BuQUQJT#j9GcPMRc7u\.HX'H6A4O_Y"HFVpNI$MnE`1+:T!?
%6]E+I&B2j(L\W)Z9k%5`&q.;GE3JJ;80lL7D'$gI/K$Mhq.Ndk2):bR4sqY7`jh[pL-_#!!0@o&=;864@T'@pe5#nC%K(gW<4bcD
%9n@VHW^TQRSZRPO<H+$NmR[XtCH=GFMues>4DBfWhP!tBA0qoh'.)rWp*_gC(aIcMc7t?5#1kdc+gM+-ns?%_RD)lP*0dCR*T:^@
%Wb=5Bk/kG"Q2uCH`JcW?EG\\l-T>8S%\TX1+I]XRIDj6+W)u_%!s7H/YmMf,nE;j7-t-LqE-s;XV+FUL?s4`M***Rb;s&iXW;d)]
%(_R&l`D"<`6n8r2@'#"DS45rE74rSE,,!ItRW"@L1.mB%!"1/Qit*r3,'`qc0[jnq6'ru757O5qM6Knm"l5kq6a'rs&=s@nb4%C0
%^EJo?nfd-7/Bo%@+B1&h1nN8NJ,j;!d2*WQSM^*FEsb>1hml-DRffN\(FNIJ$LP;N7F6qVi5ISI%3d3M+Q/kql(XWpBGj:<'M8Fg
%?o=4GFoIA+.qj7XZ35l9&qZL=#8McpB+3Q^IPkPk!J<tkVjV=#e.j4?Wo@(j)]s%f'3#0.).]=ujrEH%1$SqJ20h6SUd"b47<R<U
%n-15b;H@//HmU(7Pi+5hQ2mr6SrB,jXcU'F-/bA'mNd@I*RC?sE9IF^1LQreI5="jUIls:Ienn"+#IHMXJJ>t>R;(GYp*SQbi;na
%4lHX\;<))_B(gYkZ"/LZ-GCM>#R;3l4XCE<VQP\bX#+m-D@Rus%"MJJ;<W+[RRgh,G18Wr(.6Q)*_tL2PgI8bh>DtNY"3C@^^2H`
%Bm,bf4\`B/f4-&`<8r:!M^FMX-Y`)PNT>h<6&[;"%NQ5OIcn`<Gn.t/7.mi\0O#F[/d'rR])h,HliBH._9Jeoo,M0#VCdm;3Did#
%S6!^oL+FL4jQaHkR%T6>)4=/.QpnJm6bO[W+[fW@Q1fRK>VPDL8<+qN6"JPp-<SF(hLf)ld#YRuaZ+&E1;PPV00lfe^qUduBM91;
%`ZWH@%PJQ2s3#-]O#U\S"3`'J7?!uu=i,](EeNR1!lT!lR@=4]:.51=""1c(U4W3AMTduZQ"<iJ.l?!e@6YoQ9AiZ#V2r^!J@Xm_
%!ht4]L+u,M'#RIu7k(VS9!%[f%0DU`;9iDh.n3u55Y.n?KB^ZQ@Y0f%(!S"U&LFkna_Zq",S3l(%;]=?0MWp3:(Uqrf8Q2qPA/TV
%>n<*SOD>U8Ne9@,&[I4ibG;$Kd*NLEM7Nbl@Oh[065mlgi:-tBI1LWh#.&\(V.s`jp8$&[ZUsIA:'>HCf\`bO$3`jem,a,ubS3YT
%R':5?1Pc()\JTodCT4o\(/=_'<'s#No:<'[ROYD6R:h0#mY>b+=tOe01T[<=n-GIk7%A?<]?0!a+CGhh3'%I4!n];%#\Y4eL"V*b
%E?)tl2_\,\\Y,$(RjUl-b<3NA0"\-&a*Bh#"1ngePS#2qB#_rU06-gs,,/#/A@*cA[DNt1*b@T]AgEh_8rV:oUc1`#gVKDY^9b@a
%ZT>?mR#(6,R^:*L#lkDt-@8nt)<:'$qMFi).u1#*)jPW19a'@"47>S]/]%6-VeajHJiMnOQiP/7PcX+&>trJKE+@ZQn5eauUMh+L
%/mJ*_<[dB]4nJjB'tNfW=_9aDF(!blc_tdJ_D(Il$YTST<4=Vf\sUHTSDQ+lQf/NkA1"Bii)(geLIHbHWaXh/#HAj1!eCT>/TkE+
%.8;Cs:hj_2,nOMQS*m'QS.od4<[EdTY&\tjEN1UKL2l^MWikE`)\f2&<&8Dj&`bdom(ms;^Vhr,>K&D7Rn4[-_%`N"SW`&qim=oo
%B,RL)IPU_F6kj9k1@.sM-sdA9\DrFpl!!ZrS2`'kK]6r1ESr\DgcJ">Di8$+D8=)p2(qm70uB(Q[kR&o`"GSSJ-HKc.:EQU?'3&;
%\u,pJ";8c.#FWUP30<pB,)B$-d,A_^9Ik-CSecUMXiTI`,$m52%e#Bsgi,*Z>*'"u_\$kg/Di$q3''iFRA5K=!<_c5/SKB]:0LlB
%%#:oA\%"bZF%Q^s["/X@Ng?>53+=j@'hh$M!/;;JhJg-sgaqgEiPMQT!gn.`(67%eahj)%gg_<Tr?$b/c81T'4G+!=WJc%OL(qph
%=bO+C:cK\8kAUV>:>6]GE=F98Lo,$,.nhqodH<<InB+\B_?ps:n0>f3Cgk0_cc(Iji%X*i/7_:cLC"3U'V4>iQuJ]W&5C,@_SJ_[
%5.pt'LU*@#2OqB&O1)rJ3(,`dk9EbE!Q#F"KSY8@%k^h3ULmSPE4XJkJo8rOTmRE;gVL^1Z63l!"t't'c=bM^Xf<na6\>JK&k:oA
%%$'j$4So="*+LfM6,7KVJ[B!-0*<gdJ@74loGna<kJG2L!!WZ.<ksh5>@;Ck$jZfS#6s@="GWNf0_eI"!eY9.F?o;p3+/3RArtn4
%9obWJ,;M5f/dQp[D^0ef**-bB[:Fn!Y/SV!1iREbL#A@/%Sh7$.,eBLE"qobQAuGMQir'oFEDK]Gi;VW/NPjcd4dD$FDsQ]9uQfJ
%dD>L33m/Qh3]K&*5i-[/E'e:C6?Nh.i05F`&6F*q*jEZN;hkU5>g+%u%6?JrJdHhlkhq,Jib8H(%uq8cpLaR=%_Jc.QQ%tF$TNP=
%%aK^[R'XF+#DZm"a,\X=$)oR)@X4$ui/AmZ*Sf#X)9b+WT^1h"nGA:g\*2b$BlYB#khmj4Z<9[&-ePW=Ks0FmfW5A&e\T),:FV\.
%"rs/!*9<K0E,\t\)<5Yni&'+e92]-5_6G9dSuuRU#G0'>Np,]bYi-0JCl8d`m7+"jdD5p)i*eH^FE!IXB)DiR4Rf#H&m'0opl1Y4
%Z:,"RRu#WN7gCDlA>?$%khm?s43_F%i/tgc9CD$%OhckG))sT!KQo8@(Lrf,la2:sA"T4rH+X._#@'PAE1_c8>EZo)%^%*4S=tRN
%0s0o!%_c!+khu;<g7CfVE,?Xr>XJa']AQfLg=;nTq)T_5GW(W;SC/973/8@*9a:p$5;3WRf>,4Zg.@IaJ:iX:3)L.q*Yf;CXPi"j
%Yqk?R$P!ZIRbGRu*#th8F[.rH3:9poRcjqq4>N1>M(:PF%(cXZkhtAeO]Ap\&KDc`fAOXX*1Zm*A<%Ud2^)nja;I#u'MBAD3]]5m
%.,K)gE's^R2a=D-i5C[\$jr0]i.N'silMBFSGF:hP8kTJ9:!/`K<L>Rd(u]V1"=h&_$N&sa.O>335Oc)dsY;>E6NjL(E,=o6Pi\%
%BB\89@[*Hr7gBPe=.lu:*?;:AL:'4>K4?]G*csmWa-8>Y@>bVU@Qi&eiPBdaN0"M[Nie29OqA`T)r6/qAVULleBQW,4?,kV!AAYL
%d&OU`RTR?>3)1VZgC=`8M"*3R1O*j?+Y@b@iPDcn/"pn>_#`,d.*rG7:2nUlZkXWE^i#V-d1-]$n3GG;*.4/J:u,N36Z#>LQ:$;B
%C:]Y`Ohhp)#8l5.DS$\WbW7A$NJd8aYi)?,WqM5U:'+(bK7`-2M`GlMnDYVJ)as/sK-g.[!sGOD-oa+8$AsS)DW/Ci:1:N3UO`[0
%;F&SHd(h[67,9dYE(1l>3$q,tB**[ZeW4D%-r/9c*"ADE%!jt"Tn/t,%t!$'JM0-Q/p/jea;I)u_6Ld)_\fWA$3m(>@Sp/WnEbUL
%`ra$&g])*;:4^OE+eCuN'+:/jm10%gJ1g,dCIqOf@#M+G<Ke(`isgTE94D18](JqEecsG>n'KO;*V`jn!?5&m+f$8@rq929n^#*'
%=HJ8<>kIYA/FMa9JA;bMV`@p*&3(pGSqgoChul`,io<SfOPE*n,7lhuh,YA3So`%"'#t"`bb\)%$jW<Z+$EBRE55o9Yk+Ir#Fme5
%M1J8D%QHoB]W<gF.'S)Z&I+a1VZN(1J\Y+o6\b[QI_O/5"s!#A^81p_'/UH/U(.=OL;FqE!<Qn/&$,gB"ATOg."F:.^mWCk;V-)Y
%J_pXRUuQt]_$:eZNWW#q;lEn;E8j+q6J>k`.7c6%@Y=b0VC"*U*!VoS7WKf1!N/)j13[Me!U#<j"?gfCE!"?`8D(_.1NisCFqemf
%%2@_?"WUp1bl6LoJFdl"k)MD.35O=iI2rK]R"n@Lfq<lE'sZ,[AMsi9!/^pHNWP4R#-VrB^f=p8g55rl&s9K;M?4id6jA3SK*'?-
%E[rgXE8&AJApm&JB6K71=ptS)>Xf<t%0[`GTcUqY5lo$CiM#?C!ZhVH$]F-O"<>Dm"poD`E&KR_Zjd-XZ3*s@[OC(h3T15-.,Y-b
%h\8g+"WSgV]%hgd#D*SP@=(])A7rc&&9'a7?p*(lJFf<70QdqG$8tSoEtIh+SCMS5!KMVDBT$AN'7H'i=rRlhL*c?u(<6DfN"`29
%0u-pIRG+lSJ;8TTP%0$K%>_CT(uWp?PJKDb(uS*9TdeVJ^bK;Og?9C3JL>$Z1C.sZ;Y$*-!0.Y]Gc%JAJ7GMp=hOt=B-(A0o*PJX
%jp(t]3rjM%^k]3!!,!``YlfN_KSMlS!'!W5W4iE8Vlga$^a9t^Qk9LWc5$DMZ;*0fD^'^Q]I(7Q#iJ+aAB`GW!03%h(8-ZfY5B]t
%'`sp"i/$PJ"?7^*lA$L;=d*3ViH#Y5S04@244k[+'DXAO=@`R6W.+s<lNlDk$B)G6&\pt;AFtl_c<)tf-?mB.=3kt/:r%_$X)o%p
%Kse<3=])t3CbB<e!N2Q^-U9[!3331=D8(Q%8#tmTmP*S_R4dn:$okYefqKTg$Cc[Q",?nIAPAHCTR^MTg<>'h6NJQaA5]V+J?(bY
%Ra4gG;63l)NWQA\_%d'BHNTe%>7>Jt3YMi]"utY^(g4Mf!,%6]C]al$/Rpo3_(i_C5?BBIF2\-7-WT,%*!;_F.Qoh?_uQ]$B&U71
%Q[OdHh/s9J\s$eDhLL,T%TTlT70.&t-]Mu'"0Tb7Pe0C)n?<aMJE)/9k)V3DNWTb_6W"^[38jE9&VJ,D^gTmbe,C<l*$pL,\%r)8
%0uLjJ#99qOZf=OqE*E&C)sfQB$oFb^k;_CI.HQNu%QLCb:M4_gE(htuFup0n4YDD>g#.C56kh]&EPO;)4P6jtJ29mD?!894P!`Hs
%$3Q=PV2-?T3Y&ZSLVXJ0_#\1.*t?X."<Nqkl@GP7W2-AI[;:B/.JqD3>(OHkS`6WM5i@Uii`WW-+E02W=irCA#mUBk@;g\3)-U+d
%A8B#)Z^H%X#Wr<D8DO>uF"EK"2[NMqf%suiJ\YbL6gtis*.t\=#TO*i1AA*(H3OK^CKh7IX[(ea4Z6Dn^cD5?$T:9.E8e4QlE15?
%,L0NXAcMl;VPn=cFk;2[RDP4:?-A,ZR14Fh!sHmP0P4ZR&3(koor&6'!bWF>eij.d,7.),$k*H4fk!:Db+ZVuMP>pq,8<,+93KQ&
%^d71QgV,rT#GLJ53"i`e^_Z!%i-\Ks7O2pirscKSOMET8L3(!OJZF\cX[(g#60Ee)*=*W2VPoJ>i0Xa4_8Ci>)47U@h?F+CH`/E1
%E53(8?3lMY38f0u/Lq5hS/JmX2DF(QPY++L!tOLrg=Zo?*%8?Y#9+e)6=:@q_1BC9!:D6/F<GN6YaUCg#b64;,DHH'\A_3afcYjH
%\f'4Z"AU$LA%EWd*$n9,g`h;jYOL"a1b4WK*V(u+!_3:?q_hR7oF>:cF=_BS+2Wf.JR@X?mk]<<1`A=u-E2?0d(fb$m[0GPB](qE
%4@RTC^qgO[FWo2bQf;MB993K=$nTnL(C^eC1$-@4fV!e*0isF5,8rPZ5o.Y!Tlg@U-$+WRd(m122)ERH"0+B[)]JK_:I"lPrbmf$
%c3,F1os\Vm'IBGuG;O9#54M<.)E@8&R$tNN"35Xb[HqSbFL*_)cI'F[#G,bZ^ekMU63dV518=$IK7ROc'1REY#*(&g_VW,E=i/hS
%%2_'3_9;rc"33JO\TTZGKjas@iW]g])Bt@23uBs5pe-Go(cYK9Ts8kN"qEefn@FV`:>5bY=WIkieprGUkQVD7`<>\o=Q%Q,'me*/
%^]TX_VH\;`!_;bnGV$72J^_%D)94F?JYR@=BY'3-*dG%TJa!RN*:6RmfF8TU%!Tn="<t_b7gUn52Gi?$_ZLCL,D!bm:ssjscCgD9
%3<K><1S^5Jid`7)Q"^A]"5`AaZn2\GCk3nW.ge6CVR3EIi337-`"O+F^qmbCM!Yc39_r,UM?)N"UlR)-GdESi3rV'S+tD>cn@o(S
%)G49)^JU_H@eei3B87-KHGogfPTAeI*<$mT%^Q&AnDBKV)HZQL,]6H[Eq&PtT=m1#Xs5s47)-pHrWBmUXL`7>`P-GB&uk!c][C7m
%k"5:=X:,9,W\=k`2'c:%orijbNdF0+h?sm]=Gf[*VahA<i82\:aB75Y]:[!6$*8[]pG\UX1>s_W2p1ne<8+=d6$ENReg9oHm%qpa
%$1W3`U=^9[kB0m`[\WkVcYb)XD^o!JF[nI,O_)KM[ftl;p-M21.).K9Tp(.(Pi$:(,>G*67Z.hBGKOj4+CM[Sr5S)7H2+'1L8S0e
%K\rI$J5*T8qsN!tKC0\TGSV9_Sa@A6A([LO`kb)>V,MdYPoLlFhoHn?AV]K=I$V$44PtBu#%e(c2aKJJ#+b@5Z^Id:b4Ej^?pKA-
%)_Em7Q9=&iP_sUXq1dA]D;AXrY#b&'61U"ujm9n'nW!0QiHCbjI,e`IAKpn=U]MDUS_b<k],##RK&+&=m4d2+ab,6-gW@,@>B2n[
%\@nSm$(@8Jm>](Xm%Z@`A(O:GURMpD,B-9CqbHK0\1MuQkJZ4jAg[ef2d/bd2i,/8,KG,$"g^.V)&*q;hIrl`X8N2o6b*bdPSVd*
%W0/j^:!DJH:gni+GeMK\:Y'9Wok*gtoa[PC];hgLK%?FMBs3dlN$s59#uL&_o`jj1SU&?C:%06m2hT_O\:;eAiq4Y@O1NgeY;_%J
%#!1=ffUMXqBW[T=hDi:&M*^KfK<G$=INnL*8PLRY8aMEi,&MMmHF'<.Y^=[]NFqUeK@h+p%%7T:D`TM9Ub$S!Dkb<D"R+(dYV$cl
%+3`TG5T!C+14.J@.`kK1hLO_tOMJ^!N><tU=YP11"RY3elqRE7<B$;Y8SsiZ?[[Z,0o:j-<k5nX%7R*lT=DRKRe\p?Ha=O.jb_]\
%-5[+&(=_1@_PMX^;gU;jbU5>HHX#2TVuU$uH^![/Kfmb+$`]7:h5S*P"sDr88aUB6K<Grr[t(6&@eQ+k`#W<*VBd<i3/G89:a5N8
%9'hON!gWfJ]\X'mYkGj'H=Lo^3BMK!q4b0p4&!lTKY_BsG%P[hU-]tXBD+f-$"+6TDbIa]:W2,ZPDC,1M7j2sF%]SDD`"[*HOtN[
%n6t;dY;c&nGhR7GDqOg._ccJTe*8=$VXf$8?QdHukOl9Jgp1@Df:,e>4G#Vt2`&cnp+;*6iB.J;GUN3>K1Y]O&:4d(LDJH:`86#a
%7,+IMHRl$4-XpuqT<oLP`87SO!AZQh]nm@/-b'e9j2m,W08[AnoJ8s!LqPMGoRdplhIn4]:oF!Kf8T!OBMt$;CW)Ce)lSr;,+[;S
%n@V[_R#0C`-p:N"40:GFj;@6jhLOr]l=`KL9jEb0".e!^/J3?PT_2o)c4R.IdsA>1`HjW9H:p@DP_n"]Nd`8&m[VmuoIH'u:gS'n
%H4sC1#I-3TE_OP\0RGTnN"i#&m*3cdp<SoTRp.)%3gA<eS"WJu@eN8!6-'572\V4NdF+GrZ1`H*$u0]mMd,LkW4e&Q$0J29hH[7/
%;1mRA/]-GVT_@N"[3KBcIT_M.G%U2kn,>4qj3E?tfE.m=@DV<T]Ym?N>a`9.V+5EXcKn9n?).,Z`9](4LV?O-hK3/3SVXu<QATA+
%K%M"H(C<GiZ+#Cb?(?_akoCR4hTUhiBhL.l^(YiLVk9rhS_8A)V[l"jT26h=D?FZ1+fgK8EPpk6[YbMMU2n;XTYf+5]iN(65mTkR
%Qm@J=91^*)b4+jr>g("nMDVD4PO`+#-@46_-`(5l'j`kY!)g*b(fi&<QUkWnAjL$NHc.NKG5$f)N3#c21Ed'XLTGCe87Y.K%4$YO
%)YR0BL<sC-:ND6_\gW!"1.ZNBK@GV'M+P/AHBINKmY;IP/7<2Q.KEsTQA2K0(,RI8qX6h*JUFn&CV](7[#Tp08U(M-dZ01L*Ma4e
%>-'2(<(*G$$Ki@3<!3L4ZMGpW*1c`R,LQmk?%KHd+eW;Op4U8,kf?>[ONujI%:Qo%ALhWh`>?W1auXYqV:\,b=]N:u"msD'+C?Oe
%?G*HC?6kVdd[<Ns%"jlZ:+5K6&C3CXNuA='\>jM`&,hDA0NJ't["qZ_ZAU5h)Nd8H=l^+]]0X7@bSp]eW112d9Vj/dKMtdN!2uP?
%298EZ96,Y^'h)FkgX.Q:`=%2^^m6m\d?5s<J<nR\BFg:X-k/TG39XcV<TUW`%IQ5@]XWi07?a@\Zm&sZMdU,+LJ2K]`fploMqW8L
%!B2+ZXq`gXj9#BJOpA*H`)P+cHX=]T!iQMo<oS)$Os/GWW`D@f7`IU.jAsqdeE;?*=-O_`L&l\#]uA4r6P08%5m1kEGUPVWWWp,h
%aC"M^.C.sh'6;SE7\O7dduT+^eA@&`(ial;;4c9C5t\HY)YBpnU`Vjd@t^&U/N]X<iT/%u70]73h4654O!<,C<?ZK\P"][)%Ot>H
%Pnp6tj)3kpL':@(Ws[2TpDXQPiV09Y)"B#8XD=&)J>N=4NCQSRjgY;Mq94t$Z)B(uZS@IdMfZtg&RAf7*8PdE.X3,c-R^[+7`!s(
%Z=J!=7(t-$HNY<D".g'_&8V%F*QK!fB&B:b$Mcupjgh"YUl-84('SkhY?W7!;$oiuBr7*SWRB!6MSf+J(16m.,_Sq`;lB.]&hP4`
%f2G)#6jkQ,Rr`K:KWnV%Y<ZmN:4XN>a<_s77jXK(b#/Gk02AMG7<5,Q%t\s'+FV>!'\smb;gNC,_"ptS$tam@FGU;\'O_H;ShWWJ
%jn;VE*I`S73$,EZ^QC`o/(/Gt8O!9n&Wm'G8R)H[1UZ$>"2X!X:J!>L%WX5Q=?87O<$_:4%)HW99FdUeKS0S\7?F2(HEmUA6-t\T
%!;qLo5aFQ:Qq,45nmTFpXZZh*Y:h4tAg=jU3)`uDNnJ5IYJ'HW\\kO(lR??+WkeA#6>om_VuiG$/Dm7<46\sUPj%ARZ/:'CZ+L+n
%PBVW4G.9&c5=Y#LfSVD=R1Y$bKpXi9<6m>`c=`)Ag7qPlKLrkQU/j1YV?f!/+MZ=1:314V;(!%=!Vpa9CZA_u"&,:1A`OuC1QkB!
%[:5I,$Hh28V=7mAPd)r`*qcMKBOVH3@1W_O86eX8/&&oc+_l?6`(s-BCK8Lji0m`.NnU9o2=VNZ7tcbt)7Bm,\?.Z:YmAYpeh6X)
%ck<T,EcdG5J/2M9i20r)Kk7SXILYHhMHb$1Q@35&&pqW>9SF^YWK+(0I,H2]-7onTRt=UT4nsuc\)DS;W))S2LI9osEX:]/<.5i>
%)'FfS:I,%T,jH`7R[iXCU:^f"&DfGSo'gO%HYRsk6p%>FMV&&@At4B(b.r@S[UAuE`]q&]rnJk8_DCT85sgjhTI1WY=[m5e+O'IC
%C_Eq*:hFpbd%$&QEmmWmEY.(s\HX8c*go\]83O@=\jbpf(lAIsMB"8/64?aq#ctoX$JEKrb@$^Q(\r=N#K'[7;_0t?4f$BgL1Vpa
%_Am'EbTf'Kicp6%)@>8/APjEY>Z.>/hLg(\$"dkr34;!7RP;-G5`3]0Zm</@Gg:%cR5Ee8<?P_Z=^E$*,#`%Ygc2JLodE8Q)m[NE
%AmAosLNLCicSRbk[/&J\3WWJuc3c-R%0Wj0b,iOf<DM)$F>Te:78"+?WF3Z1G719[nt0-Kqt3=FQH2I*CD:LE/=BgLa2h27b&Jn9
%-r/F3e2"KWA;Wr%@[:-L4AfnF`s""/fKkKlkY6u,Z)B-<L4UdM<tNh5p%1!J0f<sUOjRCNPt='Tc-CCr.QS5o?m<j?GZ$*@a$rho
%"LpY>j7.ZUOS_.&WSEt7Q4M)KLPfoV6n5465.@TRUoR!b"^])0L2&Ug2g;)Q,_:kZg\F,;e%hXtJ9MH<LYoE8SWt`\k_tW8J/qEQ
%gU-9l_qZ!c;%*QX,LXR]+$N>d,?dcR&nEAhV[>s)G="#m<H`dg#O6h@<NTd`-/9rX3,)eXQ7[%mGfW[$(MMs:%SAN&P?)N'MBnjK
%WG6+?#(TJ?,Z/:BpcQA@+c[R:NXsXb_/o#s"LUKi\qa'ON&`2G;9"kGc3aPf:aF`7#&_=k$r;?LmU^U6Zqdu2X98]6p1Z&[_'7PV
%Ro&Yi'*5^@&`F)E,fLJ_Rm"EKU_?+oag)7tiC-d%$5hNkKuI/Mmat[LPA+9@",%!jm1,5aTH'HUC8!$BL`E#Yh27A"1^26b?AX4:
%6^dk(Hi8?e+ak<jFbd$RK5SdeT'U$YaSGe?TDpVXk"3E9/WR"c'ff#dJlbs=VTo#.>*Dp[d\fL<@mFUQ:22/D..a!O*t[[Epe6t\
%C=Mc%W6HW9K=;/@FSL%'\q1K7"^_q%$W_(+miJT"TGpW?b>C!(W0ksO<.@8NUSdKWN#=epdU*)n]qhPQ*b-%u;0ZF;,g6G3Ed$6i
%=Hu0?TXOpT*T\6g$s*cj'[NJ5;V_jfQ3f9d:[C:KJqfH-GW:l.)Y#smeVb53>?<l>)tM4l[frZES%VEr-a'a'\[?qU@rA"Q3>U!`
%p0JpN1_!;M7$n=#4s:`4b6&(sEt_k6,6g9Y&6B3>Od[Bgc=&Dp!],P7=&ej9!lRBdOG:Z9js:`!rMTfc1M9Wo*>g+8<U]EVaOV$j
%-V9UcbQ:#=o>"ZFJVlKaelagh$ih$m&^*KKTGKF=a_'o4,b(Z73dbI?RUk?2q*972f\*e:_/sar5+)&*8$H'(#,k/#S1gQAh573G
%>G3s+&OnP]k[Ohs0T7Pj5ens?hZ\]g235'HNiS&:Z:kQV(6$`W_t?/[)M\fJcCh%<OI4<Hd`qm&",c"<X'Yn)B$WW8RkIkf"]EC@
%ieE#%;a.MkfaR'eG=ZC!dtZ4V7T&LZFP<IJQ`jAl#/Po5Pa3Cm-eI3cDFG/@AgIRlCP$k3@.lY$*d[qSOhd5H<:>Zh"6rX=Zb]1o
%;$S_06UO?a2AOGO<&S-mJ1*V&E@%85bRpR0J2(>"ncIo=E7P*+Z%?.8bSYr_ccfST1]Ys_r=6hD:]gp<Fsrq<]c]^C<uET)$Y@^4
%T>$[p/"r<0IVRdm]A5*A;'/NNb+%oE99059:hc8\%)SmTPE9N4Jh%YQs(EOZLDJGX;mtM$Pq0J-r">E'L$tjn+fO!s1NdO`XJG.(
%7f1,s1&uHY&O=W#7CDU*$cMkC@URV5<Yl!36Pmj"TR_+7a[!`q<6aIdN%[Q_QkfABL.]Sg%390tL^,\!:_$]&XSKB6fDVG3)T,Zm
%Sur&tW)jM\I[JFU.1gN7_V5+WF*I3qC.:.%M9t'2L>7Np1>Q6^C^$*2AkaO%-<WY@K(Cf#%Vs)50dR?L&)_"k<Mq6F^9i8#jfi`R
%W=LqmhF)0Xn2%>P0f:/]0HgFTS[*;G7:t7cFfbWZ7AiC0(-:>JKTmR/jM6Y.mK>qU?3g3TF>o@sKp.U5QdIeonSiU2T#HUgGn[-$
%MYJ([Ef)]@[`mFacqA2_H-hsIX%<sm;b0D%JddcSeg,Qrq'&99kh^!",9rE16r&mL*jTP1j1l/0(Fqtb-%pFrO^WW-jI$W.7`u'E
%`EoN*RUb\2"dO.u8KX(29V2In^?_8,6qeV(OE_U=Jk&(HLf+g,"S=?!O[d>YV(/T,e!P(-G-gF2YZO`+,5242+c<Rrq2c,BPti*!
%5$[OVX<b$P8Pb2WBZnL7'!*^"7\G\8Xb9H.AG+'K,;kh?G1-4_ZuBpdE5QL9]G^fH4'Tbs^6f$(,aV\]3lF1LHPV8m-.3$ui\jU)
%f9%4>3d4.>m1Ddm0M_u,im_k#P7T4[P:1j!7:]Dl*!b='FabQC=B]M@$es5J+a?H;5h]!sN#6PpTh<7MPsu.e=V_%d@-M'2Ooh12
%_Hke-XV-.N(]\7YfWiM.i$ld:A63;)J>\urmh:oE[HJAs9@thk"h=%LRDLEee!(m_cJkk/KqSWW/BCPXIYoF/eGCFm&$sV9;d1H]
%G_3/tZu@sWFiV]ar3YXb#>-F+Tr@+!*0Sl;!D4I7TPN"KFA^O;YoPT6RM\F,eP&h*0@I^Cl$5Ktg(_g^V?nNT==NBV<L?,F%!#.3
%1'F*U)1qXPB7LhprSS=*l/`OV^6"3(Th-5F/ilQI@qJt2FsRg\MH3U[-4D9\Umr8.@)?"gekEXYYlnDZ_idIa7^.6gZR;[M^a=%B
%9G(!t,N2=YaWA9?=>`DRPU1hm?*lg6>=Zr7'd6>)YQgld6%;N$H2nW`'fAthMqi0%P&45o>#V1OoT\Ac*,i3?C6]Ro[G9^sdfk;-
%NIKN_*eCSr<H.1HU1BBHR`+E?C:d5rUF*A`aVF*r+uKsgS;S:nA3M+ep-b_`5`[/''?qd*io%ZL,X`;tkdMmlnSg5R5)CoXG[A`n
%1'2!n0HECd[01nW2@4Mu8k4F/H,=Ym"TG'nJf#7:"LuN,SP'h3,H9E*2`?g4TS5K;h!-Rh4=(#u6qIUK$/\N)b+D(o&K[5aQAW7C
%iZC!u,]7IRi%8um60?/U*lW@se?E)<N7*,:i&:5fc9+kkK-Z\Q]PI[']=goJ+7'KeWeD&?%/rA)JPDGOSURT^-1tYE+VC,!6jY'D
%HpW:=^]ljbatU>h7VUh]EG",`Lq?G7<iS!#Id3,1a%lA:$c8G41%oqin:S;Q*iFf"Nb-':S6(!V0M[:?!2KdS&OlI6;%n([&&mbO
%_IXeT."+Q@_eE"%dH3b@B2`5RF+C\p7/S%9Mj0=CR[.I3-.0,2^_^^B&P;/BOl7^^Pt2USHE'hM*r.6?3tV;I\Uj\<aA=@/<Z#N9
%7^Eo)(HD-.-%7G%g.rJUY"/dWCL5*'5DnAM[*!ZQhE-^;P0UR:GudO]Q8$J__#k'>.Y[,m':[\0U2i:Icu,cO[QKkEV%6A-aGC*f
%eB!5eVNe#k9I)Q0<O"\KB[pPCK/3M*<V$[]MbGqtoF8BT&&(SU*R.OmJm0Bq+/eC-c(pX,4:5^02^M9Y`Q2B1oH)X$;G[SKfc_(I
%Qr$[K]pfa&YW,$R#6?T5AHVi_-CWJ1+q36tZFJr.1@$]GAH82TIgSh%+N@KX.(`/+/<I"qB%7:pG(K1d8^D.ARR*1'jT(18(Z#<2
%p)qtgG#JI^MJ"5i&b?nn01CmMb1mlpGZ,Xp7^WV3^laD50`o.rJ+&[Elbkr-Xte''-D-DsG!REk"D&@^:LL3Oi<"(o,Z30)au^h-
%%.U$IUQ3]!eLVE0Ee<($On+0k#lftmH)tb[U6dfH&b/lZ_[ukS>1lGt*Yc4?_A-2<?mQmsJ*Nlm*#0#!P=(8i`DA'13Ib@+)'Br_
%"tn04Jq=3X.7olrFOe`iXciO4*`.(s/^t:QTs0J5c>42j'Lf6T_D,U/:?fp:OVK9>:id8hTnO/@=d214d),_m0#toA*^G(DKB.7'
%?NhDmE<oVlRlC\mOHUBn$*fC>H]htFdrCgJX;3IY2@.);$'7Q[8kqG66WO10bq(@QE"\QaK/:^B%(2N^KB.UBEX,Ln'EOk`a.WmT
%H3q1epm:3FPO&`N(Zb"g7,=N(@gNH\Zm:X`;6c%s`5#DM=Xlk0ZG_?_g'/)q7Q6_gQo>Y)FWU$@^cZ:A\fm_8P5S#>OI!To$97mA
%GtaH=1k#h<[MZu_7<Jo7,c\b_a[WKXGThO_o+J)T9\)du_\8DAJ-[!,^TG;C,XPt1G5/*$6in(i.9?N9(sL,o%83sOZH>\4Ka6F*
%GC=/R6WO654">Hier(."l).Gn<E'qJnpB?%i$6T=a7s,iO<k]"<d`?)&dg%[fcrT]!(gEq<[G8m('Z[!,r)8R)>.uJ7-CMpSgD>i
%##k`Mck!h]boi+8*Eeul>023n,sN9-^-%MB&Ai66[DX[oZmcJ*S<TgP#=('H`Ep5#R3OhEXe4=cbbR\I!&6p^,B9Lm"3'dQ)+6q.
%.J9T=C.18:CcfFsj;RWBa,Q[=j@Zc<q'4^OOBP6(6MBt@G+0u7'@b6f"[\)2/!'%YG)@%jc_=Vp;Z<A"H)U4EL&hc-I#jLdbk+0b
%<+ID3W-4S/NT6_#I453cb[[#C8k/Afn?@"QkouBtVPBc??t^l-@dI8tB]529bUP!/bUM:@'eB-#9QS90&d<qB\HH@aX;[pW_pWt,
%_`t4BZASgQ-bV`^+fdV<DXu]^4WGJm(kds$GGU;>&Z08r$Ek]].Lac8o<=cAQ:ZJ0+:.Am(c0;sNYXrWM#Z+iM&a5*jG\1)Esigb
%!GPWNgu*X9TMH)X9aOsQU]e-G/&ta\,g%m+78),S.sZ[?K@_UaMbul`-#\LDb;8MG-1`Q4K!)O#_$$.32qc$0%]Y`"/Ju^->N#^^
%9oTQQ!4tqYJ8b:3!+Q"/,T!a,%KP01bfpi$"MK9J%qh8E!S@MU*C>G_LIc;%@,P6p%>]TGTF$uGYotGg[MO]7d\:sfKP_A+)C[,.
%<9ER)LU\Hq`di!EYQ5YTNTS\D:$D$dUm$JkT_bB[J2;``=cJJ$D%3tp.',rp!.])8%8r+M,Ie%>D&?(4[>L),\kHL)U9P\8PE<GM
%Y:O1CLp)E6$l>CH?m<"\YVS"'%F?%t-!A\O=XJ\8]f`Ub]@oiPe4PtS##I4la1O'%)ZVaUba#8mT+a\k=C_JQOR,i!$8;IC4\Fk_
%:'ZfY0!?W>.Bf'Rj9>B(,RaOLZlh9SBu+7VqKA[7:eNME/7sD6<1S.M4&A0t9@sP3L).lf`7h'(OSc<f2:CPT0uRrUDjY@R0e6O`
%j>US";-8T6csapp)ef`u0eHu8j0%rA-hSr$1Q]es>2e$skrf]tLP09la2kq:p+2+b,JlDm9U_4B6a*K0fHsFb/HBgSncBHXN[ZIi
%&d_%l=*!1'3t#CPr)#3;EDUaU>Pq:T4H?g"Q2YE-2*6acPj_$q-3XJqO2gc$TAqUn2&RD?4=ameFCdb8LR&kC[3d?1f1nc^1o<nQ
%I1`hG.;5R?k:S$!)]3U.Fsh*9&ebA7Kph_AO/DOd3X(>BbBQLu^?1SG)EH\<mDlKI&>@688dWS@Jn%\PIO%#&4L1^CK"Y\-cA'"Y
%j,Vaoa8o[NKh<F=b)(X)=]U?f1GCS)jsk,d`6cR?`7_>N_>?BDpd'=1G,LD):63Q<PS.FGBR?F>=UsnO<M9\Vik.^Z1UD$d-H-*o
%'T<q1^#V,EK\@;/Vq__oR?786MMWL30T"9hNubG;EW0tN$Dgo<Xrulb3Go"'q!Ap,+?:Ckg0o3HcOb8YP[HuGMNj&-Y6Ul4a8&K8
%U_K(Z>_JH$n75F(7b*\>Y6O7cA3Z7NKW:d-Ha.T!(55S--4'?4nga:KYdjZfap(7c7i!9@.LNP=^,Phe6O9^+h6Vo>Jf^1HS3RL?
%AQ_r$iEeLO/p1k=#)qRR(!dL]UkC;6kd[c/\HsX^Mf0)n>E5687c#c`VX^r_e;VO\iFqaR>UlMoia;9&C'>5-[7E2dm#1srbs8eS
%W$iSW[#D!&"K0J-_lR!/W^i.4eEg9^MD6DYM@lS1iK,<<8esR$`qRkINZIpE8qhKpT\;j`3A]#VBlQbn8QAZq9G66K.S92"g0`@N
%Y0,Hk`FuW_QI9oH&H+$`98b4hOSfi(Wqa;0a^5p-<&SAt"(QJ4@l4uIW1m7VJJ#<JgdfPH//n%-nfcH]6Y/Kmn5V'SR;JL;!]Vc7
%/rNVs;g"JM)A'"pbB7f'$PORVjJS;X$m_@&7[8mJO_Y7L(;]AdGNWB`^I/fA$,V<E%0+D%NDW+]'7!?ZADU63E<n_$=]?aKFkUM/
%U^:"5*JVMoD:eCMKDYi5PMh#/*75X4,u]h_VRDhdP&1sa[uMcUI'9R2MAEK0On^k3d&T\UR7q`-mmuuil=J#`D#6Z^c%K-".#oh0
%(h5n4@<0Ifc'=gA8fp`H!Or_4,iFC#+B-@MD=,DEK_L6_?1NoYP)VOq;RJAiil92s;Ks%oFGE7I9Oq#po1o'7W$@A5+5,3F"_g2Z
%:ll("BG(g15l(1_,S-Efm"O<t6cS&l85?,oS;OEl/tT#fj[=K-@K_7[c6X!SLud8"24J8fjZcQbnop2A0+VrX,Y!c'eQ`^c$fN2C
%(/omiS_<duF>%]9$R&0\qoe')!65dsA#C&FpaK*_K`TO15*.1%#s>Jc7nWJJ7q+S_^P,@M`&>t=#.ZqWW(>++U*b<p,&!G(jLtUf
%X2M=M.4:fq,d"R$`/Plq;F!d9L[Q?i+$@&FcqCU2.[6V4EB`glqHOZqU992%JDJR-dtU2S';FY4"q`ojXLc9).7.`N?WRe6*],[n
%T.cWAE_1KYKpK[`f`L]]PQ"5O>\%)4=X`>KNPXjI>t@R@o;9TMRmc_.(5B*IMI6ts#W+iGG_J7#GZ5@q*)tYF$+hBb=j$eCkLqrk
%g05M,^I;cJF1_6g.N*1Z*Y]Z<*RdO!Ojg,D#&kVd+e[F2UBeF7QIlBjRi0,`F::qr)6B39J[&+29>0#scrXhtJjH7gCcq>QeK.]8
%>:OO+MbVV5OQiGU"t=N/7^3q#:TmI16B\Wl_&F#]+Ui1,6H/$NZt!43%Ask22XoK6/KT"/M"M)MJX14bacI[<Sct`%<VJcB=@""7
%n8.CPl]l'7,%J^9`hmQ17A\=I:nbV%[!TA5A`6-(JH;YN`6bb<JH:Zdl"JK&N"`XBGs&m&&@Ele)Xp)!!YZQm2F]Uo,!)XcJK%1/
%jJPfGX,Z=>J[O<&`efQeeN3s<Gc`AV#l<#KKl0B%R:$bKqN;PPLIRHudrC^&h2[1T@Y2rZb3B/`$(7KK(WXPrDM\KC[a_R'>:ljc
%A='AHr2J9r+Zf<as!!;MR:4&,l&`MEl@M@qG?BC4J.9R5`jm!t/79!)AoIg[Gk7R9,DDD9hXJ[/<Ha!d(6S1+P-2`B0+C2-eoLhA
%>,sM!,l\t2N-<Q3F[BicF=l.M"C9)6>C2e`ei+8TYRW*H_PQ)1hO&I5rK!Ce:<GHp>$0]L=MP_gA<(+DB750kWs$`oYm7'"]VN(h
%7OF=Ag_6f/Gt9W/Ct'n)YRsfc`<g5"-tsF]4Rta`M%P:L0UM%%<mF\^`^UIi0k6jm!mC*%I>B30-q<mTJAmTQ#A5&L>$P,s-2/eh
%'Z5>s`lu`7RtW4U#YsF(I7b2(VVam9Zmt1SCk:9n%7<$qK,R]"_R-=#Xca_j9%?\5MKh"(9,K"]j/4:[1\1NZip_jkIAQg1EX7K.
%ZKHLV;u144#X#F41noNZTTGmXU2(M+eVUr&h*edY)7jJrihYbVLiW5XBJu'H%Fp<#CrC!15J(MLZ\>ue87NT<2Jfh32+SZG,Ui%H
%nAGL4ECPk==M1kNFdE"LI#.9IQ#A2]9J2>G%R"Eu(=B+P14I=/k/8&Z1eLZpOMnSa30X'@JD9R\44iTQ%a9tVrtssD?hS1b_a$[I
%\5E;=aPHu9P!ISM,Cs#>c"0R)BNRcq)5IM3I@m7Ha[1?)_B'[qXhiJY.QK=fKt/e?mQb.a#%XrT$7-4?pKU4]*?hPZ4p;SQd4ZD=
%Y`=jo^#.4m+4Klsk2@Us"Nfn+_:<e`O+6:`+Y8Z7#(!pI#9>&KFM4??:9lkGrGfIg3&,6.eCk16UBO,=<SLB8<_/W?j=HB\7n.9I
%]t&G&?m;=/::\&H89lLIEhbV4P)+rMjKP;U7M-p[I'a=H=D-f(ZP"Y+UPQ!-/6j6bGRAA$_Qh6B$cF0Fr$.t>_T,'8QdLt.3R,uW
%Ki4$NZ>q[EFblN3Q!B25cg0_F?fUZK&8H%GJ<qN3)gY"QljYbsSe\3P/8WKrT3,&66FK;(dJ%Zk.TIU*(od2<-^b3r9d+8h%'G^'
%N_N'cC60&q]**R+c;L_4bR`M<@H*eWhG%)T2(PF=$!knEdun,T6j@e=@]GPeL#Gd3M=Q;#9+J7NV$>*X&OmYhMahkH<eM4pi)?l8
%G7b-:Od0(JKY'8N.S4_KGo**,h:m9fdXu1,FTfW@-8uuMOb@@P<c&Nhj\aLCEj&@`a^qoL8Of3[@6>/G=&$m`@jXd_C6V$m[@1JS
%,3&lcKocS_f`QkmUmD"RT/i)1P+@[^nnYURZ79%0iuFM/_L"-#K;-s!J#%W,=<SDJQ(em\J/si$N"g[M6=V)3.$$bHZhomt=V6gE
%OEm*+#/#2GPaBME@X/3[(tq.B5Tq>&Qn=XN[fXaqeM*cY&VqD*6<8=?dp'jTaakUF%V#R[(pj.AE5'EuJIDb,b2O/Ol+HgIi[>jX
%WC<;jeL?=nX0Gc':-X&>nM<lnBs(?`^s"`$*)$<pAfEHV4np_=aA7B$q<2EtU^.Uq.k_*:G&$P'SmjT6a,,k4=,i+QV*u"Y.ea@l
%,\1<:<K/#=k_T'[eVYfHBE8mlI/?NS7'Rd3'M`6C#/R6ZF@&Yi\p>VL1NFs&\fgeA;(?[4rh;j(A:YU8ep[aQN6ss%g(X9rl8\iN
%8-Xcb:aZFK2ahniONE>D@bj]ZorNhTP#]hu>niF\*hF;Q]b<Tt<;+F9ARsn"&pA2-a\phu_;L%`aluQhV5cc!]Ln?Ica]I?E#M=<
%A;u.69s!j*^O)Y*j-0\Lk#bY4Nh.XX!J@etfVZel(03NZX%7Me;AHO:==R=.Z5JGcIX5b1#MD_kE_`Jc#HnK(-76<iZ56@D-"d@r
%+t<Ie:-cN7.AUDI2i67TN'LA:"1pVE@F8PBQ`;.,JnJ\beGDpCl`;)*Ej@YQV3(TW$Oe<fLpo21`fj1,)%qS-JTKZSR<>VW8[j+#
%-ZQYMU]Z4ZoV%E1/:ON6mWrn-HS;aBA.9Yqo&-01<gi/@J?pR;WG\@k2d8cD$H8:)-deEGB>tp?T'(%sQkj;U61*h4GBiYpW,JO#
%Mi<Xkai27.m%5l2P<ggJ#c%1394f+0'&/6uGVLn`Jl7AJ"ltak@nqKoLP'<"V271[e:FFL$dqtn(:E77$jkLO1^>27PB^Mr!qGNZ
%HN;gsE4O%+al`aMIo:eo(,sG$3D&4=I3rNpQ2-;^-Ye`_A8t6iNKSiqKqspdXU*7'?4md&V2RD)BW+bQ$jSc+;j!=-=<cW=(ceH%
%+9s6a<+02@,$:&IikUREAR-,[2>*D,,ho]r.JtV2.En/I3tNcN@d5bJC7JCuZ#)5L<RZT#WCXl[>$/=/hiYDPfE3Z*N$S1rr"Rjm
%<CFa'PXk!O^_R>O!NORJD)Dk5T9\J_Cr$puDilrTs4"#+Tl^^=)F9&G8AbKr.akCS6>>[UP#RA=E:Da.9Go.tb_+S'Ro#ASJ-5__
%T3i=s'MsF(R^AlD,E,HZ$Kn/t9PqdYB=/Y@d6-Kj@!COHNdq],4nKGGP-K]PPc-M`/WnFheq%lA?l:8ue;&ttc8f(aTEmDUEm)SH
%KQpX^q:g<*<42DV)1c!'o4.&4h]F0QXs?>/aIC+;7BNp'S-5T8AiE)F2+rpa:@fr.kO0F:@BC1(KV[['o7YLh):9QCVAC)U%.56-
%)NaN*4+/QGZX"952A5hd?("\i%e)(8eJRgAFpV=XfMXPfU>"7U7LC_)#H9urIPK"%!"a-2:i/BepeTBn_2M4fi),+ueC,GD=V7<8
%Kaf)`lF<5#,0C1_2qnG0<1af"9X-fF"Y`*Wh%Cuai0-q\Aib9@`6B1q0rh_lTLEO0!K"deM,,1AAF^Bt'<5H)W#HoCB&nhP!F?p-
%f'*]e-d_HW;6#:@fe:a7W0UZQN3#UI.%^1b5iGdR/t$J^m[fQB!5Um5i%XF2B&s>$P2%tRk?%p9Yo-Ee$Fp-:;tgiSg[L7cQf\S^
%EY^;K42B$WEiWZ2PK[/:1pG,G[%L$G%:o_eeuD"_Sg@F1=[<0&3iC>;mB;5n#9sh2GG*pU-)rIkiQJ<V:E/lm:[sSr<A<il(/M>l
%rZ&NjIJ=skCLNfI!!beDA;pXlHeBtjO"D?n$ER>qRQGdlR%P[_bk1l96hPH[mKt0QJk3[8:bkW2(I&'q`InF2]2EFtdou'L0>\Dh
%!*#"r)r=Oc<cmD['T4=NQU)"A*r.+fA:Zc1a?X0tB,K/jLl-Kp5P-U,Gm6@):idho$KOMfS#5F>8(_KUa@JI']tM6X;'euSjB.+i
%aKcXJIE@)P?_hL33?Xoi3*%kRS*_Q5\0UERSk4*7\C5\,S4q;6#g><5b/Xt.<uB]EE$YdAN+^3""?BQVVt;]3Zr6[W8\t]OR]\qS
%^k3?$0\35]LWX-VKeY@L<4,$o,c-@eC<Yb::s9(t&S!,rLWmB;/rZ[5s3P%6H@F@4-IF98hEp%(PuK!aYAo_N11e;s?:R7,?;`f$
%f;C)Q,A^A9N((Jr#uK(iZWY'U1_\8Erbq&!Ni.N!7F7>I>H_n.XPhm[,,/[8WY651UpWpC,oB/\]klPik6+CS&\T;i)Q!0>.^2'7
%J`ME>4*afn0M)$pfF,DN<2ks&2c>\p$^7Mu!N><<!j%U3ST,X(qQ)H.Mb/F;)eP`cH^RH:fJo#a`1/>T3%L`u#19S>B^_='K\jP!
%/#m=%oH,&=XMnbH92`M?d]P:U&T\TPAQ;5VEj=?irDLsr6P++Me!XphRaOYC8/OcPXB^k"(\GLA;%6LMK-lR1)E;J?_6PCV-uqbE
%EDe,qL:WXt)b*"SR7!Jk:KkkKkFMs'K+W3rm)[lr_+'CnCJChM:^S''R9UV_iE=JiO<mDBr=#PJDG-Q1^1TIo1i5]]*BU3Ok-jSE
%_Xo$mN%HImO^hoS+-'%:QU+X'n?qd?eMpE>,UA0.DeGh5:-c^IITe,qd`fCPhT&.[Ad$q_<l,VLR7ZB[EeG:^6E.n2]13kS0t=1T
%#bLi9<[("=P)Z<4N)_r20LS=>*Q(GNLKMl.A<"<4)19h*"8%7+L%E-*.>+LZ-i%@'lP:5l*'DE#@V;\ZWo>JLh\lGg?J5'$]+4.r
%-'uM6AIb&hQn27mOMO2u;in,tg7c4r[W%SMN4&if%ZSru7E>ss3G(IWPuDVf"$BZ3I7bo_,r:]$C"ruJ.?bH&;LHpK7$@A>R=mmX
%f>Qej<>UqNRZ,rC[4?E'7+O+q`BHiP6.I^Y26l%<hqqG]Cb(T:7(?R%2<HNa2P(U=YREY=B[94k+0%`_<NdrHN<jq]+rJgi9i;'V
%"UHCCTL^$N<!aj+(5Z9b\7'D-36Ac<6UAaK$Vn)Y=L'2/r_1SZEmEmA-flP']2*l^5\[c!_Q#AX$CUr*/Ia36$77[P;j3pk/V`OP
%PY2n&#0NYi(%\ee<2e]Ti*M,F)^tY/PWUVh`^;,:$:DFc+<F06]r:Bs&<D,@7Fm><olYLkU"NrkEY1o^U$sp*ju"]LBY+IXRDX?8
%ZP2s?BI^=@aO!NO7&Ah`_O[Iu,5TceC9#X>,g/:cY''"6pS'1tJjH5e\-!(*2V0e*fEJsf&Z+QF!K'8pV=\;UV#43q"0<-.,77:m
%1-;K+;nGaeEo79mAH5Ke=LB-))]C5I2)mMUA!+u&'"jrXb)h5hMARm9-^;n->pic*,V7B9(58t%F2t+"/Pu8$V/C!$nB2fi>+)JM
%W"RIoSXk^5?a6KM>HS8_eI4SH?n"QCmWgLJiffjR0bX$QU%bOP+I+sGk7A`2bm(n5'L[C=ecJ126eN'-UCU5Y!Vn@p,,@<Mk-S=+
%RjAB5lkfLkYGu62#"p.^6/;en(6'4[!-=;j**%TO_oCkn9Nts;!-BC>*bbpoTeSg&SA[#Bk/W?RR5/A\'[@_iU0:Tr-:gfEja0s`
%7_ttCB``*.]n1dI7MN4<KGoN&TWLc/]ZEe?$%=.+*KaMi\/aJ9]-97#6H)P@8X3,1W$!2lT%30Y58(rVqbI9MW#9*4kfi3Y=jl4K
%T_&QJ%L<l<Cr[<K5^Q@Vj"I7JMB]]nSJ<JMAlkXKNFf!.c[[d,R>)1dT2cN5Kdd!@P[eScfpt91A46U\(q)DX&%G+jn=YD)e7@[j
%?q,2LPle$F=G^`kGJb1e9Hf[TcWeQD'$F4p#gX6:`B3-raWF<*a"#[mbFFF2ULJa7!XRWO-.k%I0OlOe@]2g@V!O9F``;*NP8j/]
%9\iSH=#??'?t.ST$XY_R;6fD]Lgcls:Xi$@&\2`BG*3H.G,!0ST+MoDVi$0Kg'U^&!fdO,#<Zpu`sRaT9//;lWo,j3e/@I'V3L5#
%JqZmo]]dliNEW<bQ]T""E6+SCo;FMjY,B^L^$MLDrIuf4;2-IHY6#-/?nC>]S-@<beeo@a19kJ.j:k![HQPbE(eHEKBn0Bd^GtIi
%QjeIPB[A4rI**r+:6pg:l\+=o+\[ZoUm?;N%>D^'^kHA)ms"H`8+g;+o60_k$t'f89+F(("tgsW253iR5liX;<lDBd"#Gd5Y?5(f
%2'Lr4Z>_^[b/DJ@@nI(W6HBH+;V;ij(ha+A3B9^)J/2W5!?e0]F6PY14HjjfX3CN*88F)4;=O2o%iR1UWm--S"*R6M/T=lZ:lmD1
%U`Pupp$ktH0<kr;WqI:qQk4,>Y_@QDpE6"Fn6^M#OB5r1e1!>4V!qOob=p.9oFRE4%cE$9%g[]l5.@S$PL75QLXO,U9T*3ki1f^5
%$T'!`df]ckE2q&+75Gos0*ubHL?r%[\YpoS&EU.ujuaClgZb#e)p0">$kgc1<l0D<SU;<9k,OlG[1m&IEa"7dUIpMmX;co!9@"`u
%l.Sl>Th))=Q\='bd(7n:VaVl&[Bi/,)h@TV[#>-4a$,M>?_hnWg!"8@&;m`\O>KmMkp6R+SoEcFUkV7,aiHIXk#@K!@ehod@.UZ-
%Pm-YHKqJ`l^=X0hR@G3RR)cuJD#m+>&UklYJ;]\mH5/E.a'GZ>"=JhF+fWgVWWU@5Xp=;i-cqa&bYj;AGe(I-e5!uWWGa5aDTF6T
%_PP@s)jIgjF\H)4aeAQ/7bqR_(1E\pr#J0b?'Lt-:o&-P"FW>I`DIV2,[5;8+A4G'JY&fiJT&Zn16q4R*uer74C9P\'RRDCLYMLp
%lErUXWosFoPfI'N=6rM5WSF^f5tcg*B:LU\$th<CUZAmuTZkJN7<;m>//M$G:R[HFj'IBj`fiDdopA<"mtFD+>=]J3l)`C"mA6D0
%%$4L_nDMh74[gXL%]h`+ImM8bL,%I71eC1#gh7*WRNX.tj60_piLhm2SjdBnMp[=o'KNjkB1c/))q3JSlQj,p<`]&A2lDP?Z^1Ut
%m=j$#@(=Ek(G6_*@l";1W;r%qm40[)OJ=.%cslO9gKqqAM"<uk@HP;1oDq#T@XL_fecLOL8_[q@5g[(hitKLtYq%UJ*^c1J/6mlR
%49cCBis=,mip4`Zp]QN14)2LG'HNT+5bi-s/`_r5&ff#e'3pH,fArPF@QUZ@&DlS"6#*QCP%^LWp(f%KB9E:_7[+;=BTX7t:21K5
%86Ojuh1L\tbqP?=$PPNO,&0u_=;DJiQ0t*knUe!*1S7[r:,F>d1<KS-co77;&5slJ9-#YnGsPKpQjhNAK:nT>pgL"imbU_(,D6Cp
%Yqp.hO@0?XT?NOR]h5!$l.EnT7I:MbIS1,O4FL(t0CU8Yb-3Y?1?V"JB?ft?+C'jD,UP^/Rkc[9"_0k$7;DI]:,r\tYC@qSU91F5
%2X56Re6X7mND5+^2d'LnP<rR?hO>udTg\/Nda)B2C8<Sh)lfo#WbBT-^'CF$>B?p8Urn:!d\0m-G+]GpV6u')33hX3*A+2^/-p2$
%OZH82+GL9&NL9Z#_mN(?LfW)B0c#]-(G1g&;)S4u(crBZ&Bq^bjc<lh3,7S!7@&fH6.$)GJ2dN]1`(1M,O(>+#prWG@[e*).Eth#
%mBQ!_R9J^8gE>aZ;O@R(NMm$;0GoY=GO/Q;oVac8T\2oFF^U?#OV[MTcp*L7dROi$MDtkVabanF;T"PK6A/IZf,W[F`7.>+EF@=2
%RV60KaekH&&O-g/lpdZqRKK?:q-FGc/#uc@^inppPI-QREg_k$4_:%<CJhAtKoRq0Z9j0M70<tj10Ir;bFDsfMnNB,Sr4ahE@-&i
%dhF\Q<2T^^OA7JuQ<JKs3+PH"*eLdiBafg?WXtgIQAH.fFofI!">m4/kXJSkV^W:87hCj^!Se9XB$)87eOP?W[IC\]-/liEKINn(
%8O3EbLit0Vbcs!e1.>`Acl6=L(hC1p5U.RsrAA2W4.%j-b9gXn'8,mMZua+:_u)$T2IY$#70&W!ce0c,L.Jh@'O&n>A`fnQ=\X*.
%Iu,&FDf'mLOJ3S+fmFIkMkM%c8i+YJH(rOG"JBM8N'PLR<bld.;&D`DZtPiV<;XdmpktqGALZaS"hC<mg\Ki"^Ep8VhV0)c/j0jX
%0L%&i?s-C-bB3t\KV#gk/Qd>VU-1F4H)OB?NZeO.:>jqn@#MP-B+,\uW[o&qZNu/fR%92S"l]=m7PP$UR5Bm'1j*fOP!k8MYGh8C
%E#o2i&SLAJGh$7.O=^4bPQdM2Rus"iRkjMsq]Y9k6&COEM8/f@:ZNU[R;6r7Pg7'b2+EaI\4I5>WBFCQC!BX8.?1XTo6apu!fMVk
%S8OT=O,p=lh+0RF##6jui1l7S":7)_JIqtq#>C;i=KX']`Lr+`.MBrS&<.ha]aB)e$J^Ao_!s5"R!6khW_P&hJ>M9p^?iK1J<U[^
%@4D0k`!Wo8WT9>\26$B"8O$]Qdhii3lrq!7>U`3oA`df[.Rk,iRbQjo2oNea9Y6VPGGV>Id`?WqZ:$np&'Qa-E:G6FT0YWb\.j?d
%#6'3n<%n.FnAG)\\EVhQp5i6MLGD!*;_9'MKA8X+)L7:<X2MHfg&^&gG*9okH(mqn$@)nqR"7`8\"6U$CZse]AC+06DD%!*PW;X^
%G'Q1qe3oWNFZe<T:/t=AEBG5P`Pb@>Y)pQ>mqC`-K#)>>7?@TH<^RbNOc@=3K^i.\9%D3>N+XJ+4L68d-W$P0Pjn2.Pj"4.&tYl[
%Ap8pt`hRVr4J#;O_F.E17%,Q"[?/3lf;0$D<U^Qr74S76"HV\eY*0&2CoC1d,_<up;CQ0;Qb\7Bje9oH(%@Y26P*lZJ=!XSB^"?9
%jVJt1QbT:o#i>$(qAj`*3]p^G/hnM.:"jfiBr>q(>l%2f_;eA+UD>dVe[k5j0o'.\K^X_`WSeElHK5EaD:rLhaIF)j7.8i#1=e3k
%mju[l@ce'O4,Yd(Pr?8@SV8q;C&*\RSON3j#^&Z2Y'Aq)*NF>9*%?*F&A9ShZ<)eC?#`cf3$drhmQp66\_pc0>Tu87lJ7Sl$-nOQ
%h8)ZL\_L*M%NYd'*/E/e4J3*K[]XaC>qs%^6n$&!2E4fEl4,;$J:WL(*L8S5"rBUM'm51c13T3MCPTY">j'BV$45e,leGVGY[*Y'
%h)0[eR5u*MGIV$IAOI?Gj6Jt=^_")H[EO?mUtOj$k`-0DQ0p84B5Ncim\S@&"ii!T+Jpeiq>dk.9AN;o$`uL)-3q2>h=4[Ill'>W
%(,WjLXlj/;BGCR-Y'+Gd89u(![6(`d!lRFmY+6>k.6>uH/33.)hbh!QZR?6)[6"c="/"!eGA!ms:Z]-tgmnWHM<Oo"]*$(d90%a^
%*Oq;p%CB*H"5QnKP$;#""%e_j@s5CE9,T>(nBL(_5VaWhI&_A1#/3>;]>G/IM7jV8"$I<C;hs(t"Z7"3T*r%gb6hUfeuEn+WEB4[
%[]A4eGVmMA>cQU_b!XlBWSQ6&^bO@,cr*jBDA'QK'fKde]@\,a]dQW8(V@!f*lJiC`U:h77Lcs^G/k4-88TosmLWqu,3mOdZd]hh
%jJJs5+lZ+;qh<`E(uOCCW7i6uk]0@\g)Z%1:i<mE]<d`m#J5(Z]<e)&HZhpHc8*)_gI^eXHECTnC3O=tJe$#TmMn*W8t=E!(ije.
%8*g`)76Zqm2']!E[/2"i7j:@DGV-l%a@AOm#o1&sZQ`m*?0k<iSD@&SP@ih=Wcg=,X/k'u9iK@R)Ds%JPI5VB];Z$@gJ3&UCH._O
%A2JpLdOR!G;XBERN*["!43L_2FduFt%W<\87PD^JYf;@I>fH,-rZ^I_.X(!rNWi?p+a/W/A3mZ9fH$>=,bEN)mMo*&'UE3P+GI,/
%\4Q#s9T725mUCB,-!>H2mRSWQid"_a"TgU`.(e-&A\h,84)/ujH\M%%g)X@520Dg/Z`JhR]fT<-!uI<f)g&JL;OES-CS>nV7L#R^
%mV6soJhM;T]BQ4$[6*kCLg4@i])u-("N7n**VNY[lWpIF@:L(HNNRG[I?-uU9=6jO?5/nKC3PsPU:F$6GF$1?Z0\FF=eZp/AOIS!
%S0Y2Z>,^8N<>)FFg`=/M85PYb_`:/'b,*l6c8hR)m;dD/\.6*Mgmnm(<O^HmZIEAVEK[roRq/'kQb0TbZSltsmLIu9V;I$_*KFm&
%mL-QeMq!.^R<?&%Qp%$4O^7D#_?BW0dn/s;Z&J#sYrg;<#b!O#\q<AqKW6YI#=kG#AcR\DEg79)V9kd3=63$:%K[bR`s=GEYj#&/
%4">HEDa$l>G;';SSL!W$lnW^)Kf`hhTqZ*(gnEeog.u#3%`T\#TGR0BLmYCt]W9di"1\ScOUH:n1c+$<W8"#b;Js.JgKDuAeO&(%
%c(7+!=1>Ml+Gfa&W8""3[*0?OG'G/=JTc#pfH&HFmFl`jBiGp^'"7tt+u6fc[U&6^pTAABkJlB`N81sm%_`EI\>?PQXC<Xl%O!p$
%R3JXn[:IO$?YIDe%7O&:#LSd"#+$^j3VatZ_<:Z:\4*RV*Q+\7`rK!p>*tD,6X]^g;Q>H(/_K!ZLY1qU_[l!8lfTNXP,q!6YT6m?
%/0g!$D!*3<U.$mqIZWU2C6jRX*EekDZ?D7JVe@G`3thC!%pA2O_;;7UXLbPTb/cuUWU&9SG)`*h898&u;EpA_6tPc4TEHN]=Z]hf
%=)eN#Ynl%gZ?E[7BJ3ranAs+`)T$Yk;iI\3f2[)uf&\N;m9!GV@[Mi9KV)BnnUsIIXuiE+Mt72,N%?";\osB@->T@@g0$o>nrBfB
%AIOGN:F-FCV9QZ.Krc</8@s8jg;/=O4mjq<B;p(4duLLM/A(uJr_Z!m8OMM9Ni\d_Y!SRVm:]Y<`#G_"T[[g3_XFGWfq.7h<:)4C
%(35sFm;+VJ6b-%$6Sl!.Tk]@Kel+N,g7^r['c*fm0J1@910!YfU@gCDC1g+f<6MT.JN)],crKHaK4rj'W7o(:djU-Sg7cKCI[R4i
%Ogu7rHDtXl+m>4RjX>k:b"L,67I>Vj0Ut?qmC65l%VpmS_6.0od8JN?P,u7W8_)+<K"rl-.2d*P&i@6_A`d0kg1s(*%P>PPdm`XT
%=^eYk&[gXn.EKt,m:c0S5,sOp=YeL\*DJWf<&.XgVO_\X11E,mZpV/*%X1W/P+Q1:%8Apm)"fF,9fkFY`4Mle4FYl\%8ApY!oB.^
%9fq"E!YooR3uh`f;K>Pjm4?fHo8]Ue>(_fuU7HGViL0o:/Ep5Qg_$p"jKD<e'"#RJgLB_!BSVTd&WrOjg9I&-Eu22n$['h.TH.6O
%a?+us0WU+1Q#bkX(7,LVrg=/JTpZMVTkJ)PUARC+c9dMXa[QY,43IUmMNabTgeUu6%7rX1#FplK8NVk&`1GQ(^_lLu<H-4sGH"aR
%[nsGaF!-;q?.$q%056b?dE[oJ1YEd;41I6:[$bX^@8R8kr%0encn#N\?.BG^61QK/:D"[b,pKJ%:piZs7[I-*%P8lPhGrr6aio:Y
%6IlWB9m6%ZCPRqT#_"4<8,"EFp&k>'=_13i7V1t+/b8$U<:)@>2)*?H<UI:bP)$6Ag=b+Gg2g7U[+8dQUhV:(iM:2._gsPaKr,lf
%3ghKtduNMcbU$S/g>Pk<HI1$G,B?8MdB71rRE1lQNi!gVp+<*P];?Ug=+h>*RW^T5Q+S_aLS%2A>o0mNMF[X'V5PE+>1N(@eIEi/
%!lf@g4-:+oEC\X+(1kB'\oo>RJEo+8m9ji8'E(h\%X(G'G1^s)JG4ma=kC'Vg&tRL(:nZ?`F(<#f<rLJg7$;K\on2X.=frkmANJd
%[>^+\DnIS0NeOVV$nb&A]WQ#T3/:[76e@?pq%OfUkh;_lT?d2X[0%D6,1=-8Y+9(iX@BiL>s"]T`2C5K*GWm!<\\^`W$7?IZaeAi
%6aIod?.dGc9hj(uOXN\rR[iDuYT423&H!eiB,M'NBbIk\jQ;*V[Lfk\&<)9b.VqTU#B&-$@65+\;L#h^gCY2H%b-4"83WV&20=pi
%!+p<e^[/g\BH]C]&@Re&H,>&P@6;Np#Rl4jgQC(gARJ/>445BV/K#9:"@L5MmD=$oq,GC?#hr57,Lnm_gTf>#o4B.^L[)/&9qI%*
%80AVS/5pf/&JCe-hEokT"@T$rm)!qAq4`%J(UbQNO^*>fCe#'A8r7_&4-o/.N4hm=iAm("(s\uF=RK5GUhkh.0(b)1ANMB*nGRH?
%4))fc;RYU]V.HfG7j]>:*E?Z4P)tN2f3Hu=c%QLL.Vsn$EtS98_KN!m'&ROYCkoJCHY"#%'4I#$-Xf)a#A\4VCPQa"7(L@@CWDq8
%HR`fdm!2_J$X#P,UXB#(Z?@MJ-61ocmAMh[f<>gp,Ddp"7_>lF_;_.Z4c2EXP6F)^@68e(?2op<RP(SgoX@EF:)m)2c`",i`GCpj
%eWoMM;8B9uKsD^j41^6T:_&V/QA)TDD("=FeaI2+JHLTP2FH4oKXUGFh/4#F\.'%\EsWk4]]b&%eEof7`Emb23uM!KAQ?4W^?BVs
%-2Sm]";,_0]!raaN+i*4EBD;SO\BqlDF[D/aer'[43HuU?3t+@Y=DX86J[[9FB.+Vg"LEDFU>"Xh0r-AIS`7,Fh@>i^Ma)KbQ%3A
%rVGN-rgjQ2%:B)5o&>_47oufk:S)7sZdWjIj37Mng!>-I4o],Rr:/,5laOVh4)^J^lt='Ms$d6Cn[ID(q>8>OVtg#LhlqAaB`EC(
%IaS/i"TNUar:6)uIJodf3'Mg:IrD+WlM/EuMkC"1c)\&*S=a,XS3G^[^6lWTo%i!pMcZhIC4EL9O,GB2Fo(sZq:0?.nG-(2g`*tL
%O!g?DXhEIjB4&Ea3do7+\t`X1kJc!B7TVg'0DB0Fl];!/G.JpU3M80H*W,TZV=F"CLL+>Y?(HB;Qa:a<jd(@$>lL/K?;n$CcbJ5F
%YE*%_roVbqs*<)M`K.KOYM&Me9jQM!qVBG&]Qs=.PH3^c%X;u2:#27&p]#KmL$[PIZo]>dS3F]8q>KF@Z`Ei5jdf]41u@QSn+b,=
%,C4NQCHqfGq<$5Ll#0oLJ,e?XagsO?hk/*\:L>,L?/BnkhV@YqdZs(%n$u]k178[*2LiH<_7F6Rr9j4Dg[B#=6*+3j:\nSiG3<3S
%fGjY<2&j_s>Pmp5s8;.(hO&ffkl9U_pkMZ45J__Yf@2\MA%-CV4F;'jPD-C#aehkIGG`e[q<Q#Qea5iGjk'P0o]5;jjdV/Em9@mh
%DjmTmV14D`gh.T)`NN%O3Vm4Vlon.im[I:uc#c,KrT2_uc+!SSI(NB!*"V5dKf+!gF7!#<iGGaRk1X[Th5Ye,\TZT8G,m[H2V2hf
%m=&NrmeGf.jmi5VE*<duDk.EB:1%?,YUTlK*d`*k2dc%=psncp_t!OeO+4fV)8%UU<M"TI9732_=0+Qj?T<+;A,C1sA=YB6+I?NN
%BR`!F;b)1ap=q_tdVh>[=7t#6R<Q:6im$k&WEiS$prL)G(t\OG+8[spKNmQ1DOdcrV-c;if^7Y>nbL;qg4rlop\OdYZ\qh#JCC:^
%]f)\G]K&47AGQ/_Ea>6)5Pe]q?G&803kOnrRNGSfT-(6e'k;R`r=]Qq9><Mqa#L\UEVdr5`QaLcHTJXUoAA#lh#W%THi3%!la,W0
%BBQabbp-^`[sL)Ahu&S:EFo\MJ:;eCrHH;_lHM2!m"*!/[CqrsJe>2i?Ms*\LGR2H]VSPP9g)ZDq8;V$*tS^j@ds#-B^j_Vc94(:
%P<P!*nE-T$YA,lge?SBOI2?#E!IE!3n6\*X88$fQRQ?#_h<T^.h9fP/+8h]'ijEZ3&%!^fl4r-^.KA!od>G=aQZ,Y@DVr92oe-70
%RVhBK_t!NPg!t:":Tr>\N]kr:q7G*Wh`fs!H/7$@q0a@$+7?j`G(8uEhTtsVBa"`3J/tAus6p>W?mG]3Z$gf_O"j:;CgTfCr@ppS
%Qs\)6_kc2c!4%2p6c5h,M<64hlK"<qqXqPU@`Va^H&EhqHnf1"7#3$Ko>U!<V(HR9pA):GZGhg\hDmu`O&q%1DK4^+&#_'t]Z#l>
%\FC=n?Jg[oil:Gm#Q3lRRr@/r55c*cpT:oola=90.sJ[U4?YpDr9"mR^,eEjpnDUhVdHf@qs<(\07Gmm4?pOUimm:O0.pTP?egJ-
%DEca#oZ?*mHL_&"ft$O@:JNOgD[a$iNnNQ^D3!<3QlU"-[3P8%lH;O%3$6aa3r\TSQZ!?_lmo,'5f[C'NpZ(VH_?!RJ@)<dc(=g(
%;sf_&o,$CVXD,oHkb53)T=p"q^;?4WPBVJ;)7Ac5XJo^A*S@]Yj]t!`]\qZG@:^8B4oFsdo$>Q7]A5qZ<R2Ek^>#^?DdIk@XJs+K
%[46XTjc_p1Fn4_a:J[FMqJ*p,2U(@e_2K'O'$NlI,XP!?B!bu9)eQHc7N5sHY't5Td>*Vt*Inoq^Z?nGK,&4Tf/btbT!>Ip$8Hk/
%^>6r3k8jmdC1dI6H?C0;oM4n.>rVbem$Q)(?iTHhAl'KLL97LtH]NYT#7j?%<jguU5Q8RS.U/>;qkC)ml2L\HS6-_=`J;#<X>$#b
%=0d]`7:>OS<jAY,o8[>r.qV,Zo6u(9G4io9ZPuW1<GfaJ#Z8RPqQLQ3I"[:89!,=Wc"SbX\D%%p`l$j<cGiktRSWj#>h-I=%`a24
%a,S&P`I#bIi:N*>:90O+h\_ldlds/7oM[G'D3P27^2uS:P\P'=k!;NG<[ACQR%sn8pu\'tVscXhl,E$&OfNdM0<UFn4CA]3I+qK$
%Af#f6]/o#a?H.-QOIoLHOj#<qj0)3bX=h.LgQ!@pg\T1jjlNTpmW!HQf2k0XOA#3T*`TG.ro<>9j-0N>i^fLj^HXnB]DD%^bgTQD
%-gfG)[^Xd5i*Wt**R#23ZG&HH.f+[i,4"+HY0S9&IEfG(meFc_5G,,r[b]?C=l$+R'FrYF-0jXkmAFB'q[a-)<f_kS>VY5>Q-[*C
%N81p$+)*d>0pcih93L.FH(_a8It"l4.`dT#AKsiN:U`LhZBPmIS6OGVfW;X.RbR+W=.@8-WS0W[d@#=,!oR)G8<6UJ]Z0qfotO`0
%mri/'k_Z]uh&koWYX3SJX8cHu+1D%'24&--i[%@clGHZ^oFW.)/%*7&qVS^Q@B9E6Bm2c2ZZ09OA31_@4WCm$?[:u':AK6e3oCPB
%c)boks"N`DG@()PhRr^]c2$VCN>1L?H0;4sMskJfgcG5210Wa#[rgl(=2u[ia614P4BiVj2u^KhZ#b)2o%dZuc4?kV^UX1t^V-LN
%/Y7I$F'g$(55ia,e,T$:9sEC<.A*&/KfF8tI^a53DdNF:c*JK%G]2o*DU'@%T`L/Eb?)G?DATjk?Lr0Gnuf'8gNtq9qL@,qCUC2-
%jn55$_:`/X<e$1:laQ7!?b[n0ikmjh?G::D]\c*B!Omn#OaMP6-Jr!tac.P*,NQpjZ7;(+3g,F(\0[`JC0'/Q>[jhYrZ4/S+'&i2
%IIcLil[D!@9sIp!eTm3EKF*?V"SZ:u?.q(#5!EJ&X`Nl\QHuQ<fH8&%[SKt9^HJG[c%?bardT39I.@'&7jPYCc'sWT5J>s^H4V!7
%Fo:pD::][&F?\je3XkP"8#q5N(Q\R"di"A9\(`0T+-Z&*4u,X/lI+]fZY/#LHS<jlI_;0',MA\2U[RocAubdkm+&,IoZ9HB/$Af[
%)sX]ZR<Hoq,O]>`S_B`tKD'pL7s+,3q5;D+]ZUMp2uLkjo/2N[".bs+)79QuH.Mn@9nRR_2"/'*6O8i=[rG\:l&WO4SHE>b.siYq
%"Xi1n;^j&Y8kL;""AP_[g)iZnYpF'4"Xj<XD5F2J9DPHBWR^K4rU]Bp+`((-S!j-&H`-<ZT!WR8pFi-1(l@lX`jCZ1QcJRLrG$t0
%dtp4^\Q>[^07R)h.3st&NN7)Br9F"IlM1:La$8Ffdb^=a,#>r-V5qeo$O`Th20B'u]XPYh\pScg5?8L>P@rb>ac"p6_OnkK9eAR!
%DE#QmIa=q+V*g"P*kWTg`aq)PH[0XZIe(+ogO7Ancd+4=O&s:m3'I,pX#i=eoCC0%!@PqN(RGr=g9p+)^=TJ'0@$`GDEMLmLXGkZ
%a6UmZT:UK27/HoTq!(ocC`6q&02B8B]3#s4ip?KuK+EBd,giWt7..(TZDsXdH[rotH5g)Eishp'7pYl!1,EsOHi3(0P93LSp:@^$
%lcu2"4_FFZ<YPRERh[=]M?a57?IbWgSU%V/VsAt1f98Y<<BED@[c%ce_LJk-*SIp(_au7*6j06sHm*cl1#Y@5I'p!%et$AVF$K>d
%>8;8YdBC)\NV8.Bk'hOMlML$&cS*&HeLQ('(&."g`S$a8c(A"To_UH%_+e'P3p8^hQ5=1P_=T[ijgM9&4'X\L"np.UVRsp8\>m*S
%m<h.gcBm,Sp:$T2g\H<8SSqMLs23aif&LCkP&soD;if^I[Q[$HX]<&q40i\)Wt0D!fim->^W4&G1!d&&6]Y/KqNIn's7,Yr'cPp6
%ebZZQ\#*5Vc)u(PGt_IG0<Wu0rqlCq\@'#/s*cV]`p9ZI%hM?>W\4=ll;XIb(SCEk!_'AZWJTGE)/h"\d^OA\F)<D_pG7-(XL7ef
%[C3rcn'fq25P8R"%sJ7\i?[0r8(Z/oJ#?TIK*k=i$Dd.(+.E>rVEjuc5i@F80""FoGZ,Yhf-^N+.$$P)<:8=+flI[-XK\k!gk-AX
%Aae\$ZrkU''ipL!R?9'7-(?7EY9]IGrum0$<b6C.K+)O,o5Ptlg@BfDR^6n>aPWOo['dkl*[Dh@<Fr[E51%GmBsrD^[<1Fpnq#Aj
%k4Uc[5oU$t+h[\J)%0P.M#@ne!XJU>+.,^0nPX2;g?,H<g3e5Y?Yrg)<L^2cH!/Vn\>-79Y!-[9g8aQ5bu`YI[EVeM\6d<MIC2H-
%SDpP89_ShLqK2tbm\=L'Y'4oYi9_-[=B1mP@uSTKLrRRLNQ2SZ]$&37TI#$:*d:=7iEcr_=1=1f`XfgZIX&3!WksN9LgLm5YjoW7
%)8j-lV;9k6mu8K>J$D+r?ahWioc@G1=]\Dema\G?+8>El85kIX>V#i/Ao7;6;A(IkS6&;AGo(sKAWq*)pGRM>oCm.ibbb[>_0UL0
%8q)1JLMp2Kg)RiOiS,?dc/ICs^<PV`.#2_@5jd_'D%>GMZuO8_J%DYIr/FSn[r5:4ZJY)I/&#2&FMBa>!Xc!na1Zcg5%<K7D&Z^"
%2RY74m;C\2WYYP]l<i,lO)=JLGk:bs.USdK$4a_Oo];25CA!:OLXa&>WXnjVYZCEP*iI@r/J5BXf#F_KP.RlV<R%N?/<3`DN@hG]
%D9kEBaQBKLiPS)B<sALc?=`Y/B<T'75<_)UH$XK']ArA3+5^>TVK[Gjo72I8ond4_%oUGN<B"5k08oEnR09R:+ZGel5<f,8pu:<*
%r6M;(V^I7EqS-96YP+T;[t"F(fDb__:&WgrqM.4SSjUKaGK9(p[t^F1^VdB-7,tk,RLaGN3Fe*GruLM*dk:X1V@N@Gh.95deP:@]
%/U^Vtn6TGXbI9)"pZp^"i;WF0*++Vn*+,5L]G^SFM71`KcHa`HE9p@rs*I`u]fc!GMt-*-eH+Xdo7%h]Gggj5^/h$lq;.:Ir32\r
%4RX=.EVf&'HbES4$diVDgDF7&^:ZVq];CV0'CYYT`U1:kkAaKTKMT88NH's8o;QZmciJfIn"je]^"D^_F,3V@GBl98dc]e+(T5<S
%@S<13IIGFOS@j.Cjt3:a3V[p*Wj?@;k^2-3n`&p#m"a=Wp$.cth5^</T)G7Xe76%/X#fJ4)Rin8,B+`cAlWd05r_tJF`)+;XIh^[
%'be\01JpnJ26/q29U'\5N))VNj^_Y*^q6_.Fj6o_/<3`DN@bh*#&!-EcU@S2=k2l=@PV.?b"B.V]B5iXX=I1lk?O6ORJ_9T7JV1e
%JlU'r/Ji!A7G0nG5,;GJPBGi6&"&8a5Or'DFmXkVg!WqZ"h.a$>PGTAl-16Q_6(k0].9bbW[2\X[D&ZMYsiB`M<nX!c<B0Hrfjgr
%eeRfTPi'Ct\L`2]P`_S!/*.>NKQV:?h1O^+ANdSZ;VB)8<!Ftm,eSm,h[ibo%%gU4#i1-`d&q0@D6/I2X5Q,]'*ls:XU7>)OUUT"
%j(%J>WHTS]3dl.WiV-dP:d#H>_\:0_@Gp83PZKHAZ>F\JeOGnVo_,bRDVO@rDkgOe<.Cj+mcV@_:M[]@ou2ioiNXu/l)W]K?Mq)$
%pSrB3aV/N@L2+9p?U"A?n%\>Ci?/*tj3+VZceDk,,9-B<gdWqUB-rDdrgj&U1NW33c[KJdrq=[aIeKZ=Irk5er0Pr)ino4'VuPHL
%otO_c5EDm+qVBR!qu<(Z([]h(qpT1BH]hZk7lc=r1`j?KB5cR(T;q4:Xi9:LgF^\!j@u&MjDo@Zhrs5Ajeq^N,ZAt'hFBd!2_J[P
%h"6TiGHT@uqL/5'kt.bQoV\8QkP8aTHhK<$5lU6*GBfOJs7HH"oYo4ef]5f^Rs"/VNh2W9``V9VOa65%EUEI:'V>S>6IjJJs*iO*
%PBTei$(dc]oFJV+;j0O][u^&nE&eq%CI@q-T&A9X^7Khp.r*s[hrUDV%./&h5HH:g+5nA@i^:Wq9eH-19d\mBagF'GO8a;bhHCjX
%H"RtJC/U?EN)PgX1tDKn\R"=-N+.l'jA4pQNZh1CR-!(IPIukR[CtnFYN9i?[X=P34T/HUX?Uq+p2BF]IPpeq:!PHq;t`YKE6Trc
%9\J"eH+ILOkOC1tR4#aeP@-9j[-t-#hA&-O)ZA[Inp)-&^UWn-CO*5Ugs6eMpl[</huEQ+ci,E#mr'jCqcPuVr83P6pA\CT`g-EO
%?,!h0J!pe#17@iL[01p(Yrm0Jn=d_Jif3%E8'Kf?<q=]tEU0>Nf=l?Q9<reblte0BcScVF9I7eFjVR;"]U\u/h+_e?VRM!=Eg?Bg
%jnW(iP%W?KA"R?AHu'J*g465*s0NV!RqCVnX]7QV9[bt]WA^6E@53a;VJ0:u>SNgb<`!(`_9(I?p;^&)K^8>_'`P3d1Ma#0;Laka
%2Uq0GFobrB[<oLcp:QpMS_Hl5Di=<\)d*t^]<R>kCG@T:6@5ZLD%._$rR'NVX0c`m?lqabg1G<:rjQ`(Cp_h^6[WX>b=BlRmXF&+
%#N+."Vq)Wb+Q$L.Cjj?Pa$02u%%hfK(2(kjKYIFB$:hl.%!/*odL`su]/Ii1d0X.5[)nUeeile_ol3M[F4TA'\th,EVT`sf?B#+P
%>9^Te<8eJ3D:8rF]234b^eHnQHp$Y72D2at+l[U$_2aSec-eXJ5.:7;U-E=L`WWHW2O@<NRmX)uE4%QdqSn6$=NB6u*>b--fXH-p
%/9b;THC;eMUNQ-nBe6/bRi6.,?lfP5+mi4_2IaEcO4uDPgL*,MD8\#L`T5`WDp.L(D&Z*m*:>^\;NVEk%;VFW16:2d_CQ$/;mB[/
%;_03Sn^I1U9l*VOBmdtU5!/DFD<GmYZ8Ss^43n^apuc!A'D#sQ6iR!6US])+YbMk&T=qd[EV0+>j6od)?=%A<p<UL*[J/42S%IF[
%^965UpQbskZd30^?uF(bf;&Z2BPeD+[`-HN;)p)[A<g(g^OhNP4glk#TD\IRg[&br6%&B%g\[)/eHX=@C2&1C2>:Ud1n2F(KsV/'
%jm::WWH5A75/o'E[G@g<:!n,1;rt5uF-irKZonut*j)JP;s<CoS*\unq6Gu,*6h!TFi8R7Ct#Y;b8SN.6ae"2WH&HU1T9[uQHM,O
%/Kr^e\$UF?h%UBGoH`"c5."&YM/,1Kio/G!QT6ZNZq[WmUKBbk'/s>ADIZnTR:#PY]_,I_<gVP>QZDC$k47>GqWuRuL=2(hg'2DS
%Upc]Z*<N]Do_+9urscTl%KgA<oY?l&NkUc]CLD8JZ/;.P)n>8m<\Npo\Dgq,ok>>=XGgbFp\##Zg9\K;p!R1+XBfG5m7i'0;nl"c
%n+N_f7Fpbpe+dO%,B?&nRn@YR4.A_nA-04egEuU+BlVaq:ZJV&#(jVZp873N5KsD;NHs>qR_PCHF\;/Rar@F!3`b**4\E)g',`=0
%N#0lRSr#N\[`T`2rk,Qfoc*-Y?kIWeK;mb(FUfcDS#60W#I<Yi=j5:LVLGY<gY`.DLsc$=qK@&qAf'CP'fXrO:#1*DFKOYARebm#
%Zh!LMA"kk_E..gGq)lDJIq[VD;npo?D/:eA5%qU+>mqWY0o`q&6Mt9_HVOHB41CnFX7(4TS'9`Bq/^kof>Qo69a][qK\MsXGMIOt
%e'r_)2:6+XGNKk*]Uh&nA)7&@Meh_+a$P8gRe1:QP0@N%"mAc7S#.XKHRZMK=IK-AH*L%&,+QHl-CL]Bra'[%CC54[_t!!YDNZ`N
%[-sEXMM#mB5Vu!f_:g;-^7"5ZH6/gQ+NHt7Cm?f\IC\%W^:A;DI+^BPY';sW%_hM?6a#3>#7oF8EO<Q%T+7s2A_-3eA>T!sg*qu1
%R+?E`^U,"F\Y!EQ]1*g\e+O7"@`.Qu%]58(Xfe4-j!8=*bn^ZWA0lo6h!@#H_W!\aj#e8f%Jud;Ue^CPC$],Js-%mF%SJ_%mPM>X
%\4H'>YaF)Sd:B@d1bJ.,o4cu;[Ps?9/PYU#cDN?*<Zgs&e,8m_c8.2fnBU:.ok!O/fn;$40@H^Fp\K/n(!%qcZY4feZ)jGBSSI(D
%c2@hYk<tT4WLpIko4/buF)97RY;P,:^Qn26Ck-(:@<MQRDWbT:-Ep41SYkXTe(,5Q:@A#YAB3rrVigDFf9j3ZS6h,NI]`DdXDH3m
%P^#2K\FTQ'b1$1NErFp"2"bWYGHh#KWFgSa3O@`Cl"IX[Rq25^q&O]F]sVR'a8+J)ZRa@oK2"`?`_H9;jLCX9l#ATKYdi7n`mLKO
%9kdjm:RCJH9oJ,?BQB"[4hoM5A^.F75L%3aml/@![.>*%lX!Mgb9,#Jr9jcb&.0;HFIke@"EG6GeP@p`Pls?YI*uq>gk6?nUL--q
%]K@Q<&H@"KYLE)-T"b'`o]/Ug2ZMD!`Ja>9Yi&!p@9h"UnbDD7o[Upa093e25Q0u=ZPOO4qY=31JgSLHrq66OX/j#-:fMeCF;,)]
%J,9JrTO7W]o_;[+r:&mgO6`FacV@78HuaU`G4Fs<?_+n*^JB@GQ[*rHjPg)RHp-m^fq2$S4aVVMMAcE"kL6+A?JuSRdm2O0Z*3No
%dHlDWTD$#[r?J3knZ[\]Kqj.)F.iK0I7X:q(*)(\@p<p='+Bo_\ec>Jg'N]Y/V7G%CC>r`UYUH&\5tr>^9<(>%Da=s9_"enQu]N`
%=QtC9FBCf0>Sdr5pqG&a^97[Xn=ga2/*2lp@c?/EZ#kCZ9UE^n5R`t2:D4<2LBkca_#^g[BK^T*/G7(`GtVZTrddJ7Jt2sPS50Pf
%q6rc1&?46:=I;OqhYk17%_aS_@Y&K^"NC9S'RT#9R(4gtB(?]OgO`o'(_h>g%WSb^%F+qhq)#YEMR"h'g,O&J\+^tb#J:D]'^`lm
%78"T:[R^,+lZMu7gjTe!O+mj91L6Fk('ZtYhG)4?BXMP78!aTWHT?b`M^S%'g<WLKBl'\q>F^-':@7#>ac6b2h5FG4o!^L8F`37:
%Z79UY(V)3Up/R`Z!#TQ@bUhT_`8k^7+r%0oXRm&,-#1oQg"jZePKhfs>7kU`@GM-J@=)s+qPh(_?I(]L;C(o.[)0P&3An5Ak77&>
%1Ud-P'/6nERlGnOrO96YpMC)G;IMTmFPd;!R1Ip-pME!C>n>jUR\IU.'=69egl_IlQ76)5[C0abFrdp(m:ssb\JjV:.G"Rm%rl3(
%\@7H4F*rd]\&0?!*cAfS:o3!na1^/)+f^0[i[dRr1u#`A2_/Qlqg4[ErEV;(a1rX[G@d7F)/jh(c=6]<S#]$G-@H42EP&EgZ"=Ig
%<.+XgD/D4GpR&Y&>HdqjJEue)e\0f03^[;c-f-NU,2QJs&EV@Tq"8.OS2I]S-Ju\Kfl?8N#'dOqhGW>+:%7qf?5\le.DRrok%G%%
%QIpA23"YZ]/0jJ(;;;67/D/_RIb-Np.Xo4>&Um=j46G$6gQ&77#\1ns@inHobKLgY1:GC\[`l2=KkVL8A':rjbLG@QrKFr5N;r+s
%DWBa(VKSIu\O>6oSW.[VZn52tD/[(a*E.POD:`hl9;G*DV!XO]]X]fkbgLgOI"2+H'.37BgIZ,FSH0$"m?3MD*n@_52h.W,qK;p9
%D]I+p(t%`HfkSOQEaNuB0AW"b(`Ob"O[J,Y_3;[o1!Us4#=lQsXk/0_Cu<4JdqWjk["j;"""ub0^<po/IPe\^:E9m?aPL9_ACZfI
%io9!FF)]p:*#t#$SVsi"c!g2-HQO;0?6iji;b4bmH)H`lA+[)oP+FJ7O.5<HjO3Dd*eHSi[gSstE\NG)'4V6Ah_6Ej@!Zk:n(e"A
%pE(TR?J^F8qi7WPLBc7H\F!&qW$f^Z]Eb*9DQ#7O[Bft6a.KHM,T[Goqh"qB`FqD@Kh:XhFPR21$0Xs[8"*GF3!Ha=])K/Ae<-"B
%J@a_MGJ3IOKC?u%'ADRMW7qbXIqM%&>mI=?PuO0i\hZN6>K+&*$$$$Sm:Llpmau].$_X(QT^F0irLNEQm*L(dSpo2Jo_h+oGC\.\
%K[AC2Fe=F&_imk0!FZF2R<4T[\(B,ZI1'Wl]A3;C4(Qr,V>VF^*4`KhRK\cPD8q8pSPF-][Vfi!$J2g:!6G06I+tcb[O4o-mFQ].
%bOm?nn$%Glh)#"48p3N?"Z+039F7(r7/L'?1[I$m?]-MK!?);Y?r5PmOmp-ZUOkB>M0qhaJcCS/&bniNZMV)s^+Hs8bO4,jqmPk*
%/\>rEmb>&E[d:^5![G/?^+Hs8^_-=cmX$H.U$6^5"Rg#q][sga(`,n'gY)s9I&uq:MI"j$s0+%6,imE+WCC_XY<I*aU@"Z:\l>HO
%AlK^,-T6V<"la>*TdX@^:uIge^=%0YnHr$/]?%=J0-U]83s`e=V?WL5pK!.s\r<F'9seTB(XL)SqtEHMR[[AGQGf.K\&;Z,8@u0=
%fpKD!2JYY!SU@PbHo5RU,1HPPmaa/rYg(8_mR#7"Ba/9"RYYY4W'uG`=sTB:8D]?Y!kQhMcr1La2pP)gD1Wpn`&_f123Mp5jI)r.
%g>65n@NupV214.g4LU,*#0G%sbRIP.6!J<*pg3OKcE.db+)gpp4!`R.WDakl+]j,9aHb_WJU1jNBeL7i4]*l#Ed_dX#tWu&Ud`_"
%bQTs`UTU4`!9B<Po,m+?G1jCOP[2j8\QjeRU\u^%Kb24^i^ATJ`cffH!\N;A<,tmZ"ED:)e#&<$Xt1MJTr7<fc.\:Q<Fh!_[N#KW
%RFO1Cc8)"KaXj;CQ33F\eKcs2nr*pL(-qrT:7[+Ef4TPZFH^nf(XG"I,H!0IDAo"[io9)m+lDhRg2VJRV,D^kWDqL.NBNUXj:,n[
%Yf7,fquj:Ea2s?f+1S(@Zb7W_]4-dbFoG<;ljn0tc4mnLh'mO)rP$l[m+u\g_&W!nKjluW#uFh-e<U+-8Rd^\:4V%Pa,^FGoULG1
%%Io$lX2:)Z$dpVq.DQqZ-t+YnI.u,74>Zr_$5,(NL&KEXR%n<!?jE"O!IP"3k[n41m!)t'<K6CM2)V8m<t*+"]/f)"doE!qHki<7
%aguoM&bqq32i<]J@P+Q`C)+@aaV3n%jFf"j]kH$\N=AX=nt+i#>rEl_XgE@5MWT53gN?Fe*LO*bG#E!,+qLp$BuLoKi^PpMYmit:
%I,KQ;[T6\dfuYO:)&K$!O_njfA`M'gNV;M'2.OAc51gWKPhhSBI+OA26.k2u;^?sQXpn_oZ.bCD"oV&C'`k,1;pdAeYVsaEpi>+(
%RpFXNl3"6fm!pUq';F0l53u(A,)6RMfbcfm@51Pt-6EPC%0ZLMrq.`^+HE5Zh=<0Tc*b@D[Y_;+>e[IG4+KPtS1h*7AQKFd?[7B<
%hWq`"S@S'n[4_bXSme;EM!KNCO$cbo^sNoi;Kse7M;Xhr?[(4i&([4YRpqSD9/[GN(_GF;*;dW+L[:^HP$lO[#p6Wrei+aSF&1(t
%e(LCArqc*[!.-p]5j[5Xr9TLQ$\k2n&]==ZYWN8jQ]0UsSJ?;KCD0)?L>Aq]GnVlJb_P!r:)249BEuEZ:/%I_%MHnBr3i^Qp_fVj
%hbnH%8"IV2CoPZJ:#`WWNNe1q+4G(Aa%2+=JBLPK#lFc6"QcnbH>KRg0*>0SP@l,.$+S8(#V0cH:S$jM&V28tZh`cQj791Hp?$Z_
%"V"As*Y+(W@:AO5f(1VL=K+VC;3?BjAtGX_-W)#]0DkLSMb"]#l`(mTYm:G6Z"']OST11RE>AhEcn=)I'.5fTndN+%+:Jec"Ot0@
%pQI/6-su].<;.'Y::bY&^3:^H@!:7i&([5.8uTfWUElQV"Q34.fUXbO63*WM#f$Xqs1ol4M+3-NOT,dchiRk6&c(;ep>1E#DZY9T
%^tpEB[gDD<!dgEPhM1s3"o3XPWc?J='EJC3,$^Q%eTPdN=9_3S!4Mr`Hcl[&9MI;G\XaM9>%Gbi)JF#<OX"n&P.82$^]AJC)#0o+
%kf+%A,9B1=+Z7EbC_O3UrE^@%Yg=Ud20<N*G+4AT-V(s_j0b$IM`_*q6B-D))/.)?E1Slk(eS0^Wp!a><S<teM^f);$%4l<obgG1
%mT<Ss:P-#2MbXUSH\#6jJQ\Z@C!;2IO6oA31'nR-rC@^6^[&Ai=CqnNO"UdA6\VdJ'CpmKS`Jb*.:\imU+l\LfPL/bE^uD#n)*d)
%2\X=Ia\^$2k8G&]kp'%[T;jdVCL=9N58eupp<(#aPUX$-;jn;VBE`E4jgj)TLmV+fa"^A?SOt'5Z#hUAHEWd-#b\RaUqqq?4DfB4
%!WO'0U!AQ+;j$.mh%fMT>7:A2%37sYUpTr$!`b/H&AX4W%Z/JBlGm]Do4f8@S?9DjL,XM5JT'*M<mJUcr9TLqK<qj/s.Dg\Z@LZn
%)(2]nANf/QfM-Q3U1<4f[4GLY^LNn`k`M:s):/Wb6BgK-htmO'8L/OqPK4bQS#NuqQm-m7jk9<[BXJS',CHb\IdU;,$>ZRS4LM`;
%0eV`HBM5@Pb0#p9g,A!OFF`PCQ(&q2L,E(CKs;N9NNl5#bDV)gFQ-\qkTe`bc*[B1X?2='9*0j/!d0ee@R9p9f]p$IT'[^WfM$eR
%l7BMQZaF;4dFsFb-5B.,V'up4hc%1h12Z;ESBc6bQ".\N&jd+-g?]Noc+XVCdOGS$RcJ=uRU=o24YJ8dcI1>L7AERp=@hH4aSl:Z
%^N;_F'BnE,L!g!D&mri=>gf^rU[L!U!P-\h]UIoe8OQg+;QBA(D+!7%7ap))lufEnp!E,CC&EBh[.p"SAZ/R2U#QPN;p(<$Q`l(>
%EsX]3V8tN=F5"[(NEJTnpj=+IXP[4^cY3DBcgH)uqYVD%42W%j%bG.9565igJj*fO6qdE@"WCZY0V/^?*[L\t7%Ua^c!fnC$WE,L
%?M*\i^j=T)"_ujH0nZXZ#L3.,1?$j`W.#;HcTHid(IRR+O0l^0QX0'PTC7""i?@W8"2s$3^)=lV_[aVu=JST[47D+_O2M"NN6uEK
%n$hh:%d\P7"#MX.o,Iqk?Tu(u\/8g>:q4%O%)4[5l!;-pU6r=&+fg!W"X?fFGZ75&j8h2+iLrWt@7%igrMImN]rBrJ,Vp\:L4=:b
%4Sp(:n/eKsj5@XAJ*&_8Zo?q$krKeHlp,gSH42InJ9Z&=`JaV$GeOXrO4U)anTm0"?'HWT?EQT3`W(GS>kkeFdRo;(KV`U[d+CY%
%Z[HU=r,&q!8&K8Tm1KlS+!_aGYD:$E%NIYQ@M:(@D>V-Dq!KaqT(^QOljD@=j/R1*K8r19g*/p;#o60iS2#SIfg4p]&G`W6&,66:
%jOnaWc?on&SS&db;7INY"ZKoOV.8RBM#<h4q<ZIT&gEAD%6c7+-k4mJ@hUdqE<3-NV=_.h.30Vn@rh6V:ajtTR*45d6'$\d;rJ'^
%iueKL@](ckihHd<mrEtcF-UAs?\Jo]nUVQCH/=KR:+r5O^sNi)aEsP6]_;Vnb\05IdXJcg$80F%POpuM8'&I"TTK[%fq=H:)VLdG
%%3!omOUW5^TTK[%fq=H:)VLdG6b#b;3$'@BW`OJ'/Fo<JFSRBAaoaoNPX#tA/t!@HSW41q`$=T/-;Mo639"^p=cc60s,-EPLZ/@T
%\`#$aDSD!Y,C.%I]?UX/S,(uQ1EVW^pHCaoi!dKT3HAXGh,=.+]k)/K=*\u\<N[@4)_LT,b;p%&AJtuH7Qu5\IB"O>X6tC.ZYJN0
%jqjc_o=,>rNLpumpM!mr\t3f$eY`CM;1-tdVGD;<allb\\s84,EMZI+A99&SgrLZuZH/"VE[-Lta<D_6A99&Sge($@kjt_S2<,F'
%Zk"'2h:Z[X2"P%XOXYkgs53N'-SO%;e`nP@En]hCgBK2C/_@&6;a%B8ZXg2l@7dCS>%bf-Ip.^6gl2k\8KAt7jQDsgdO%=X>I_%O
%16P5?^-aYBF8:LN>s,a;e1=Kcea1EsUOJF"=DC;PChHqrA&9WjC[K8nM(0TIctJEQFK(2$TRiQ2i^^hc)pc/Uc3M^.7Z)=:,h.9K
%h)1:UANakHs(9Srr=bLrl$1&eC6PnIB;hh^F`mYLgJi%0ACk<OnB0&e\MAIOgeN)%5+*/GqqJi))V`pj$\YH+[a!s+*=457._2,V
%]:niE(;p\*B;,jA2Q[Z\3Ef/#mhSlWZ7q:3NLor"+0pdgcoP!]*//mZV-4+,)`Yd+<s+"`+icl';GRSU`m(O6U<U:(QF<LVb6E-J
%[&)hR(SkSDg@S'Q`_PY-9OFW,b,F6XEOb,8W:FsYXrg8<D'j$eEIgt>LJ<o:?L2ULoYTOW\'SL9Y8$GQWeHR(l@qC%`^4`anh*It
%)#ptB(EQY[7NO_ZNM@[o$9VtYD$*bK&kk*a`-\a5kp">jUMdUja/)Hf"Y!7tD2K5VWK*7eP!ojX0%2>&GolT([geq,I;>(F.M0Gd
%^"1qA!f&1nZlN3sYrbi3#"KJ@5,>W&aq221<&j$>[cn()T1*O>^70@ZZHZ@.ZDLCfg?)d4&9c9\;E1R72k?1$;IrKC$]qF%/8IXT
%'b6Sp-)2$sOgitte!3f.=QpEKFL8X-aVL5Li,-L(]52.%YIAA^D+?$/KN,RrY<Q"G\!>=fmY[ROhXkAaX)1L.8bF6.IWiet.kTZ7
%%IL>0/i%"Y\IkMKeW4?)NoqfaMm>kGj1.$nH-rj(,$-b+dd/?GTHDKsIV%E1BV7h@4=;SSQH"A92Zlmd(l:&Y&P\<L5m8R[rHPbf
%("l0RDB-u'#X[Xs<_]tiO$Dru?)+\XA.\,ln&r$n9u>?tSBI;M:3I[<SB=*ba6="\/)<3VnmINc:>CoZH$>Jf7sZuMA6<i_.=,l'
%'5=H4p:tLudBBTT:F>R/l:tHR%N/W^l';q$aY\FTTThELY--BYRQ=kW-*9KT]4U_a9&_PP6NC>E!c%,<bIVKbEAE(t_iJGLrF@)s
%8+,.BE\b$\.+6DQTM<"-KRPW"^1kU'jG!:ncC029JSa##K./r0i6'<O.,P0Q83N?uMV>?$/`+=h\RbSt<2IsSkBT]HGm4R0ff7KT
%dXqk(Tl-*iKA*3_A)t:/I(.aW0SMD$6U1GE_:818*2[r8&#M<C#B9t4_3EZi1a['(R#9OYHA*OOVL6E1M&Y.eos(`$4+.6^85t@u
%rA#]k]3@-]jT)?H]Un-'aTPdPAJH<Y<87$s\"?*-GJ9QYF,ZYg=^,r3R35F2XIl@].7('f>"s$Bor!Midl$@caTN[PEA6'c0XZU8
%@L&:s_:4DSVbaNY%8Q&YE1K!\+%jqm=]n;>Bu,.JFrC_E#FfHE<qGker]=ueZ7TCk`QP]7fbQ7$?ak:5(,+G%AQuf`MjJ;NZ7TCk
%_Kac,o=eiC'9;J2CmV2j=Ai_6moAJL`]jEe(>mpCA>Uk/mWMh2nBmIZN'28);fr-^qkSc\2r1TW;_J+6jMhOs^?+P(Y5L@/@YprL
%]SYruZd56DN\e5S;rJOBDXR&6[n!&THhPXHP;b/pFEp<aFh+:'HF,op]rmnFpXEKS@NrOVr7\u:=TnVhF(6geAMaAKnl'QRbURfR
%WQPf0)F)>793V"dSPf?J0dXCRH.6QGKJlM;_h9pABZ#K]9PD=s2G@f%KJlM;_h9pABYBe[/5Pqn9^7bUMR$q.Z-G>gAiV7gW[\LA
%/gd8-S8^;GgUu!oC*\jBdC/71PbA:5;h!TP0oAsOT:*?1olg6?WHqV2p7GqI3O:i:H88s4TeeUc+EEp,0r[.Q5])1R$&dAM;b)-@
%-?a#m4(=YS/S5ht:6pX6VMkp>3DN6[FlV_dOutSW\1\JjF9K]L).hRLFV/>,q3@bq:06h^ZFmI1$>K3Y?d>)_B^I-E0_-g&pLee)
%e'9Il5%PaopKlU2+EGt389%s2m7_G.Hg%G:c1'49>:YQjXjI@<Q(YD+"PAFI$,=eq&X:#oM$hQc(WoFT>%c(;Y[is(e$%KIAn/S_
%Y!WgmdYol!.8Q9d,4rdS;TUgb6;K4Vk5o=uUN+_E8%r#oc_WN_.1J+Lg)n6dFelcP#=VH[DMoj[s.?t`D/1@tqM1]ppN=`)YTY/$
%6IXXmA7`kLiWKn"mflI)0UUL)k01L5J+fe?V!_:<D.<jsaZ5.RgbT$se65J@>,5%FgOo`V-7fIB-Zp%r!WYUd\.sFbE`&B1FLT:(
%N.5u4PBjR?3^?!;8tcbER)b";HKQV'N5:(>YLX+4p)o.^hWAqbiu02[:4Yt#/Ht/2_]1/s^%GfD69CLOf<<WA:gAWE\d"9d0$@7X
%?+@]6DYH[:pL!1'V+lOOBI@g%&3\G-m?I\7DQh^C(i(3)TB_Hh4jooW@iui@!78CQDF_M=2f:1\S(1;ueMJ_.*i,%gq[h>mIsPG!
%;:DKab16c#q"24IefBY=F#dad;?Mqe8f'u9J-E4]GYUVbYtU[+_,D\<ao5$>7:\;>H1-0cJ)@'fO=sW>Bei0'&r)!"HQjuVpMNTd
%QJfYdi$6=q*t\4F_.":?4H/$hOtIF\q#"'le"e:bC0;E\$a:1SlPkZ/cB\7P7;*q)=mSL+kon_:#qe22mOSLS"J01_Om.QF15Al0
%imYDXiGDS/aVV9-SR@pZ""SC0C;"&;C3Lca$<:^g+&*:6UHCo/O'=<3L-VY8.N:Y:d\UE'[]X*>//3(tp,bI^Q1(6=n_)TjK+:6J
%ah$lk]N2-aKna`=$.A<:]4Zn3(/lB]lmlo[[IWr:(,_WMQ3H*F"V?Jr%"DRhpQ-"%VlWcWUT9).@oQ`cZl.`K82BEq\B8d*9b_4@
%i\?2NVii&oI;akflXPB=@fN]ABg?^UR=@o8a91\0?,.oR\HkKQj^2^uoie5pq3t89M^\icM<EF.E?;!H1++JmNs2CIP/J6*CO0Nl
%!Z*"a9(t)M%LnLRcdedr/?usBQgM!7#)^%HP2Zje;be9]Pt25]C1@`gTU/40Y]Cd+0!t&SYIn%@&1S.6p-!BA:-+9N=lidPYe1*U
%GQd\N=L%65cMO$](lW-IpcG'&r]o+WpgFXI38?k6?O(]&80XQU@f,/"bLd:2j'Jb/?e`KnG\?[Vs-7bgI%i3VWqHk>)"p5&kIAT5
%3t+e=Iq%X\<R.bmGUF%*REL`c?@1Aa/0Ba]n#&aSg<BVoI*/VY6X8[pA[71\M%eOug;UpAh8*)9h2t"i'shB;nj>Uh!%a3X`rd6S
%2kP&W&K2O@G+A-fah*j5:YpHul<W;CRuf:(#AI)gj8Vn8dCe*V8qk$0H.G15lnjcLd+H3ea6DY?r6$2^p[":HQFO\H[SGc<)r'6h
%42!lXDg$E8^"oWgFABFEQ)F;MqR8qlZI.?BFQQ?qA&\Ch[GGXU_6uD]DsmCp07ibRQ&gO'O'j/Z'KUtu`()!0+,0_pn6c)@`h+cU
%EnlR&Md_$T'c>9`:Y!TsXEJSc03nt)=s\C#83'M9)Hg3Hc-,h&c@0?TeNHameB`OrI*3GKWSKQ(G7":,VW%e5A(QMU3rK^R;IFJq
%WhmVKb4+<8Dc!EfT8d*GX$iO4J<u-u0`_b'12(2D:UP`Tpbu4S$Ng>MA0q3gr,6]Wce0+Y56S0=ckR,Vmt`BY67laOf/*?D#;=b;
%dOX2g9&ul*%2Sj^h]tJ,nCLe?Pnr>j/GrKabQ'#=-9,NB.\5^U94*#CG7e*U$T[jdK#mE="GD!bflo/os.=Ltr=3+TK$8@7_#M\R
%_t,E?li%)\E3&_WX3pn+rt_4H[Jr:^hbY9;IRs&1<a>*Y%q`WiBG3N,M0u*`buGOOJ]!GhBQ:(uGhd%E<Vb+-PiVU(k>o;VP:*qh
%VDoH.AJ[D6=bi\P5Wr-`f,B#26iT\ARMZoF"=n\8QMdCU^46V(,olY7QkOu3j'H!`#>u)$/^W;&f'5G@VrERnfS)(5qD("P5MPJR
%G7ICDCo-!*mY"<BO*4<f]j^#Z,+J7#DciLhFLAm.dAqk20DKoQ/4em,=B'2["'$A26fCL,?Vjsc4#M/lqJmKOZW-Gu>-OsQTW+:&
%?Ai"Fe@X:$B<0Wu+1OlONC90"G4.k0V[_5$0)jCIb76)1UMi>:DXemObnn0199jK36fg/A/V]1tEjIOe<#ml`*eD&@krWX%]5*Dd
%`mJ[Jj/DJ1[3e]^kW\K;fDY?fYNq`k*i55EYN"JH1g5%_n!@lM9Lg>Rm?McN_mHr3-ZjRr#A*GF/LIm@pUKat4%W%o(r!l70:-p!
%()Hb^3d7K(DK/a.WFpjD;,:3l+H&Ub_$u@Xr@K8Z+?>/f1AdeJj6V$!@LtE.f'FHel@6EQWK*G_@`D#[jn:@DPnnK-P[uq>V\c=e
%HsU<)rPt/6_(=ZT%.F,XOn_@)E[YR,Ys[00-hs&2hWD;(qa!f13IUBl5%\R1(/-\AGKCAjpf9\okMt:eftL9C]s5&uD=f=9=RH^B
%B(ngngF.Ws]t5GIBBhIAX!heD#NDK--I*E0aK5Gp3(p*Sp5TQ*Ngbtq#sETTA\&3Z>Kt&GcQBN)^E<-/$)!e>gnY,.HemNr(>#C3
%qqotC73cuo\d.5)NjWr1I"&&ucEFE*'O09uU9?1?(?:;MWUXI%3LcW-3^N,g,Wtb\-)[?mLq<"*=NC.6-_5Lj(f2sQ9?Lg`6hOHg
%EW=A)dDkVB^R$b#-"C0sA$GkDhL@XpW3PT-Tbd'74i?D`:%0h0B-oUgnBLo]20Ma!1T,%LiSIbL.@BM:l7[UUM>b0C9#&@r3s-:k
%e!'X-mBXhejIn+[QW^!W#4[IVH%)b5T1]S$?-DT4K_5I9>SL[K5`6,^jd;JM@tKZ6(V_Cs=i:95VB64QqLt1/T9O)a2b9i6^qti&
%LJ@3dL^ot\RPaIg`kS^a]A,fhggp3AS*3EpA(l:ZR_m9^AOkN]-]TE[Zns&lR+613EZ]n6b<>I?4nFT?cJ5#%0iE)(kH5L4.@3)e
%`#Bu=d`$G=g`#L8E9ZI*q5!`*[1`1RO8Mn(9lc<m]W;$PJ,F>:r--g>@n^4sO8lC>7Oms_?Vr89E.<]7hnUG&>NKE0/H9"2+hom?
%7!s950\O]/'h%#THf.6&Pn2EaYZ7)Tj;iuWrm.2iO9Z/*)r=r=)hJ\El>RfG#/:mkmGJXRi7[*R9;:rCet=V<@.'GTH[/KVlbAQ)
%&ibS'T"#E#[0H(]K,[Te6)6KXgYK@iKf`.&(Wpt]S1N[7KIf_'I(KWe[0l5:k=DIdU)>bUaMG^#Zm4cXs%DRLXe`=>&bt"G:WO,9
%!&MQV1*L+Q/PNUinTi(3oMC\H0;43,ZkFdsYpuRT_n9ls?<#.M7WOo*4(0R(bXI]TJun<G8B&LQ9u4;r`?J'*&Kn.#XQ]oZ#_ncn
%4&'+H=SsPW>Q79ROA&]\9Rmkf]&\Ren,a0j5E$>+#q,YrnLm*?rH%3lNq+CYlKA,@h;I;Ukr2-ll`EX[f5Tg-h#?=B[l3ap.JGc^
%.H\MiIi-ad%.\+m8FlHrGP?47O8ephc(0DQLUt+JR2-U,fBZ)%.K'j)g1=>M=l)'6+iI'//=TZ9nAW;18q$qGqHMF$'k!>hKPZ4\
%C5$S\Vu%c+2<`)YUX=I^$I,tNo(MrF2M2fMq^PDnM6/R=\M@j>qd+s+Lu8as<ok\XW$Y(=^86b-DLrD[jtd\#UBbrpZL>>4Z$*qm
%3qffhXT*Y/,NEH$_Oh'g`H5Q,bq%H1jP*jU&l'7Sn;\\Q.LJ!@?KbkV^I^o'4,$eH-?!D6RYSA+XfU<D.\F'b?f/f4#9V#b$d<YM
%SE>L1`*9=']0+Wh2e!E5`O'),$rkFaW*&86SW't8LgW+:>-:K[:=E.T-aLH%Ws%eJD&X:k`6UFgh^kYc;,C&_A"N62mVh#*e%cSc
%j3OdE?8D:7e/8MI'JdN&e>T-."hS%ARn,gsBo?j>W\_K\%Hb#QL&Jn!YM</:n"<WX109+dR)IHRL-@J'pj^5O7+&(kNq<uQ5`sB<
%P(:bI]>NiHJ987%4,[AaXGbJ2@'8(b/g-NXD?cJON+>B$>ZW^W2^KH*.YcA#hoHYTC9`+h"N!ZEi<O&PecEuj9WZ=k*WeJ]mPoq_
%3r1<@9a**?Q.qOK_(Ri$@j;uNqQ/(A/:_oH'pX*>gu)2eZnCX6`/2k:7+bW2K_S3]3+6\;'H(:`a6=R0F7c%jKR6%B0%:^_"]`93
%5["J,h4iQ@P]%gXdM^:6l58:-,\/f.`e(d03Z/ORU+(mo]-@hG"ui]ICjSbbp.aQcB$01DdpgmC>"-GAHTMXCE:@$s&N.ug5Za:o
%4H-u64C;Y+N%ZMVQ##b5-rEXs&dW=(TLYC8*<qtn'*&B]8/F4[kQZ/\,\M!N:0P5$%AI#;].g_5P"frM57LUc)QQQD7gat,0rDR`
%>f'`L&l!WJ)J`.#L%+stIU1=+5^@s*JT;f49"O\Lmr)^nD#,7YkI>maREJI_66dA3/rUY!/PHe#0V;Wb.IT?T<:-QN#q*4OXUgs:
%A5k&YPaeajc'_O31RYF,&67*)M@6&/Kq-N2JW)G/5%]Xp[+lFVY7-0Zn2?<_#1<[O4Je:^oWiB-;Hd28i_H4#Uo!Bg-=_9m9H+=:
%CLVMR(flF>?8Q3(_[0i.SP>^ia]+%gH/X>NjShn;2o8`WRhe[)\,9.4d2%5K+*&*/M5:kh*s(1O_^5"M_PGV9'QA$Xe7TECp:0.-
%-Xigcb+I)m'dol3_e!WcTaK"6C^V:)F]ZUK"%Cp1a4sX7s%]@N5SWi1M?2(F36t/m0pi!]eL-3)ZiDnD_U4`nl:>Hkcqb6t;V]ln
%@#o#5CDBZG4"?$hK.j31/SR!\;uoS49Eet]_30TFKj"IITen?s>i&pZ@OM.+PEl?GKI'2PD\KEI[AS\"1'iY#47R%0)HT!F`Kfr*
%@a-2J-O"*$Z$@P?9I2![),5U\^I5*/^%s2A02c/.aMdH$A3tgpEGHXQ2K>o#,JXFeJBH%k)XEkTA6uPB![@k\bRdhm=RF&=a:ejf
%M3GomAoWQF87d^TE&>j3%$EbSDQ?#@P/Au3bh_hcQmB"qV`eYVZAY:#p(\7#"j-%OZ2$c5617)'"_SbJ3?Ng5;K`\!L77s"&GpQ3
%oKYF*_J+<Dm<kf/E0-jbX`GRLBBb7B3shg/II_gMVn,YsQ22`iQ%RS#FC-W\8[$Qq7B%Ms(E-pu0!I2lOIs/C1]6Q[\[]p%6"L\-
%Gco0._V6nX+DAa9job?LOFbC!K8ojP;B:ILL?!"WN$N@U"Naq$TGg]pS2l_8&tp_jSS.tuAhP'-$Dhe,ng\&_.A%l/,6TNL412,s
%,.g[I4mW-a=):D=Tk@j:/Rj9B8_5]([.&hf&/(PlL(Ol+p.rN%_1/51cfMB?RWB,!K"Jp#r.1)3N)(fu4)*mSIn8nfUcc^qKR`0J
%%F$.i]$WKk.[4=t$LKR=rDQ\<9(]1\=Bj4hP'LO?"K0YmEla9FqL2!$1sUIkZchF((T'Wbb$m%I;@T;00^tJMZL"3J?XcUh&Sa)r
%GO?FtdZX6`22g]A(*?h'#EP!AHdr'_AgkXZ,9h4#gjK@,)W,81:hh.J'9rKH<HuJbr,:^.P8,HbVW$G.9S80ir]dn1`c1*pH1O:t
%mZ,SV*X1sA';WN'9lN9B>'^h^o*FM,c`'ge9Gi9>/`RV1g+YWC%De0L)\tbSFSj.C`U(f;[lmB%;t)kI\"0BCmGR,!^3c77&Y:TE
%>cl]HrGhOAF$CcHnl+/jrqP0BEFW8T*o*l?e2h6b^Z#?\=OmG<&L#]@kr;pCaE6>a=(.n48tNIb#sn_i$0#qOrA]cY5L52-;R=4>
%4i;E6@PXGNF?;Gl;buNhThN`gkp2LZo4(,9"A,/N9+;GN_^I^8gGTr3WKQc\I]Z'RbkT$86WPX71>b]2\m@T_,A,Z5UUBg@a^O5.
%[oVtJ.BRRs\;\F]",X`+a0p"n5AkQmh<*Zf.t!b.i$1oUm3:Y9O.27bQ.9tYmiH^IqI2PR<i<]7^")KCA)60gcXS'tIDl)(h4N)"
%rGiSK=]mrQ[4<oqh-Ql*r$P.AS7P0uQ$T@;h6(sF/'r/qD4"bY:0&bhbA.">c['dcY9s_M?YMA9]=#Xbmrc<dP5Z1IMtHJ-NDB5X
%6(r=dU\W)kk-t<GrI=L5daJS6]nNaIkl-2MAp-AT>6<,HJ5!Yk/%*BhNRk>u!30SY%Y%Z(aepjfol@Ork]QLhdBd(J,%AA?KS/CZ
%#:HWSqYb3n-WCP)m@P<T7pXeh4Td%1"7K6_DtSZAUo2i8Jig*s0tkNVCAb-\!>]Mo"eXk:[H1b;BP&(["ELn3Q0imuI^Bd4EbR&E
%SOU*9q6Nq4s4QTUj2s?`?gX%`X*N3noG[bpPuMWN>:7HnCU`kH^Y*C%2U[K'XLCj#a5'Xr,$$.s<Vkm6XYpU_7H=0=eI<9:B40%3
%\/46u[b>F;06\?-eWWb+&b[Y".0$RVCM=OZs(VK#h#Qal/pBALS;jrqX[i%*0LMtU;f?)0BU9(%T+<@[NA`i`CPB(Qhd7Q\@ah1'
%GhG7jBi4fg9"W\j+,58X8NoaIai)q7UN^``WR['DS^bD3.\#hcPN.gOAX1N)<F3Pd=75N8@APf#Oem\Xqm?&*8EM#`T&0,l"H2DL
%LTMdLZ%2kk#\X0KH%A24^4ujXCZhqLX7(YeSo?K8iiOMo%3SaHf/<5Z>.X28h9:fElo/.\Ygu8LiNt"hJkgCaUmJ4_<&]M*p4?9B
%V2Y03;R_Za'/fS2B'Tk8lg#F;em8.DoFB-k*-K$3jE,;M.6CtLo@)op&#F(Hk`956Ep'5+EpEB?BCXTGi7.A):92'Ld+B@kVFU$K
%`pZODF:b:L[bcSSqM[mal6*R*8%VTJrN653#P2kHS[5E;hd>MN(d\%teD:";_TK<FO44#.Bj)G&<r8]!doaFgf\]6MrdB)o()R:[
%:)\4lS`0KNEVg<RHG>"pd-7>&]a'maU==KKI;n^p3N.FmO6<_//uC`kFi"cG%kh,`>E6r=U2553jD!VnbXSN+Xa)bC:fG."[i48a
%3<#[P2^kp1&^C8I<Sdm:Al#7#Y[>hV.EhF#*b>.[Zn9b-"NI<>8uSGq\eS9AenJZi3487!c9%qim:=e]ifY\,Mt41g%D-t%iLmeF
%.+de7O1NASR(]'*Tu,r0V-DT`%edH]H)M]&J\TVsks>,g[O7ARa+7DQ:3stMpN0'!pAQQq)VoT&,WGuVI.FYlh&k[0ZMl\S=M<=:
%+Z@F?a`qGQ]H#>>Qii[&_B"-)rVkq[^-u87pZmb4h:\.jY&A<8)[e7XhY&_mD<JS?9C^0qH<EsY=IH;j^#5PL4O5Ei0,U4[Wdeh/
%/Q%-l=SD*f^,FW/XnnZLV^JTQo=3=AbB9.UXfY'nZ.$nK2`s=h>GT=4U[7IN+!Sn\+>&p[]6.B9JMH*$jbF>^G^5h2^"N<bUUAe=
%lnrqj#e5"V5CN]DWq!Ip-e.meg\?N\FAFDg5MFe/G;e2CGX.7)I;u*Oo%NZclM>h$epuY$l(Zn^C:/Bf`,7bFq,2WbkDiYKgj!@J
%5,_iUgg8[fHTGFG2kO*NSMtP27Qu-<De\6<cSck-rV00ona9rf_9BgNnN['O;m">n?)q#0?^n&rB-0o8[>Cp>htST!5A6q:mrb5*
%1\fp$#Ch04Cd*8__%0V>_nW(3LF`*;%pb6.p9B.Zp\N@"3V_Re2>["Ff:DTTq!1ZNF[[Q7n)CMiY40X/4%oA7%fNu/4;Z'-_sA(<
%IVUssr4WD#c/$BH?U?OZY=6Vni0Wb3C?idUWs?rRr,gs:IXZdSfmUDe^J\.`>4c9t$U60rqWida7ct$Uq?h^X\Gu6IO'2CS%f`hL
%L$rr(kZ9\]$[pLh0JDp'FmmfHJ+S)9]RPG.AN]YDf%S5d,\hP,Mj;88c/k9V\lU!/?b+I5hQrjBDdQZDYdScCdFGWP-fQpZNT_ga
%HCBE\jlu%o?X"=Bq:_)E9C^Wcm);3hbT(!Sgsc+>o:(3>nErHS?X6c:gcrG-T?[ajNrPf0`[Q;CkGRhG_0ZCkJ%a82l:atsXlmG1
%Ln=eK(l!A(a_/C"RVC`[-(L]h0CY>$(O:cF1!Rl4Xh0Gbpafkb=5LW?Z2A)*m``iP`G%n,RZ5&[pcQ<7kMZ(4RJ,D$%p(s[Y:BiN
%]/T0VGh61,3%D+T"8NCA%S3fcF7<]8Yl3tM_6!t.)d5JZH+hqErFfpErmMdtpZ(\%RD3*Un4\`j-ThA+ZZu!78Tk#-Y@B\[NZKi*
%Dr%pI[+bGdMh)/rnDg'QXjOgtm_@Y+Y]=[Hg%U-<-[YI5*.D;!qYKgUk'HdL`r5<"`l[e8GLLmmTASg5(@:W'C[8Uuf:]^?f"IAO
%BrS/f`[l<-`,]L'S]r8/:Uj5uSj.t<C[L5cPNr/Fb'h"uE1(hak3oEYgKmVjU8bQ6Ko]\[jlt5Ur=eL0oH.Q)J#^t=CnWo'\8tcC
%g3rV,>$ZJ"JU'>Xe`tu24m_EtT<PllT;JW0ceeZ"?=1"iM:p_O64ptYB0Y?ndgp'F8c4WuZd>/Uf:Df)i1CdHaf@5JWL6OTe`e#g
%c`1(Ar-%b5JQ4gRHUHaA\@*)9XNo[>IAkHIheH5r5IhY3kFYPP<,]GKr49K/nc&8t[(S.p?2W9d?&]@RT3#1I1ob#rGGQca?KnJY
%\b3J4DbPY`)YU"+:$t.Z<Vo$FW\1ubI]hP_TdM%b[qFQblCC"t2l_(/hu6ZiGJrXE.neLGWiI5=^Js[JFKSRbD#UqGI<>/W@s*4[
%Ge3`^iFKK&X'bg'I<Kg`Y.?Wgf;m6,Q^cO-or#+l.Xq8pqYK:M<:t,*`r53"0=U\\R?)8nRHituXcM#90@c'Ip?NN!e_R^T=/pVZ
%GA>\,G.gs?R#)nb&!u/OW4"XZLXdJ.DgkZ42u'/Il?`D>CAN2:l.!r"oZYhOrnCLQo;d)qWJ0cjY>au?qTUJ*SfU3S;sO8.j/M+m
%[FqOK91L)%mTcgMR_%*rpL@r\s2ER=K?m?SeG?*9el;%sUQ)74h5>;Y7I0cse>qHlQW*?^W9E8^CMN.X<qXYcp)u9+GB9<N2.&WQ
%LXX;9VN*U!F_mq!m?O97g?Mq2Srn6kVrsN'Dl+>ZoV6+IhBgWc7a+XUL\:*-Xfj\XVXM4nrdK1\g#J(V7pGM9l.VVZgXDW6T?HJc
%het/A^RLh,2Z:`=:JKG"l^d:[\#mR4n,1:OBP.,)`TmGEG@p[*Q)TbTHWRB+=T*DSrq"&+/+Lk3hlj!DX2?I]j-LihmQ<M4?<LQD
%f<.4Kb6qCCcG*4X?JOc$^@EUSH?eQ3ip4i>oqgm`=8&4LftVRs[<lrU\G%\g>.o3%)k+;uoCc>SlMSc3O&t#@qU&=!>FrTUle0LQ
%X"3_sf%#QQchFV,I<']&lB[:p?%"Z^H[GF,leoh6h="'dp%t)ZRob[FFq//b]6-,Tm9o\a9Jgg84<r,#c'bD&p0m)iF*SOiR<b`<
%5FHfnp>BWHjii_=1[gr#gn(Lc9f_gITg$[?XhBR':)<!K>asul=h(oe=F>Hi^A\gP]D;Bea(m2$g@Eto`n'Rcc&[):?@1.k4hgXc
%AH1o%4oK9tg0njsbI-3C]t5[%YMH`pSW3@0gKACddd6Ai8T4>%K:?dlT7W#lI<i1W1]-]PI:m`tnSrES[1_fYhTD%]\SE^TS[l_i
%q9:ouX502UqmdZj4oDS9S_K)5G3@^G?@=X([9\29f=^\fS!j0$9%<O7CHpsb7l)6aYNnu"5H`ml,S.%B&m$"'T?jn1fAEtTT<E1B
%l6!2O1d?DuhJ7W:0L%MjmF+0ng0`u\5+:2s?i(c1bs/hFes_*[oPJ6T51R>-s8?XEc1e)A(hi'Om$Ht%)uRPKZQ$@hg)k4fmlkFA
%f\#F`hg"m0;r$%$.dl1Rgcfth0Qm$Y?t&$ZSbWGq['73Ir9VInKdX"9p;1V<;(R+npu^hX61eW9iT/bj31=4Mn2/QLgTB\rr\6;E
%4aB3f-@/t0FX=%PH1`S#4[*U4:-BB%()L;ifNq6pVq'elaeR1?)bW?!q#8h(c\oT!C@T@,kO!M;G55/i?;2N[G?+T-r4'3r*P_T^
%p*SXF/l[3$%C<,$ZScENZ"J-9m.T#c5$P52:YDeWiG>!c[b9''c.DmYO6/4\\$+'J472nsrab]n49"r"oT8N"[LE15S%^63f!^Tl
%Q?-EPWquQaCmpX0ifh&r:OK?o9B=TlN>S+HMnRYdH2EnqOcSDE:W^)tYOlAch3G/0MCVsiIrN*!ll.aW*j2YP<Nd/sk1%\n[oiU=
%ES]jEf2qD*KRJ9E+07#2l'F'3^?Ft8CeOf4mq0f:O&?oY\,-._gr%H6hO<&?pjq,c[',te/h3?g)fLmDNuf;h:KCP-o)?qZB1_^:
%^$g,jiuY\BnRU+Obe--JcgU>[Z<nPP@-&cFDCf(3^3dT$oO+[+ip6$MV0@ptj/(n]gM>0[bpuRnm@/.hiIdV8CY--V?`ngWh;!GM
%ptEu!4aqH&St/okm]CqVhV-cB=hds450i!\Z1n7`m=i1@<c?m+^,pQ9=abe_p6XB4T%lMYXMgYK&"dt3gg8b7FQ_>@lg&c/]RPei
%E9F`V4EG^T@J/RHSS+KhG;kOtRs40/DQM[]*7sSk`JoY2pQgfKG&M0iCA$HOiPG&)p%,)6APrKS>e[uMmb@<%Df>?8^L+&1Y?\\^
%n9r8>5<2toEZB:(5-I)=?9.H?bX41edBi.JFd^kLXD[]WO&u(a+22'no(HU<c"oN.Y!(WtU:!d8p6XBk^HUJb^Gp;4H%.-N5'R%W
%a6N6ok4QW9&$EVAhL0?aESis)ei7pI@!e[#I99dD]DYPX,bH0]cTT0X*e(]3oCV"&q74eGfKNGd['nXJGk?1ZrgcQ7f3@.`DnLI<
%B75&Cmecj]%m-iXhsJ>,j1,j&m.$Xdo_daOQi!Brn%WbqGr!#%U&3pEqp2I<J=g=;GW'oVfqe5BG5DZf!8#rU[H6_^rRW.*5Fl<7
%f2(il=&ts-I+@:R^TZFo5+=Lgp7Er&q]DEC;:Ej_*T$Y&[LkZNE-#OVF3HR,9V'tkpi6>lg*Y^\:N*DnrHPXDV>%Op]_Z@2jE^<h
%4nX3?c<c3:T'sqi\JMT1S+2EKik'L+3a',mipbX%a'4I]R9*T'(LLusIGU>QIT`6<3<(aZH2#n5c)'*QQf!+9gTRdK]UjS[o&7^=
%X7oimT"jR']Qs!MID3s45Ma*Go_%(brU4[e<jj81o4IgQhQ&U(PH.W#3dZ)=^X\B/I=Jj`5C<"h[tCS?n)hAk1%3[W^"Rr0klX`<
%=6n,EpIkCk]C0+`=DGT8]K]Kp_"P@k5<KP85(D5`]RAu'h!LZta4768pE)V;+5clnr=mLA1S8PK>MB)KlM4KJ;u:.LI$Sn<rHY17
%Id_@,>^uDmHM-S&Qh=Kn^?iMgTDpr"f2',`*jL@$T0Mskl;uQG5M#;[Hi9i@rncd<rFC?Jq=`&LS"&09G@,9+GHPl!fL_\-?:-M1
%>@$r2Vu:/>^8l1"qnDrT-gp=B^A]h<OH3o%fY%03V9rJ[q-m,^qQ[B9n`K5\hSJ&3nP*u-rbZ.\k0(5dDS*J5SfceDhcr9k^#(m7
%FIMd\gs,!Q=%aX(8'bp`R"!YV46te550b7!5Q8*?qnULaFq7o_/XqC\pZ$Scf)=c'leMk_*)=11]Q8>df%/g=BE$iZdC!,(mHFO,
%p@2g/0tuJX@A7**nK[S$]t]!YehN4EVN3[F^3i(]cW;2U1I%&+GLV[4lh.5P<CDhl^$*r2cBmkZ@<_/)T)F._r0A;h&`fO#VnE<V
%EFk,]M>U\2Pi7).5hR:ZESOid`I)TC&[th"f,f<bfW"naf)G!V"g0t%*pr)bGhGTb"V_G`LuR,hlCIo;d(Ze*bAR"<8%\Fhg(gd_
%.3j'D'F>%c>&hcZK5lK.ZXC_=Qe](jj=7>-UuNBmX+JjhWgG'c(%_gk(%Z_.j2u\KFjfZ"l51"f.AhMBWX_Z+.HI>*\?+YYF4?,U
%#F.E\3Mr+?9^t<+4Q`9VD"1!lbjd5YLou,b4s;tpU4&ZDn#3:hii5g1Y?IECGhBCN&X6b&F@&i/F.ROl/"bqC="7!k:Ob@;IlAiC
%Y'8iON6/Vi#UVno:E2SB;Pd@b`/n\AjZfEFnJ2'mRccb-H];lXT%BB[&g[6*:2i7faon=>am4efPY=2MK,]8?Z_;*j_5qbtL$Med
%+M,c%(D`j-d<L>:e?M'273t`TY(I&&-R#%\XK"8D"dE+R>&1WcG+7BLB\I,^Bhj0UY>4neImQMO$KmX#Gnekc'9f]#.:7M>3mB"?
%?>e\LZm6+j1VB&GUU<R8Vpda\gK#s@0L6-6BMk+_Xu27M`if/,E.0rBLdJRtbp1s*he]cj4+E==S,S6.d=cempsoT9r]<(>Os;j"
%iA#GP&@jkp@r0`22:di^g>`md4uYMul^`Zpq9dcT02;g&+7^/+pgp@PI,#Q709O-;;bX+8m`Y=o)"WtAYiX.ZS03Y%g,i8XGTJQG
%lE-9;DPQs!IFNUp]JET$@%_/;+m>s3oks4mA,CDTn^eVSJ^n^[:GF\>Na?iI`"#'/r+ot%,J1iMbb!BJdjiBOqlq%Fembjc-tD1k
%2I:QqLH+QXNRO6,ZYbf%lb1<]rKG.dUO'7(Na_(rF'f-lP[f*+p?`Q8mdt91UEmk.p/-0L^XGA_PZqsoX0GCRog99<bM2DK)e4<O
%a4(2uO2Fe=a5X&\%JF2dc&d\#]htOp0o^P+kQ)5(KYq0acGA/5LkZl\g0\A/6e)S_mPns:#;%%rl)le$oA,f.PtlCKL(7:D'TtId
%jt&9,Q@?8V$=q8X>,?U(0QjDqF^_sH<D@J2QAHF/O*8;Im[mTAZF`Zd&^,+B]Tu8e5c-?:K(WDWl/l<Yd0]WCN)8PhAB]LAcOPZs
%88>8iaddW7-8/ohrjR_J%6%HXW=FE%;*':')9jNtWB&=RqRCqNj2@:SNQ]<qFhRV6mY<C_FP>LB?EO3N,MQiRHAgS@chn%::O)'4
%kcg\q;'%V-47*dfCD8Z*3.hK_JiDMYimmn1]C4<e"JKZ$NLSYPXJPnuMuG6.(jdto*b2<Ns/Ru$VDK3&bcRcu:'5.,ea5dem?>c?
%\EW%%erL:jG]1/+gcQSCl./VC<=$2cO":<E@t39_c?:omjnepUbTiu$Gi?MV@9O2:@jferMNc>'V]40INnU8@$7`E,EjRWS4.s:)
%G'4aF_SY>?a3i:JAq^krD+>I!:o%d-PRSW?[?%pc97p.$(ha"</:6VuW9f4ih>R1fUGEGsg.+^+&Xrk]Du6PLYoWC68!hp1s+mg>
%N@K&"pdQq(N@qV5+\_,3LNG#U93tZDhGGrkK&\a]=CR]S<kqD*rV:V]&:kNY5-<%Pi(sn8eBO-rQP\B?lpe[#CG:FE^JK,ekGUIW
%8mJ(Mek"\PQu;ZZZk>Ife!IMT4#e'b2qY$SWtG:jDSc:aDrnslSSqYJV0$Bn6?uElK(&*oE1Lda9:+1K-OOAPEI1sR]7P_a'1F$P
%_M:mk5dgb4]X=-orlQCI#TGGR\esK^-rQRi+bb(YHZ`.lUSrpd-r+t+qPOHNFsu/RQV>OPlR2/j;Ytn1s'RRZ8A%1:*TcnqKB&q*
%]f^>C?db-.eoUie8E19hJ*Za]H=]tk$?gi\L;,E4_am(WG9PV1.sK41BP3t?6Zm;,#d9h\&mqHsSNYQlm:Y#M&.P0Gh)YE1i&$kS
%ELWiu;u5aSol4WJ?&4CjYO`UDULmr4["L"eWSQFc",2n`S&9ECkQ=pK\7ZI1C8hM8Kb&/f#]&m?dlKtW<l+;hXn6eHRk_oJ4/X[K
%@e&;gc%h0@F1k)#SO0/#h+"sZgDq`1Sb=@t(0HqkVu:]q7an<`lSG;*ZjiItLQ<jU.L'<Y[d(o$-nM\,Z.s?2gH<aX/'dT$kNd55
%#eN/rF$_nFp#H!okFYZ^,hu&GcHif>.GF0sU>t9><6)+>F;_+G/.KmJX1jdT&T3?r[GA[^)+-,6U)36B,eUVZ_&[][l/XHshDDYW
%5Dn)85\>m\"3>$CBX[r_oAT[<WK1:Jl_"KP\-Z+G(W-[u=140X#3^ktcuua>=?dj"H!t\O6iP6uaGP0\GWZm>cj59?olp;?X]h5g
%DpJ,<*OG8*87`%]Qg4G-G40OUFs<q_kqELC9m\q]9l32k%Prk9.i^`Gorae=&L>NAL*$<</F*lFTsC2S0'l0"3MFiG2G12t\4#Vq
%e*Zu'2B!F;haTWq3H_"O^<N0VIHWM,A%mN-m@7(]HdFkZq3;t5T@S]pa+^Bb32Y]r4Do)t$#sBgndWb.$JE>h1#)QPY2?)rf[h+Q
%GIEC,$EO/*iC2^)6%h1sgh!Z-Snp!&>SE@!C7km.6DhRGgh,g1CNmk+;G<RW#22&s0^+u<UBp`aAOgoVke4Xg9tApf:E-pjPJa&/
%U%D-M)Kgn$L%u1=g3J.W9(Rk!H-iL'PYQqufbedMH8f,0U\]g/YX&mcInGgQOoFUgC[ecU8Ip3bi.NcZ27o>(Jfo<rW@p!e<D5!$
%''>5t9doCO]9a\XeCV]@0\%kjI9TR)f![;S-1)aO0Fl'.<S1QQG!tm-kZ)dPr71W^aK'k&^VGVB.E5`Qb?*@K7dU*j9Y*r:\\7qL
%]=**G5AucLnT9L%[.5aO62HO-s"[?nA-gcg36'kHO8FAXI^D%u'`Gg`]t(KQ1Y2`^e-Zio+^W'qR.opeNMWIA^k8aY-X`F[e=:t*
%(2@)X>!HbrU]11eN^>lDDmSb"Ij.,M[2=;c!f[lg"7k0oP3CMrIAL$"*T6?%+BVCM92"VFV;niXjM#[uMU0cVmhZ?0V(o=*?d3C;
%q.tI>)g0(ZkCB,p4+==eS[Z#uc">\MKNT(1O^#?oh_`\`I2A3pe&@W=I=',l/A$W!\>):M9OHICKe9\2F=2KjhZTDh2[:,jB"_,-
%ljij_J.O!JpYu+Mfg1KB&Yk]2rqZ`:BSB&DAhe(q,V]_h?\\+s;Y[[3au<hj.#Br+L?:ACJf4u0pJMc5b/-eSpa]mKL_;jE)ARt"
%"Mr(=3"jVPXAoc]>Ejq;gPB&F!>CcT-YIbUA=;:MLkSMR83`s\O77E"OAiEAkk-A9InZOm[j8[c\5n,+QOuAH2@/=h6%\^>8&/7R
%,s<+l0P;1)5+\RO#l&(EAU+O)q\SY:*aV)Z170;X#iXV?P;8hu.ARQ7];O_3U?Q6GoXuK?^0TlnW^$r]8ZO*2"AE*ZcWV/\<6J,f
%3=qVQ;l:<]:q3#&+jGU"FHV.]9ST9UheJuN"r,jZ=6N?UogejdYcc3q<SkI32!fM`8m*4o1T1$g'3h:]92n;tCpa3:^TEE`idac*
%ZnA<@UlV'&G]F64YeifV^Q('oEXbYQA6KBuSALJ*QmE?t?[WB]nAH7-TFs(F&Q<L*K.#9T<qq]Rl>JY9-eGRn5`gkSL/W>;%5S2X
%Ca/`q:>q$eS4ST%[59<5+ui,!/c$C2@0pDri&eRfgosZrhi]7e.%gb.k;\*>$tJI`FQc.O>Zo8Bi`VjB@q7_&=h)rXct@_S`Y$DP
%4'`JU"aZdsjn)GO\:AT5`V;FWYek,!UNVg+@IphR]76Q?1a'/Ub!9k_Bl1Pl%]5p")^#aAje]l+8,$>b8HNJDT/:YAWO'TpKZst-
%_`eoob=r-o)^UXZB(:F0?(l.n7*>SbU#&F]>o>:2"a:_(C^mER0]0J=4GR'Mn_La[8d>5Z9-nC;`TZp+UNt6p5ZsA)A)AFJ'1X>M
%s5L$H\MA]o-O#\?Qpo:I%"?(FK[ZbM")N`0;W8A.]N>k]Td2-f).:2O*PWq!R,].T\l,I>G:/V-[dGmH4QpHZ1`0%ijl"c3<PZhb
%WG-R>n"Qo^[%R_9,C5Rk=p-`ab\?)WQ<Zj4f?TCf9S+9ZEjQfuZ,Tk>SP()iM!-/#@;qp'+YYhV+*H1&iN1oQ/($#uh2&1%C4\E5
%-Wi+4c>s]EIqHKrmA"Y]Hq#"ZY(b4oP]0frV.eSp>%sTVl>Yem-Yrk-b+#1%W&+4#'mJ$/6*]m<Z_67kSm902J^!c+=jV*p:Te+;
%dBJ]:)G]7J29`n!eCL0j"V#,6j;QT1@U'<uSALJ*=BJ[e$1DdlKdYJ+f\G&6JVI+uJfE"sEa^!Onn>[Yln']8Sp&"_*4.fY1B*\b
%_c7\`44Yn\R<HJ:*4.fY,6!FB$Yq_?GJ#g21[Toi3,!N;-2]RdL+>5sGH;PW1[To)3,!N;"aoHU"+(+9.TicoT%7Ol&U_EH@n=Lg
%fe]=V_%hfo:/#&'*dUooNW"tnFr<@t%*Z?)g&1fI!P9Gei$?0`LbH?+5NCm9n%^:dcI]A3#sl3,&gFbh]1im6/^)/n9,CtQR#[a;
%?X>dqqgptZk:8@X/!Z-sRjDiJgED)unDmb.`?Gc7&hnltW9[&8`u`s..FsU^`[_`s^b'[mF^AF8q53!"3@l@'TUrAWn8sA@Mf#AZ
%q`O1U?8NKn<or8T:Nm*M6]-?434CWP4L)h%)'-i;aeBuZ@nGM[U:>oG(BlMOe7;HFNJ(o/<5VP76'E]qXIp9G4UV9W3:27^<]M't
%?k%AB>-T5YfW,Vt3-XTI69IYgCF?!UW8V5uaa2'+D2d3^cNtkPTtZ.'(^qL@C6M&jA<'%n'PLs1U05fWV>Zs\GN`ZX#pFC)e"KT'
%#)?Kc^^Z`k@0+BJY>#O&W_o%3Fr/+U4a+))HH%idB`n>OK=#8K0nL0^ap(S#6eV(?R1hJsEZDsq7#OeKfg'-r_0R*S.dfo\bqlf6
%9Ya=p\F"&h7jlfd1_Ef&r=iFXki>pl(JED\6RUH"^bpc9)UeS9QYC0?JS^]IZR-j-.+c(APinu3ld$Kt5[Y"Q_&TdiW0Ugf`ts5e
%r=bJOG)h,;`o/X["S/6<3:&Ci]1u!?8b>"?3.0*b`?PA;gbtt0YBCO*Yq]o%>&V*iS<2V@U+-e[!%WfR3JpjS^c"gc$)Z6?4#j@h
%&V9hp5sZ4d+a$mk!;U6kgDgBD817[KWWPn^Jc-7jRmQmef"\:k0Sm*E_9l$SAAl9m2?l?9XGr08`iX?A&O<*I6Yci>jA4!/G7#6f
%0a&!O(`k0G,%Y5FFD!SE3;K=ga5H,4<9Pr2'$;e.L:3^tQ9p=\,=r-]LVd17[F1M7/U9Y3(hSs)1!Trop\_,%Q-hF"RNeTeVaOY?
%:['$A^j%._s)L^JikNgQ1dRCGVF5E<L2]2fOh0\Vj't@+8BV'A*u<hWZl<3b`MEG?m0<'5g=6h#)Ck2b]/`!IFp1A2WI]56GXCdQ
%#)g41eJ+NERl8+P51QQA12o!cU7P*KU0"&9*1]d(!lOkFdar5o:2%n("^u,7/l=M.=,8kVW[$6YahS:$ot3AoJRoC7QM(Y3-8Sjs
%^^Pi=Grm4*e'e3!N&3SEI9&j7HFR+(AkJ7tpGrNA';\+VG8+L-E>"?^L`R3s2%'stcHOoP8isQC>cSPBWt`IWo%K=c\5nDrXelYX
%$6H-7$T'8Fd8/2Eg2\TX2FI*8A_#n;(`;Yc7FH:6EVi\Wdr7.\8S_]>=6sG/4cBUtN.F9tHo*nZ15SJ'?NOk?3.<EXH)+_mNf]b=
%[qcieU<"a?fO=na/b(3H+[&`9Dij2FM8WP%^)BiYbJ%/7gK\BfaY1!2JoQFXQCrOb$lL2l8'948484$$k[MXj4>#a=%%^S5Jk%QI
%"7;uT`7e49hWF:u"RW)U7+qh<[HP^O4j^?a:Y?-TM0@"d15[B+%HmNI=r%FC!^51VMGLBdN?59a#7Og3n]A0I^4S9@Z^eiJgTJPh
%=3eK7`=l,#Y(I2J(*,tlg/5aj)a8INI,84,A-plCpK'daPH][:,b4]->$9ecCd9Zl4;]/@3j!_('mB<<:c^5LXpPb6YI9/"NY'(C
%$V=fk$@i2:,GPP*Oi7T^_VCq075>h;UGK>\f]WSOWf,C3T^RK5+FmIV`#'X=er$.8_XM"N;NPW!qAU+Y#+S[T8;32gff>;cKpu]l
%.Lr#g4]66_Uu^ApMa>,+Tim9(16bOinS2B^5m2uM$^E=%n25FlL`'_mmETm_Nr<Kl%8%%=&/=!3P+]OW#3o@2&OV2i.(h%FTc&b3
%$q`93UKgVXQs:am0IRtq!s#`[jMHKT-L$>NH[gZ%"mlG`?cC>#md8HM5WC*DRC.JoR3`\#0.gAf#o:K&#TT!?!6*)>UlA('r<&"T
%(UOd6]86m]4Wl392B\/TTEm^p"]th$'&%+^Yu.U1k=upESO4Se*I#tkBHf4Y$cHVQCmJ,De:k^_rK'*\4.E.WbTmGpMq:7/"qkE8
%hZI>4"k;7:r;/0=9U$k33*M=5mqus)BGWXL0QbK540iHq,.Or=?Y*)*M&=jNDqNr%""ohF?]PZ68iZ4na,bImGLOJSOtlCK&><\%
%73#pQ!'B'O)Q)\^)cpZi=B^[.Tg^=t,YWN2=CB8W6O3:/=le(/F]]]0p1VHIUS'`'d^V+ImGcB(`*`YYpjMK>2lD]2bRNU/*\D=u
%8i%CeDu%Rn)6CW*i's7Qp#b)f1GDmhGBG=R"4jt[_QP9TmL3t5.#gMlqXer@C"O<#==5LMSJ8nE9[)nABSQ7<8SBLk!<\q9>%_YQ
%K$&`=-X?h2G%Z,oP[Km4XYCeV4"Y81`m?Sc(=n(;/3*ALQ/#/S6CT)[V8%*80<j8j4EQFE[J1-d?3_os%8(Hb=1J.jVGDh02VP,g
%N^a;Q5_V_lbc*kF:g]<mPbbJk`V;I*K+oge0rJ+S<DM3o0c`o=^&X2O*lG35dL?NjPIeqG_f45KGSSNojrrG,K<V^hi@F"bQ9@q,
%'tOdm-k$,2L7'ol?[0M\TYfl*bFh.Tp6Mu3?1*@8JX,/fI3bt$]EO(Y"VO<+1^>;[DW$!m'PtPp#r%lC0@>?(f3Gok0@3@&82a*a
%#b[S'#2#,EYZujK],HKp6E3ipH3$^Z*<o2n(oH/p%/U,kBl6gY"/\aR]*,]u=*T9&nG""?.F\c:n;+m\9HkFs)PTC2$19PbLl@(F
%T]XF*iF&=C[p`OhCf9/e70R1=AL>JJA/6&[S5mL1iXMhML>3Xa06ci_#2fcS6gbBs(&L?,]T=]_Fl.`1P5^U\*qY)e7BGM[g)\E,
%Yhd2dG]9><e&!"gqJgMp%:k3%Y/\G,U1kA>RghAo@cTL*2XrOQR(ih[#s?$8'0&j&Iq9J%O2)Sc>gm+Y]YLL7Tumee>'HV%Yf<`<
%V@lk-Xi,SR->Yi_kjtmN6.')1=d=VLG7Mg8Kf.eQ6i/:&'$Q)o)A-@ma-n7UL^l,nnMVkOI,hL6HR!^#.qidP:CpuQD<!s+VFaf&
%/T`Rm;5qnk`!+IrLA#;t,*mP?Oqr()Z$6S4'Br*1Bk]k%`q]Xk\M-=F&)N@Q-&'k3M4nXDq7DI@\/P=rFp@XCa"sS4Xqb@01X7en
%>beL@L7s;Nb#.&UU^7"/[o=XXZ/FE17cA?5b+-<Q*G`<c>bp$aG`ZTP8<flO"jFQi9YliE)2:orJZ3usQbqD@>5;Q@'>;0GAsthu
%OS[N<0O+sG[bT/WI3n(KY[PS5YoU=41LCj5Oi:4DV])@ak\iD60=]hc]O72'1Zet6_&8#fD"k#NTA]p>\!sMhMetBqk`Bsdpjs@k
%)jZe5'FG<4o0/k&n]"5G@a_:]mo\90WfMeKXFiqfgn>t5*?.`8@Q@*d&+k07$ZCP="pNr+L:tc@Is(kRHno$?49?*DcJXW\bRHD!
%%>1!6Mc0sH!a[_RHSm:pVp6)2TE<mk27.%#mqF]E3H(N]Yf=0k@*'*@(]^/#=i[=uUfN.g]G^#'FZJ$tYk/8>%#G^V.M5P/KqQF"
%b1_"\B;gFHf)FZuX%uq#D@&A!iF;?pI@^$d/=I))X)`1;6c*_jhD1'J#>ItjqD%-JPHji?AiYke.<>O?0^X+5;3$1U>#*acV+mqo
%pFMg`c8_Ea0KQKFHYX$WD(GIO&)j1fKj'5i5rGR[#bP\kjhbLV$qAo(F=f`bik^SgWKk@\(9mJ&QcUf`Hmq&Wc`3t0f01sSiiFCC
%&P>o0/RH4i&!qBae'C>a4CsD4ZM^dK"hDbF#]6g-!1us.bi1>[:\n9*nHlV)n]8]Y[N+3=C0@9QVh<3&b5jf#QI193g!\&J%e.TI
%*95U)>qYRZjoIZ>QHu3n0!o2jFJNjX\_(j,:Suq\NH\L-+"t'.9PPn'F*aP9!1llr+T2IU_!PnrJ1&c_69FE6isjth[&`]#_PR#7
%gC<)_ZjRX.mEQE8c-_BT$:U^lpWL\ZSIA;.b\ps(Yt25jP($odUDL"e0q&U`.14<87$WN\fRuDS)b5,A@`NI3O`D-UO;N%N(qai>
%V8GP,JS,YEdR/9R&%kq1fcK^9>.[%RYeC,//^q`@MI@[dqhGnYk_(BAlk$aLR!159((;gtCiI2MKQj%W<uF,:'a+'"_^Pll"K+pT
%H1"7(@$I1[!98(31G#i+(aK\t;lhbTo)TV8:Q%Q9NatRB9hARQBN?f(B3sQ4i%LD-TbA/;Q\.VZSu9eHdL>gmT!,^L/0^+j7K"iB
%?MrfoO8<'OdDm3"TF*_e,/=!%]^$k$?YIbYDH?bK03'c=n-0.%Bo7`+"=OEdg+"9Y!F..jN+)]pl`\ZC/iPmq(lfsM7RR!03-h!H
%9%et(9o_3#3;MgD@qMTk;H[Se4%su1>.1Wd3=Pq"O\WFHpUlf#\>;TfmaX#6X_dKoFVn@s[%rU;+&D(2@tT(;o+(oPC$)Y4<T3If
%>!>@[b-Mqk':YfdK,cN>!g\mF51a3371,B/@5.Bu)>GD0r>/)1L^D?'VC[N"L4)\4ebI08.[HI:CnT_qSlEVU(sF\chf''$XC8ao
%a&rB,aPht5SBcSgh'%`*EAK.k`$sp%@T86Y&L&Ema;Gl2[/ul$qU5O,J'D7j01eRh3&!Ba-q3/]rQ)\-$/f39!A#MM4=l^pU0)`[
%\\e.p9*05bT#$*04m^4_?XRYK!2R!oD?Ejj9hVbAiV[q>LMAN*U54[n@2l2!n\/`?d.bB,OPuQ7)Dj3=>ijMUk`WI`Z7_r?q`a=`
%:c'+m=Q^e="qMRu&8RnGmP9c!@16WKP`s808oub4J/X9,S7D\Q3&2?>PsZNB/"dPEU?&7L(rbod[..b7d:e9"UV6qtUNiPU#R\_1
%o'dp?\]D6B"qs'1VNQueK7JhNJnb)/_otrg;6+tE=TG;#Y553.7C3i)iFjo2;3E2@)!Yl*anY^/?Z/.YMeGS+bB5)OlV$E=A0Q6=
%HLS6%I.%JqT^`bt,):Em">kh(Y.u,gS0iR>">>=p`$`EZ0hi`a!V!`ZVd),El\Vj^(E;.>Y@-"P`80\[o*cU'N%=!8#>\8D5#usq
%)[?[#P=2*nV#$WJD<ZU/&e>hFF(ttC#Ju!+/]V`CUD,T.AKiG_$DJP24>8ONl7l&cBs!uokhE:?Hn'ub6eB4lWTVpQL)8ofEYP+.
%gHqYQ33cKno!g+Y2$55WW^L#_<GXMr0=FlaJq"uG!CTIH@EqX/\R+G9?:;)RdVi"R4eX.81hnEJ<eC-)F3(9:&h]r'?4c"UZT>0>
%J6\j5qj%J`!Jqlh8l-Hd*ssfK#0j$,cbAMPQ^,aKOB'jrcjL=UF[@.Y;M#)7oo,<g$Hj@t='4>EKU,`eCp:j0Agaq)JnBWm(,S+@
%7:l_c/]?[5+b3&rQTdQ&$YD\Z1/&73-5bms&;%?)[>\RR"qFUQ$DEm*FJLJD.S\<\h6ZBe-u4%WV)(f3ULWbN(,S7<TeNBO/n6S&
%+cd?j(P2=7/1ZmeLuS$)(s5(=XKQfSHZRcB.45f.D4>u:ef9O%2gXts$UWm=4a0SUTHG!MMpBA53)DC1'V@]B).2F$">Cg6]d1f'
%KSE`j&A=fL?)EuWA)54f(?S%8?*UVg'8gA:7gUkOdRkNWp3`5gYf]N->.U"lFpggt'8e*%K9`EMmgZH6=\J[q\RGSmr/NFN`Qf8n
%$VJ!nl4TD5K`b@R!aI>q*LfopG'BJW-,'r?/9tp;!cn?&J<K7<]&CX8&p-B*FMdo7\5X#>(i5a@[-"]V1;&)r!90t+K"tsE8lgtP
%6it&C"i4`F"TP.g$nYD71Q@L3*0N$Ypl\MW;Pt79$?c`)=R;:mjpt9$PS]LSa%d38.)EMI(@Qfp>V6jGW1X4g('LA+E$?puM)q#E
%P`a7eL%Q%u8IDGibH"s8+rH8_OOpdDh87,6V_W>D#BC'hW[P-^64l]!5d8mkDf?4fC)`jPNn(r^^bG1*/A1&DB\DBf<8\;2^^lA2
%X@pF;Uu'g]@&_?Db:ha+^O3eDeGJ>^5,O.8]>o33gjlLJd4W9q&"&"#!-rS\qrJ,rc2_?kN7Z6->/CbrkPXM80$g[YO1eiW,oXoY
%9Jp6<.:Yq`pb4TU6YcjiUn;'jU1H2A<;*"O%@;,';U/Rj\b!p'"Z@!^`FI"M]IA@k6cTd[_^6`FEF=na]XfkQLeCurs%/&,0=S;(
%rkp[Y>8e/j.ZD^aV+uOF&h9iR*5.S@QZDCiDI&4V;WETcMfEJ+>f"D%/cPXgXVdR4NS,4ZbZ0>$8+$V75K&:_g;C!srlhGC#M_mJ
%pb!F1[hY3!4E3HJ.Q0JMM8\Hl+Lb;ij8K=t22j2VJaNf:<9C=BV\oi)1,_^%OVZ"]d0l;N,mE*UEH68:47;)@`LLL$aij>+lI>5*
%'Wi5?[<UjQ;h]bk<gX(TTabdqnNS`7HDD`tFSKYM,P8ClC+mR+V>.e>s5t0tN8orSR-o6/@/Xgrb`sg'Ir][eM=saP0Tp0_=<@_f
%oZ:fu1EYeH`U*T2#2pDH:0CFr$u//A5Y7!^g+.C9'1BLM=lTRi-F,0JR3ek`_0d-UkZs`EHIuT+;.))?U:4T7Cb\-.+*V008fqp3
%d96QF8Pgp<0a&!O\C<!p>3/Y_S4fnj<idR/_h<N3<Y9Rb/`mk_)`#-/0t@a#0/81>OjQkraY'8u`(e,F"A]:b0h$8+=NM-L;L2V@
%Y=n,&6.0Q@+]Q1@$c\V:Mt)Cqf<?9`J&@l!TKJB4HD(?ekS>E"2SjJ7)OdXm5a6kX@n\])?"t.^C&K&+Z>!hC'R3d:QdY1tH<j.H
%F%\0F$<CocK.'>Zbk:2uhm7\%*)f$3XnB0skZr9_7eI\4>IHfkZC,eupr2%ki7b[pD30nrmhoALrFs4"cYl9,bRC.ehe!##Ok)-H
%bCsh'/E#psrni4NDFC-2)2!4/%+%G6M#!a?]CR*/6mO>t]MBo@eU=D1Iq,#d?g>T0-ClR$Jk[qOlSpqf/k$6(5knW-i`U2?NOVfb
%:j^Tb+p-eUrH42%`AhE;BVqm=KaBSjJa)p:dTS:Mi,:.I0>2tp>69CBUVP1s2pT<K6p01Nj*:gN`5B#J$5*o6iprcQ`%UfkcBrJ-
%k7)-erK1-*WY\:M*5rp2MoVJO`nS(L:RWR6Dt'0P!X0q8EOQ>X.iR;g0qqJuPGVK"KCX.t!`+">@e1OG:P8B):*r,FlEj<H.XIE"
%a-X"YEUb@:BNdd*[,+HhF/a@9p!1,@%_dg1LL/HnO"Z@SS]P;\s1EX_ghFu/oC"mR4L9.SjUj;9pVjfG*2':d01`GnBNdd*[,+G9
%G:D]-jkP.CSC&1jCW8Imr&s,rDe*09/(e.Pn$e8_%5nVC170G$-lVFhPgk%/k:YlOV4@E?qZmM*7DK^J0D?($j+T-o>Cd)7n/*L`
%&0M#f*P5sl1R-om]pt[B`E*03h,eKegK*57X-f<mD&5I6pq5_0c%5nR87B^rD<PODBJ56S9Qs9WK#p@K(/9P7$7Jfu5FNG=:lY`;
%>Ukrp<LI)5bPh.W,fV3-``+9WbK).p?Dn3&Wc=1hr'!';cR`?V%oG[>/;/$R,sS6./P)i@%4#+R6TKHAk:YlOV4@FjE_bVZ4F,)7
%]`09<#Gs]I&>M(K$"e[[blMaB@JVet)q]]//f27LU+&kY=L>@*q9#Oj'IV@2BtV8qSNSo.n"lPdP]N13m_!Qm_3e7sTK&O5ZT?N^
%k\3[ec=%L)Td$bO3In<NSDc6n,dVpp330=UFSG/4BRK!r@QHlY%-F7Z9i6`W2.!)oC^O@WkAfuW#,^p5$AJ4-J63:mp^.*.<0=P0
%8JDB/]bGg[@dd4]SN"-E-2@=+4D&[aj\XlFT)F0j)k+:@A4q$3/F,+\N#nErnNtG]bI+bEC_n_"<VZIqa<V4<Rl,<7SV-^;&Eb[>
%@A6&P`?C*MaF#$oY?aGTi_q;o7@W4N&*Ajri*FthbZ;SjpSl,b\9R1F#b(J"<]6IF1A:(D*_6YU]R1OD.mO2gBh:6COoX&-]KPE7
%.1e$qF+OR<Q@],dZiH(<0ktn<)UP3h!$`q7^1Rd*,+TD4:jal,FK!-%1Q>&j"Jdf?PZ\#e,Sqfc,:;qE40K'umtL24k<6_<#!g'B
%4(]1=dgl-l:eVV#Jpq,tAhMV&n+sZj%5uuDnG#4;s#W^h.5!<61U8VsCB<92NcAWD=/#=UM=KJR!=$>PEc;pS^'3KPOh/(!;_J"4
%'+e>"6?lYQZ&V1iaU(P^&:R6)c)a*V236UdLg?<m1([r;QOQ,4'dkP:KuId[D8AkLnBr(7Y:V0ldC<*f,Sj'>OO`B']*9-uL?%g]
%_A8qBS)fNpD[3ZSklHMlKP=(oiY4Pk,G?qU6_#If!J+$Bi8`H&?T>UCqM.1GDul;H<M[\Y:%3]eGQ+B,0f>PTk]"J-1XS`'"p8P'
%$qWFmd?2M.]bA1I=+_.FKmqtePC"i*"\#.0X-0\s3Ad.qKr2sF%nhEb.=C(U#XDDq"_uBmdPc9'ed<hf\VrhK'VX/uM'b<IRTj=X
%%'B2tmdhDjgAsNoj6N6ShZkU;Stk5t.de>r%/O=k"uQguj7-7m/s<IkW4`*4bShoC?)1YYer$C0L4Yg"+>e56VBXPGZp;%so)S@K
%'W>&G4\%M/,'N]SK)V+35n1`2G.r/uK>HT;3I(;4N-<\q<(.RnZuRl!^/eG'V9ScSgPhIRQ+slS-t@YeI-fm%]LO$$nZq8I25YCf
%UJ\r*s*\?+d:b5Xg7jrBcp4<7#kWR&&8<H`?4+8:6$FdAIZ:"!Qjl71j.-^Q<R?_N9BPs]FMkb$Tac9uBOQLV/4]T?BD1JP`IOUQ
%<Blj:qnho;CJ:Og=I38h7%3udFG<:bE>$-u(WnH8^0%sHKTd5pp,2fF6T>9EU5\Gk--VHF>Y:n.DAD-7-RJ_odDP=!M-,M'-Crsu
%q!/H2;g4r*$.PU?q8,8_T6`G!j6]o8O'NOr!hZKVFB(5ObF%;Xip<R7G?_5)[,N6J^f_Iu*9d;`BfNg]if^DiYZbMi`c>>H'*jF$
%jJiRt_5(V!V((U2pWmj;)m'eha'pYGL<mlkb3QdKL+]U%95Ebh8]c(=,k77'L@Nbg#sMZnZE_^_N!:.\1p3uh$peOF,bor-r7UAf
%B*Bbn&X,-;PBI;BO:u7&V&d'mL+tb4m;N^7A6i?_Qa6$<Q?AP7UAn6!/s3Y$F%S^R=[V8?W#Je#TW">f>js`ujM2:93_B1L<eS<P
%$.1N;ipX.BO<JRNbD*\I!fppPSi*IFe4mRU+&N)H,ShIg[Z#j2)cIGNLg!L&6)RljoKiV>=b*r<W3;mq>&UAJ=6b+:M`ms8.;&t@
%N+0b>+9nGoFS(,+Bkrr&Vc9[*,t4[53?jcbW!7*s)5%WpU6lfgSq1&u($ok??n\(-hd!uiXWf"^Qre2k!+:-/na_$ud?tiKMgoe\
%_Ld/(ob@`mAQ=SKP9;LJNR@hNa"ZD!6-'L7H7@m'@i9LT7/U-.\--m-BKP(*ak<2?nO;7%k="M:%:dt%mK+kJ]Yfo+-2-Z^"fk[C
%(ne56o/]O\o_T$h#FpWe^^c>mbR/B[%!'Tq6#IWZ,%W4c0p(,o&,%l@-^<A<[9a4.9>Q$*\:9@n:1@WU_:X"qrf[uM_dX>Z%>%f:
%,fOQaTnq/?X['f>,ojfJ(9Bp@=a[TU+Q3Oi]G,>"Z%0IY^AjZ*S?[=9`;"Q`IO=3*:GVCX=hS`dRi72hP5(P9BU^1q0R6QVQL)-\
%?.aqWc-W-/;K+2AoZZ82V:U.b=gs&gBN6dD<[X^u@^1`b`96eI*^_@D+,ii:`?ehO[PCb74n[$-#aXmtW^KA.piLA*oj18^hcQ=S
%R]F361hX&:@)WQgV>]rZpos:&RGZ?iJuT2W*V1$0a^4!!:QLsN8TQLMKV:_QK$>4#Kias`c$=g`,W*WS'RK-R3`K:EOSBf&/c7^u
%o6)nQ?"rW"K];@8RJ.e"DJP12%#5))g*V&=2$3m,9(WQF"2hD*23t#t%HMo!K,8MBF\lWiqO84a?We77@hDBOhR_f8ZV&>UNP+t1
%ej8GHPFR3kAQ?!R&d&V'3(s?/JVRbi#,oUM$F>hRm+[-3'3ge#jtCBO<We(-a"HsPDN3R^2062oOaJiGIF\[18[:q9DiLRc?<SSg
%Yr-Rd>Q3d981\SqXW@0'g9Xm+$Dm3@QnblHAq>b,Eo+U*lR1@KR\/)TFVh^.)%(bMDo%2EXinSGK,14hUjHl""'LSdBRiY:R-Rhc
%@&f$6rDA-+6k",ljq+I1BJD8^bQF)4n7S#eMd^^W$:%IFH=I[SEtIsPL?]E4H3hu)-k7?XPO@WkCQ>Sc8Ep1]o#ZD&loEqtTS*;Z
%WGF+^O[r/D)5I@V?k6tY"r2Y@d%ErbeH7uDmnt6<+ETpgY>m?>\S!V43f#fgaG91QQjnrLaI1<clt!1`;(E:qK6gPWlOqd'&@RFq
%EtuG`60OlT_u3a>`,$2/.AK2&)JHq)0$c!?6fP/:.6u_IG\p-.V6[q4R3?ieO;s9]f3b?_MDX@d[U!o$iHPWB#1>b0*ItO/KI3ho
%3s^@6fMrfT0RUhcq`(H(H0$0IG1H?W+N.^tPI?Kj=hi/-T]<kM\Y>%&IA>?&4bL5C_U/E"%:)e%6#P'92O)qtCePE@7Y?[5dqbpC
%#c:=jXNpp<K#fcPJChgN<*SQMa.7;3$@-;Blu?I("66<`b<Vit0Z(4%L6bD$$1#q@-ru!s=2hES:p)Nu2;[u3(*C0J+eg0n!/^Zs
%0Na,\G/jR`#`T]I)C@RV`\E:rn1F<#0U!`^@@'os<]Z8p+9N!T[n0FPk$T;LF"ir>2Mm)aTk(P*"to5*N*nPrI;D6laRMhh-O7:t
%b`G(JAlp/q1X&K^XP?D_8k8(Jh968'UW(/!,*7i\GZ*cc8;g;*-3i$*l][>H(eVgWbbZO88$KZol%jcK8Y:)M\^*Y-#g:"s<KN4Y
%'M?CS%&IGDVU?%pY_`db,PE>t7Hm@[,712V558)<%ZmGR3e@ro$'/5O\M>jLXpiOA95k(+C2LaCclQk0c&1:&(bg7K1)D;414BEi
%GNDZ:?9&kl<t9N\'<##!dfc`SrK'G"JA\V+P,OZ]b6F5OfDn2=%MP59-.]ZC@6#0D=:Sp_-:"n1g^hS1LH6:\<T#Q^DcCckYT9Tg
%&i/#=LZM@J@6#0D=9*XW'CO:[TPh"VJcp/1@b=t?k8Q^lD"O=<#3f")@M4l#U'sXB`N(4e#)6"tRYqfU`@s-q"[Zs#-Bp25!5WJq
%Zfs2qgL#\5BOUU6W$=fO,=O"TPfl@PGI+i\/-Q\"3q+Tj,E=5/&Vs7;mXtXUT]o?5C&pO.$8dc_8&_^BTe^9behgsR!".XAW#WVn
%U7<uo"rQ227tMu&"g'G;bK@Eaa3J5=Ff:BE%PS]1O`#[V1r&9rM+Wl&`8.Hu0&T9^%'k-E@9d.p0EKo2j*_'-G,)>>8]4,9JB)np
%XHq+RTXOBO.`U]R'?Ss13(AF5g_V$-T&WG[SWX]*%V[[C'1Q:sJ7('r;(3N-C4U-#=@rdg>+f%$Pn8f:ZA698%_`>E,#K0`O<U`6
%IoERP2Ma,RNCh&B+Y;&@iR@@Q"jjaheNsfp6ut%6&2Ms60t9(qZ8('JdTsla&5JD)[lE37Q)pX#WCi;./63B+R%)DRm2Ubp(go&!
%8n*s>"].EMJs.=!K$<Y-<k@*J!QtfQ&nM(GR12Oq)H5Q32_>s!A:Tb5kVCKGTZ18&C_3W+fFEbt)!@+L;.XbN5>4?:Bj/8cYlq0k
%9BjnL@k$):MSL?".FQ`-(oHqjDF%cQf@ZS!,p8Y_bk-J5EU__>5ftC&L=sE+Z`q3$,b<s-U26>0.kQK?E4iQ<<=+lo3?iEZECZ]2
%`2.3W=BH;04_(-7k5&KMj[$OdUmY/C$)pro+t,1;6<5TiD.7IXEWe3L7ieho8E<%kXlL8Q.&oqocs"@bWl,e*JNh\!Up*0OZt6d)
%Xu_K/S9)d2#.:;qk*TKn[Beml>Z29E;[&$\W5up4?,m2A(L6Uu$Jb53MYEk]k#N51$%*l:+Sgp<?>=W7p@I`!fIu#,8KWgMU6RKZ
%[q]K&%4%U"Y6?L#Yj"[[d6Kr:(i<teJ`>8rM=uq&N/eaa!'Gc;BEQRLBR?l@LS,@Nh;/R9p(\Y+48fB+T>@uZf+X=OTXG7[Bh=d=
%GVM/E`bJZ68d(XER.OLMJ.RJZ)H'J+9[^K_7-_:HLq(2/I1]k`.Uu'!E/_#a!^#D9BONV%da/8_]#qgW"(UmPJG6;PXNUr;3La;D
%k5^>n[_rb1"2h95E;cjh`sU:UQP<o3qGFUqSRr&j9'F#(Qk^OM%](#"B*k.n3'o#pJBa<)HN?FMnGFO8WB,EM.<1QKd3V3aCbeaP
%)skZX6/>s'g2>GhRA*"A"t-QlNIeuAQSa;B"0"!V=S:&JR8(#<:_Gc_CS'o4j?TqfOFtB`5n7N(#+-ROE"S77ir4W]$u%T_EFGC9
%_['>9!\'50Upt8lK2a2b6L'4sHmR1m!6!e@:gGF*2$f:[f-&+c?%W.L]*;BNYq"BNTPh!$(Np8Y*XB:]-,V-8WH^Bp:.]>SjB-;M
%A6<Gn?s7mpMnl?S:gPE!(!R8.quA>$.?`b.Cif1m5VhpU^qBJo81]nYWVM,$U*l!(o0\+_&:s@;Dbs!JF5nK8!okL1;r^6.YE,\.
%[46-KPg1a84r!F<;L[L;<-Tl?=`/Rs5]1o/:i9h%pqYc$_nb'u#XE<R+MoZm^Yqlol>2''q17XYZNap&@53IO9BMO1JE3"d!.)h@
%W`$2ilR`Y6K;/5MJ`VIDiT-Q*QA:'GW+5B:]]G8#J`W#HRH9!B0hSmH)&,&&c>DH6!`#<KiT:kM0CpC+)]h#()]f$GgDC$NUpuL#
%\A3jRHp\`hZ[jR@d[_2h+e3%ne5<%APSjN,?ZY"9OJ3^&Kj3E+E]!e[*/(-Z(fi>^Pd&Fm.+T[5[(P;k_+T'1&k2O6T?$4qTO8hY
%c`up8)M8^)mdDrXmhE>F=@n-.%>;1l<=EV:(/-)%V2ml89da'#?oi"aRnecikH52i'8#/tfRi>jlOp<fS"!/FP#&r9dg6UU``->,
%%JHnl+=k+H6i4$;L<[O9FYHf8+.ubkL.!,^[;Yc\&W1..o-FVLoqRG_/K]_%XX7^Zp324$[g8?f_4m!]]_&fh3>1\m"CSt@P(S5X
%7A7"p_W8<^b+`f@)`7BY$V&Bs"QpubI8Qf2H'7X1j@I#^&n$1_"VE?AWM89uTh_l0Ta!ECR#(0%($LtAZZs=;$Ncu27BlHJ6c%>H
%%]3G`(o=7BGK"8+<<@3)Tt1U)?3[;g>X%XI3p@$\?DnY66,&V8N<+Zi*5i><)eefEQQ4,V?32\8H3ljOoqH,#7)#LLSPU#f($rSD
%]aZl+#"DFp`\?EpfYL.ql3Y8]m)d)fma4"@`oT#Kp5B3l/u:WEaUK>OdE\P_K7`"mZc(pZ:Olu1:Om`.#8+t[WmpO3UkL@3U#Dc?
%)6cl!h"4HW6MW&Rb9mAn_^E?"]*GYl_TW-`%LpcW>HiH2pqY%j1+7mTNcC6CL/3ijQ;<%m<Xt-DAX,P42gfYigH>g]EZ_tXK7-aA
%g(9W73,+\amq'IO&X#!@Al!s<AkrDQZ\PQtkdAY$_(KC^`"1'5U^jk%HZ/Vng'94*G]*6987;/P?tT+/>q-/)=#=bOBNm<?E9=Ne
%_[$L;?$u?%2g[;*[sE'C2fJs;8T?&M&4YL\`>p1/E![u;B>XeT(4qu%`oVB[KI4'')1n6`Lb(Q.jBtaHF7`pO1CV2aA'u5Nn@9kP
%0a,E#43`Xg.Kr+41[qjOkAHA-:d2gJ.X7u>aRDkb!H^p&elO&Q4[\sE;So%?[$1n1[0FA("qG$k830SE8^9W+Ui[$PK*gP#XMC&i
%cBej"eZ`rm.0hpSVur:^>Y..SapC[>1PRg;;UCCMNp.*3"Yi!'_Ddh`ZUY#?EWeiV,d"6i'-tqt'S`EHSPG@N.PW)]L]CQe]9\&V
%ZMp.\J)#8\MU%H<3==,`3[hNB55I;K%>\%_Dm=GH=.l43aENClKMsli-fDuU%@Z4lbI1hm:]h`^.6\FT#F+ta*"?Wg#K5$]-$nU8
%Ha0DHnCX:"o^`q&Z'I)uh_59cMWo4J(s(/2i>>q^4$0*%7FJ[+)87(7AcJP4'$R3p<HudD#+_l]%O'b[-BJ9C*ej(\9')ZB+Tn#U
%"_K-e($ngl]mr!RgqdFW,3d%phI*H&*sSCDYmA^F6V4`5ZKE'M`HZua`m;KQ&-e(Tm&,"'L;#%9A_ekHGB@tDdO13FK!)_iNKBa9
%<7+I_5pueAP6WLT%hAFU65JqCR&lhYKa'PLT>T@knH&Dl(?Po7@#]h\-W.^MEcH0a&X!`bEWODhYjQL$OTZacncD>o5YqcYk#8$8
%QoKj2)bi`AHoP(GLJ)m"5a@F$#&+fm!t[IIdLR`\M7ZXih6D'VPbBpQi?TG4E_M7M^l98mM3apH0,$D[=aD;)R7(b,B`O1*4@&k#
%noXMgTsXrjp8(gDDa187\0`-aPVo7K!D&^]juQ18JE!p^EC*==J8&GM&G-=3WZ=%5*ei8mV2*T@:5^+S>UKiZHe^)AkYOKtMW7CX
%>%u%#3+!%8RS_pig1Af_@QHbGFYG0pnX=*b8l-Z8PX=513BBPW=>ZU\T-_J'8Y\?ITq)dgJ_@t\UH_\j!@[S*DnnVLXC#4E?q:fd
%=*0*4NWqNjmoDFe=ARmpbL'4oMLn,?8JgLe`^>M.g9Fk6]7:aF93:NZN7!!S)"fBs2Z^;GhGnS;5u<ZgR'8JNU)9pN+Li!oMk%N*
%5kH&+TjV,"G;G>;3@<It7_)uW!gu`W<RI[e7OB$;']oa]kN"[b&j/;#&U0W(50P_9!Y?ukef*9!LC"Ug>RIp="ZHIHG#tV/3K)4r
%8ge`a^0ZSV;V!dA(o+27r03R5`G,mHN2?q<8"b3\_m_\g$81Qd0TJ)k=THhtn0HM^YTTNPEoV9iL.m=-#,]<sV4:%qZV>,/SAi.W
%gh@aZ"u']2T@t7S*0\/O"n2`+F]4E1Hj#2E`ejh+8@HN,831s4a2QH'-r>^GN[JAs(D`s>KE_f`A-(`nUl?t!(r2Y<)Fge[egAN!
%^GET1/`l]?jT#KO@LDE4QNO-9ft+['6Sr/l*7%Pn`eL6S%:GkTZr]-g%>7="ZZ<G.P2s"ICA`,"_?XZ7BNU[5DRP=oiIE2npTZn<
%LF_GPK%%V7'2.TW*/t=VK^_D2D.m*o'UE^>E%.Na1T<-f"o-RaQ`N%"+@*?2V04T;1n.gqC"uV)lD/L`BNJDk#dT2(.kq;!W7c#_
%"X$?#f+Wj"o3Toa$j&^C0fh/Y<uhHLkWj]R8/HTs)J07+48=.&@@@i<.17<S%(0f'.>X#pqS;e)"XRY0%ZfZLX:Aj2_[k>/_C;iq
%aqB7W(B,%0!LBWnQiqPl#Z0dim[cGliDH%!94>JHXeq<G&=i.+D?#8;mcb@^E/Z4;6;6E/(,d[FL_T`YU:&EuQWPj[it<c?$JC3Y
%lGE\'B[chXYNoFoj+r77\i9C+]^aE>DlK)>3"Tao(<JTGPJIRDFr6!fr-dj2ku#p)=o)7cem"uNX.IP`HWnjUoODmB/&r1r=KBeT
%<::I6;[KEr=D&PQ$=](s7:G#Y3og8Om;e6=ZY%\56q[#Jr^j;Rp*07W^+D+'E7BF[(\'5a8S.X"`:'APW!6Wq1I%MYL]^n4>T_Rp
%I,"Ij*)NJHLeCaOo(6I+`.b)p*_-$s,.]')Punj.])1"Rf\mglmgQ$@`/R</fsW&%'D<okomq<\lFNSr%Pk,unP62m/7>C9R<@7q
%IScJ$3Qk3a]9;+BX_V$pe7d3m[geh\@%dnl&B2^f+2h<S%M>oSg\9'Dk2jAo6ts;+g*D7M]uiSlDU,Zr6q;9sFghX?SX)M"#+:kY
%MOlr(\'(;e%<-6"):'`\gQO9c@,eL(7TlOE.U*k_Am-5RQI9I:EDoC`rZIGH(TAl0Sl!a<([0LE<QXB&=kgO-F*_GNf;j9J_pKl1
%!FqXb\-^*FDQm+qK_XgN8,X"3nT1SuAuH':&Ftc'FQT$%\J8]`<Gp@?1s0<EZ"I/8\jKL<8KQ,-4!fOBRi8@TZiH,IFUQCSH"p_d
%`[6><28mHC^<Wla_"g8_(+%<F!#'rK)@!Z1UuVn:3g#&`$gu>*YhRbIUY*_JQ8cu),:&#jg*@1",/-IaiZOss4b5Ds6%mn1P<qP\
%,_\M6U2,_][`",b5P><",/SnSTm]":;M.^TP#7n?S+FYWqF<-*]hXinH4qkh]e1iuBuSd,@C8,Cq.JQB#GAn#7Smb.ZO3\n(0RI<
%7&1$b#MuQk#N5(mGa099)2:!RQ/H@u3,gmB!ET_Q/P"@R<7S*tS,.aKqSZI7T#HVVd\7l!Op2UB(E+RBOt<IYH>EM*nj.;iQ.h*_
%E^4r&0@I923]I6#OlZToaq5";*mJ-9q"pjA)I-otR(6p=Th6^NpKYY9#-0cFdb1W<a("-6OUkstPbn6gU>N=87%cGm92ps)p`oBn
%00lqNN$:t>oUN'G<bi^gXOg=qL'4:"L]lG`aY4R^H\k$n9F[^*YkV?,V*hj]<,c$M>ekMgL_2ajeAY&q/GFhm!f@eF6S?l4MU3-0
%EgE49Z;d/sb,18_`<*%V/"..!,BuVDpYl]>_,YcPJU9:pTgbOhZW."#10#E*LTmrp%8,><@qq@+P7(8WdG@s1([%++cDkCYIX[g<
%TIkn"@h;\d4)m@m#[)lVekp5'U=M=mi1k*3!nE^.Vq<1dF3[Zgb9gX$>Y@$oQ8B5J-TO;?e,bTj5s2kDZF"uongKc6r$a^f;R_[/
%/F>ljg;o723g/G].;L$NKC$!=<[M->*,Z=r#>:4lD%L,e"2g6C<A-<u2sGjO89bC!_SRL$P"l:bC(_PV(Kp2lLj*Gc4r';BYtjH'
%QptHDk<$/fZZsJjr4_=*&+SuGbI;Wgmr5qO,B3NopN61Xh#7"n3*orT^$Ye=DK[Zdq!>iU(]E[^l$.IMrH^T]]R>;.$\D&8_sQjO
%a7n1errIGjYMB~>
%AI9_PrivateDataEnd
