%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Adobe Illustrator Artwork
%%Creator: Adobe Illustrator(R) 26.3
%%For: Maksim Kratkovski
%%CreationDate: 9/16/2022
%%BoundingBox: 0 0 1842 1105
%%HiResBoundingBox: 0 0 1841.1384 1104.9864
%%CropBox: 0 0 1841.1384 1104.9864
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 26.3.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 26.3.1 x1103 R agm 5.512 ct 6.513%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 80 8%%BeginData: 9552 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD84FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF
%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF
%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF
%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF
%FFFFA8FFFFFFA8FD05FFFD7B7D52FFFFFFA87DFFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF7DA8FFFFA8A8FD7AFF
%7DFFFFFFA87DFD7AFF7DA8FFFFA8A8FD05FFCAA7CAA7CAA8CAA1FFA8CAA7
%FFA8CAA7CAA7CAA7CAA7FD3DFFA7CAA8CAA7CAA8A8A8FFA7CAA8FFA7CAA7
%CAA8A8A8CAA7CAA7CAA7FD07FF7DFD04FF7DFD05FFA1CAA1A77CA1A7A1A8
%A7A1A1A8A8A0A17CFD04A1A7A8FD2DFFA8FD0EFFA8A7A7A1A17CA8A1A8A1
%A7A1CAA7A07CA77CA7A1A1A1A77CA1A1A7FD07FF7DA8FFFFA8A8FD05FFCA
%CACAA7CAA7CFA1CFA7A7A7FFA7A7A1A7A1A7A1CAA1CAFD2CFFA8FF7DCAFD
%0CFFA8FFA8CAA8CAA7A7A7CAA1A7FFFFA0A8A7A7A1A7A1CAA7A1A1CAA1FD
%07FF7DFD04FF7DFD05FFA8FFA8A8A8CAA7A8A8CAA7A8A8CAA1A8A1A8A8CA
%A8CAA8FD07FFA8FFA8FD0BFFA8FFA8FD11FFA8FFA8FFFFA8A1FD0CFFCAA8
%CFA8CFA8A8A7CAA8A8A7FFFD04A8A1CAA7CAA7CFA8CAA8CAFD07FFA8A8FF
%FFA8A8FD05FFFD07A8A9FFFFFFA8A87DFFA8A8A8FD0BFFA8A1AFFFA8FD09
%FFA8FF7DA8FD10FFA8FD05FFA1A8FD0CFFFD06A87EFFA8FFFD07A8FD11FF
%7DFFFFFFA87DFD05FFA8A87DA87D7D7DA8A8FF7DFFA87D7DA87DA8FD0BFF
%A87CFFFFFFA8FD05FFA8A8A8FFFFA87DFD0FFFA8FD06FFA77DFD0BFFFD06
%A87D7DFD04A87DA87DA87DA8A8FD10FF7DA8FFFFA8A8FD06FFA8FFFFFFA8
%FD17FFA8A7FD04FFA8FD09FFA1A8FD08FFA8FD05FFA8FD07FFA1A8FD0EFF
%A8FFFFFFA8FFA8FD05FFA8FD13FF7DFFFFFFA87DFD22FFA87DFD05FFA8FD
%08FFA8A1FD07FFA1A7FFA8A8FFFFA8FD07FFA7A1FD2EFF7DA8FFFFA8A8FD
%22FFA8A1FD06FFA8FFA8FD05FFA7A8FD07FFA8A1FFFFFFA8FFA8FD07FFA1
%A8FD09FFA851FD1CFFA851A8FD04FF7DFD04FF7DFD22FFA87DFD07FFA8FD
%06FFA8A1FD07FFA1A7FD04FFA8FD08FFA8A1FD09FFA87D59FD1AFFAF597D
%A8FD04FF7DA8FFFFA8A8FD22FFA8A1FD06FFA8FD07FFA7A8FD07FFA8A1FF
%FFFFA8A8FD08FFA7A8FD0BFF847DFD19FF7DA8FD06FF7DFD04FF7DFD22FF
%A87DFD07FFA8FD06FFA87DFD07FF7DA7FD04FFA8FD08FFA87DFD0CFF7E59
%FD17FF59A8FD07FFA8A8FFFFA8A8FD08FFCAFD0DFFA8FD0BFF76A8FD0EFF
%A87CA8FD05FFA87CA8FD0DFFA87CFD0DFF847DFD15FF7DA8FD08FF7DFFFF
%FFA87DFD07FFA87D76A8FD09FFA8767DA8FD09FFA87CA7FD0FFF52FD07FF
%76CAFD0DFFA876FD0DFFCA7D59FD13FF5984FD09FF7DA8FFFFA8A8FD06FF
%A8A1CAFF7CCFFD07FFCA7DFFA8A1CFFD09FFA8FD10FFCAA8FD06FFCAFD0F
%FFCAFD0FFF8452FD11A852A8FD0AFF7DFD04FF7DFD05FFA87CA8FFFFCF76
%CAFD05FFA876FFFFFFA7A1A8FD41FFA87C5259537D597D537D527D537D59
%7D537D517DA8FD0AFF7DA8FFFFA8A8FD04FFA87C7DFD05A876FD05A87CFD
%05A87D7CA8FD5FFF7DFD04FF7DFD04FFA77DFFA8FFA8FFFFFFA8FFA8FFA8
%FFFFFFA8FFFFFF7DA8FD5FFF7DA8FFFFA8A8FD7AFF7DFD04FF7DFD3FFFA8
%FFA8FD0FFFFD0AA8A1FD07A8A1FFFFFF7DFD07A8A1FD09A8FFA8A8FFFFA8
%A8FD32FFA8FD0CFF7DA8FFA8FD0EFFCF527D7D7D597D7D7D5176597D597D
%597D5276A8FFA7527D7D597D597D597D527D597D597D597D52FF7DFFFFFF
%A87DFD15FFA8A8A8FD0AFFA876FFA8A8A8FD07FFA8FFA8A17DFD0BFF76FF
%FFFFA8FFA8FD0DFFA8FFCAFFA8FFFFFFA8FFCAFFA8FFCAFFA8FFFFFFA8FF
%CAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFFF7DA8FFFFA8A8FD14FFA8FF7DA8
%FD0AFFA8A7FD0AFFA8FFFFFFA7A8FD0BFFA1FD06FFA8FD33FF7DFFFFFFA8
%7DFD11FFA8FFA8FFFFA87DFD0AFFA87DFD05FFA8FFFFFFA8FD04FFA8A1FD
%0BFF7CFD07FFA8FD32FF7DA8FFFFA8A8FD10FFA8FD05FFA8A8FD0AFFA8A1
%FD08FFA8FD05FFA7A8FD0BFFA1FD18FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FD09FF7DFD04FF7DFD0FFFA8FD06FFA87DFD0A
%FFA87DFD05FFA8FFA8FD06FFA8A1FD0BFF7CFD07FFA8FD10FF76527D5259
%527D5352277D5259527D525927585259527D527D27A1FD07FF7DA8FFFFA8
%A8FD08FF7DFD0DFFA8A8FD0AFFA8A1FD06FFA8FD07FFA7A8FD0BFFA1FD08
%FFA8FD0FFFA8FFA8FFA8FFA8FFA8CFA8FFA8FFA8FFA8CAA8FFA8FFA8FFA8
%CFA8FD07FF7DFD04FF7DFD07FFCA7DA9FFA8FD0AFFA8A1FD0AFFCA7DFD06
%FFA8A8FD06FFA8A7FD0BFF7CFD09FFA8FD30FFA8A8FFFFA8A8FD08FF7DFF
%FFFFA8FFA8FD07FFA7A8FD0AFFA8A1FD06FFA8A8FD06FF7DA8FD0BFF7DFD
%08FFA8FD31FF7DFFFFFFA87DFD07FFA8A1FD04FFA8FD08FFA87DFD0AFF7D
%A1FD07FFA8FD06FFA876FD0AFFA87CFD08FFA87DFD09FFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8
%FFFF7DA8FFFFA8A8FD08FF7DFD04FFA8FD08FFA7A8FD0AFF7DFD10FFA8FD
%0AFFA7CFFD08FFA8A8FD08FF52FD0F7D597DA8FFA87D7D847D847D847D84
%7D847D847D847D8476FF7DFD04FF7DFD07FFA8A1FD04FFA8FD08FFA87DFD
%39FFA87DFD10A87DFFFFA87DAFFD0FA8A1FF7DA8FFFFA8A8FD07FFA17DFD
%0EFF7DFD62FF7DFD04FF7DFD07FFA8A8FD0EFFA8FD62FF7DA8FFFFA8A8FD
%7AFF7DFD04FF7DFD51FFA87D7DA87DA87DA87DA87DA87DA87DA87DA87CCF
%FFCA76847DA87D847DA87D7D7DA87D847DA87D7DFFA8A8FFFFA8A8FD52FF
%52847EA87DA87DA87DA87DA87DA87DA87D7DA8FFA87C7D7D7D7EFD077D7E
%FD047D52FF7DFFFFFFA87DFD53FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF
%A8FFFFFFA8FFFFFFCFFD07FFCFFD06FF7DA8FFFFA8A8FD7AFF7DFFFFFFA8
%7DFD10FFA7A8FD35FFA8FD32FF7DA8FFFFA8A8FD0EFFA8A17DFD19FFA7A8
%FFA8A8FD17FF7DA1FD14FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8
%FD0BFF7DFD04FF7DFD0DFF7DA1A8FFA8FFA8FD14FFA87CA1A8FFA1A17DFD
%13FFA8A176A8AFA8FD08FFA8FD0AFF765284598459845984598459845984
%59842EA1FD0BFF7DA8FFFFA8A8FD0BFFA87CCAFD04FFA87DA1FD12FFA77D
%FFFFFFA8FFFFCA7CA8FD10FFA8A1A7FFFFFFA8FD08FFA87DFD09FFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FD0DFF7DFD04FF7DFD09FFA77D7DFD05
%FFA8A8FFA77CA8FD0EFF7D7DA7FD04FFA8FD04FF7D7DA8FD0CFFA87CA7A8
%FD05FFA8FD06FFA8FFA87CFD26FFA8A8FFFFA8A8FD08FF7DA1A8FD07FFA8
%FFFFFF7DA7A8FD0AFFA87DA7CFFD05FFA8FD05FFA8A77DCFFD08FFA8A77D
%CFFD06FFA8FD07FFA8FFFFA87DFD25FF7DFFFFFFA87DFD07FF52A8FD0EFF
%A176A8FD08FFA852FD07FFA8FD08FFA852FD07FFCF767DFD08FFA87DFD05
%FFA8FD04FFA87CFD17FFA8FD0CFF7DA8FFFFA8A8FD07FFA8FD10FFA1FD09
%FFA8CAFD11FFA8FD08FF7DFD09FFA8A8FD0BFFA87DFD15FFA87D7DFD0BFF
%7DFFFFFFA87DFD4FFFA8FD06FFA77DFD13FFA8FFFFA876A8FD09FF7DA8FF
%FFA8A8FD4EFF7DA8FD07FFA852FD13FFA8FFFFFFA1A1A8FD07FF7DFD04FF
%7DFD4EFFA17DFD07FFA852A8FD11FFA8FD05FFA8A17CCAFD05FF7DA8FFFF
%A8A8FD4EFF7DA8FD07FFA77CFD08FFA8A8FFA8FFA8FFA8FFA8A8FD07FFCA
%7DA8FD04FF7DFD04FF7DFD0CFFA8A8FD41FFA8FD06FFA1A1FD09FF525959
%7D5252597D535252FD09FF76A8FFFFFFA8A8FFFFA8A8FD0BFFCF7DA8FD47
%FFA1A1FD0AFFCAA8FFA8FFA8FFA8FFA8CAFD0AFFA8FFFFFF7DFFFFFFA87D
%FD0AFFA876FFFFA8FD18FFA8FD27FFA8FD04FFA17DFD24FF7DA8FFFFA8A8
%FD0AFF7CFFFFFFA8FD0FFFA8FD08FFA17DFD27FFA8FFFFA7A1FD25FF7DFD
%04FF7DFD09FF7CCFFD04FFA8FD0BFFA8FFA8A87DFD07FFA8A87CA1A8FD11
%FFA1A8FD12FFA8A17DFD0FFFA8FD16FF7DA8FFFFA8A8FD08FF7CFD11FFA8
%FFFFFFA8A8FD06FFA8FFFFFFA17DA7FD0DFFA8FFA8A8A8FFA8FD10FFA8A1
%FD0FFFA7A7FFFFA8FD13FF7DFD04FF7DFD06FFCA76CAFD06FFA8FD08FFA8
%A8FD04FFA87DFD05FFA8FD05FFA87D76CAFD0AFFA8FD07FFA8FFA8FD0DFF
%A8FD10FFA87DFFFFFFA8A8A8FD10FF7DA8FFFFA8A8FD05FFCF7CFD08FFA8
%A7FD0DFFA8A8FD06FFA8FD06FFCA7DA7A8FD07FFA8FD29FFA8A8FD16FF7D
%FD04FF7DFD05FFA77DFD08FF7DA8FD06FFA8FD06FFA87DFD05FF7DA8FD08
%FFA17DCAFD05FFA8FD0DFFA8FD1CFFA87DFD16FFA8A8FFFFA8A8FD06FFA7
%A1FD0EFFA8FD07FFA8A8FD05FFA7A1FD08FFCA7CFD05FFA8FD2BFFA1A8FD
%16FF7DFFFFFFA87DFD07FFA17DA8FD05FFA8FD05FFA8A8FD07FFA87DFD05
%FFA8A8FD06FFA87D7CA8FD04FFA8FD0FFFA8FD09FFA8A8FD11FFA87DFD07
%FFA8FD0EFF7DA8FFFFA8A8FD08FFA8A1FD14FFA8A8FD06FFA8FD05FFA1A1
%A8FD17FFA8FD07FFCFA17DA7FD10FFA7A8FD08FFA8FD0DFF7DFFFFFFA87D
%FD09FFA77DA8FFFFFFA8FD05FFA8FD08FFA87DFD0AFFA876A8FD08FFA8FD
%10FFA8A8FD05FFA87DA8FFA1A1FD0FFFA87DFD07FFA8FD0EFF7DA8FFFFA8
%A8FD0AFFA8A1FFFFA8FD05FFA87DFD08FFA87CA7FD05FFA8FFA8A17DFD09
%FFA8FD18FFA1A8FFFFFFA1A7FD0EFFA8A7FD08FFA8FD0DFF7DFD04FF7DFD
%0BFFA17DA8FD06FFCA51FD09FF76A7FD06FF7D7DA7FD0AFFA876A17DA17D
%A17DA17DA17DA17DA17DA17D7DA8FD04FF7C7DFD05A87CA87D7DFD05FF7D
%7D8476847D7CA8FD08FFA85284FD047DA8FD06FF7DA8FFFFA8A8FD0CFFA7
%CFFD06FFA8CAFD0AFFA8FD06FFCFFD0CFFA8CAA8CAA8CAA8CAA87D7CCAA8
%CAA8CAA8CAA8FD05FF7DFFA9FFA8FFA8FFA8FF7DFD05FF7D84FD047D7CFD
%09FFA77C7D7D7CA87DCAFD06FF7DFD04FF7DFD3DFFA8FD3CFFA8A8FFFFA8
%A8FD7AFF7DFFFFFFA852FFFD79A87DA8FFFFFFA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DFDFCFFFD85FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 7.1-c000 79.cb7c5a1, 2022/04/14-05:22:35        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/"
   dc:format="application/postscript"
   xmp:CreatorTool="Adobe Illustrator 26.3 (Windows)"
   xmp:CreateDate="2022-09-16T19:09:10+04:00"
   xmp:ModifyDate="2022-09-16T19:09:11+04:00"
   xmp:MetadataDate="2022-09-16T19:09:11+04:00"
   xmpMM:OriginalDocumentID="uuid:C1BCCE1871B8DB11993190FCD52B4E9F"
   xmpMM:DocumentID="xmp.did:81b26d2e-c412-8745-9a98-326407c56b6c"
   xmpMM:InstanceID="xmp.iid:81b26d2e-c412-8745-9a98-326407c56b6c"
   xmpMM:RenditionClass="proof:pdf"
   illustrator:StartupProfile="Mobile"
   illustrator:CreatorSubTool="Adobe Illustrator"
   xmpTPg:NPages="1"
   xmpTPg:HasVisibleTransparency="False"
   xmpTPg:HasVisibleOverprint="False"
   pdf:Producer="Adobe PDF library 15.00"
   pdfx:CreatorVersion="21.0.0">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Mobile</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Maksim Kratkovski</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="156"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAnAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9Ga95h1Gw1Sx0zTtLOpX&#xA;V5Bc3JHrJAqR2rwo1S4NSTcrSmKof9PedP8AqVv+n+D+mKu/T3nT/qVv+n+D+mKu/T3nT/qVv+n+&#xA;D+mKu/T3nT/qVv8Ap/g/pirv0950/wCpW/6f4P6Yq79PedP+pW/6f4P6Yq79PedP+pW/6f4P6Yq7&#xA;9PedP+pW/wCn+D+mKu/T3nT/AKlb/p/g/pirv0950/6lb/p/g/pirv0950/6lb/p/g/pirv0950/&#xA;6lb/AKf4P6Yq79PedP8AqVv+n+D+mKu/T3nT/qVv+n+D+mKu/T3nT/qVv+n+D+mKu/T3nT/qVv8A&#xA;p/g/pirv0950/wCpW/6f4P6Yq79PedP+pW/6f4P6Yq79PedP+pW/6f4P6Yq79PedP+pW/wCn+D+m&#xA;Ku/T3nT/AKlb/p/g/pirv0950/6lb/p/g/pirv0950/6lb/p/g/pirv0950/6lb/AKf4P6Yq79Pe&#xA;dP8AqVv+n+D+mKu/T3nT/qVv+n+D+mKu/T3nT/qVv+n+D+mKu/T3nT/qVv8Ap/g/pirv0950/wCp&#xA;W/6f4P6Yq79PedP+pW/6f4P6YqiNB8w6jf6pfaZqOlnTbqzgtrkD1knV47p5kWhQChBtmrXFVt7/&#xA;AMp9o3/bK1T/AKidPxVPzWhoKnsMVYxL50kiVTJp7Av6/ACQGv1avqb8e1MoObybxh81OPz4kkEs&#xA;yWRPpRiRk9VakGQoSNt1FKk4Bn8knT+aIvfOcVrcGFrRjSJJORkUDk6huJIrsA32slLNXREcNjm1&#xA;e+dIrWdYmtTJyhjlV0kUqWlQuqg06bH4sEs1dFjhvqhn/MCFUdvqT0RATWRR8dUDL06D1Bvg/MeS&#xA;fy/mmujeYv0ndSQfVWg4QxzBnYEkSqGHw9f2uuWQycRYTx8Iu04yxqdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdiqhf3L2tlNcpH6phQv6deNQu53oe2CRoWmIs0x2788Nalll09g6BGb96ONJFDJRuPep&#xA;+7KTnro3jBfVUt/OiTzRIlm3GW5+rV9RQVNerggUJpsvfEZr6IOCurofOsUt6LYWvANMIUkeRVBB&#xA;Lry6eMZ2xGbeqU4drtTk8+QJfTWf1NzJDL6TnmKbS+mT0+RxOfeqT4G12pwfmDbyrE4s24O3GQ8x&#xA;VAGRa0oK/wB4MA1Hkp0/mtk/MS3iVTLZOnIVUcwagqjr0HdXx/MeSfy/mnmi602ptdK1sbc2riM8&#xA;mDEk17ChGWQnxW1Thw0meWNaQWX/ACn2s/8AbK0v/qJ1DFXXv/KfaN/2ytU/6idPxVP8VYC9zHLb&#xA;rGoViYLmagIJX6yP3leLNt8ZC71BH0Cvwx+PNs8Q/jyWm5tbq7kglEkVvKIoJpEf00MSSARS0YVA&#xA;Mbg1+zU9elU4gVGUhVntLIxWd2gHqSwOETkWVRaxKyAKrPU8V4sxYf6org8IJ8aSH1aVbrVbl7q2&#xA;L3CvJbxxI/pmcRKwV4QSQCtCDUnr2wyxAmyiOUgUEx0Dy5o+o2rzsxYV4cUeqng6nmalmq/pj7Sr&#xA;8sj4EWXjyT7S/Len6bcm4tzI0hiEA9RuQCLTYbD+UZKOMRNsZ5DIUU0yxrSHUNZ1KPzTZaRbmFbe&#xA;4geSR5I3d+QDkcSHQU+DwyJlvTIR2tNBdTRELeRhFOwnQ1jJ7cqgFCfpHblXJMUViqGe7ld2S1i9&#xA;UqSHkc8IwRsQGoxYg+A9iQcVS231TUh5qfSLhoZLcWIu1eON0fmZjHQ1kcUoPDBe9Jra07wodirs&#xA;VUrif0uKqvOaTaKOtKkdSTvRR3P6zQYqo/UBLveOZyf91fZhHtwH2v8AZ1+jFUitbW2t/wAxJ1gh&#xA;SENpERYRqFBP1mTrTI/xMv4WUZJi7FUv8wT+ho109AQU9M1IG0hCE7lRsG8cBFpBosVnvI2mMoEc&#xA;xtyrFkqwP1JmRIqBm+Mh6nc9V2yPhhl4hQ0U9rcXM8k4eIwk30aNKAguHdWeLiSv2W3IJB+Q3I8I&#xA;MvFKKkhh0vUjdWoV5EC3ABYsp9WKZiAAaKpq3H4j823ojEAbQcpIpB3BtPrstw9v/pFxPxul5UML&#xA;DhMzSfaoOaUAHSjbkbgHCLtPjSqk70jyfo01ja3BMhrSQqrrwY/DseJfb92P2sAwRSc8kS3kXQ3i&#xA;WN/WbiWKsXqwBVUpUjoFQUx8CK+PJM9O0a0sLi6ngLmS8YNKXblTiSQF8AORycYAX5sJTJryR2TY&#xA;JBZf8p9rP/bK0v8A6idQxV17/wAp9o3/AGytU/6idPxVP8VdirsVdirsVdirsVdirFdR/wDJh6X/&#xA;AMwr/qmys/UPc2D6T72VEBgQRUHYg9CMsa0s9SRZjpSsQxo6yAnktsa138Qy+mO4qD1xVMkRERUR&#xA;QqKAFUCgAGwAAxVjo/8AJit/2yF/6ijkf4mX8LI8kxY5543tdJjO6SatYpIh6MplFVI7jIyZRTeV&#xA;HskaeN3eBfimidmkPH9plZiW2G/Hp4CuSYt2RE0k10d+TtFH7JExT8XDH7vDFUXirHE/8mLN/wBs&#xA;eL/qKkyP8TL+FkeSYuxVilp5u1ODzPeaXrtmljaM4GkXSmolTkwq7cj9oBT9leJPHfriAd1kQKDK&#xA;8VdirsVdirsVdirGPN3mu908JY6HAt9rUroFgI5Kik/EWHOKpK1oOQ8emJBqwoIuiyK1e4ktoXuY&#xA;hBcOitNCreoEcgFlD0XlQ7VoK4qktl/yn2s/9srS/wDqJ1DFXXv/ACn2jf8AbK1T/qJ0/FU/xVLd&#xA;c16z0e3SSYNNPM3C2tIhyllckCiL9I/V1IBjKVMoxJa0PX7TV4pPTR7e5gYpc2cwCyxtX9oAkb+I&#xA;OMZWsokJnkmKG1LUrPTbOS8vJBHBGKknqT2AHcnATSQLS3RfNdpqdy1pJbzWF5wWWO3uQFaSNhXm&#xA;lCaj8fxpETvZlKBG6d5Ng7FWFWUl5qH5l3hldTbaTAqwmOGRf7xfsySM7KWrK1OIH2TlfOXubOUf&#xA;ezXLGtDPZK2pRXwajRwyQMgH2hI6MCT/AJHpmn+scVROKsP1+a8sPP8AodzDKiQapDJY3JkhkkCi&#xA;JxKoV0dArSl+Klth4HIHmzH0swybBiHnSa8m1/y3pkLL9XlvEup0ELySj6q6spDqwRVNTXkvavtk&#xA;JcwGceRLL8mwQ2mWQsdOtbIP6gtYY4Q5FOXpqFrTfrTFUTirENUmvLT8yNLkiZVttRszazmSF3/u&#xA;nklAjkVlVWJIB5A9vHIH6mY+ll+TYOxVL9b0Sy1iya1ul94pR9pG8RhBpEogiix/RdcvNGvV0LX3&#xA;oNlsb5j8LqTRVLH7h92EjqGESQaLMMi2OxV2KuxVjnmTzObWQaZpg9fVpqKEX4vT5dCw8fAZIBhK&#xA;VbDmreWvLSaYjXNy3r6nPvNMd6V6qp/Wf4YCbWMa96e4GaQWX/Kfaz/2ytL/AOonUMVde/8AKfaN&#xA;/wBsrVP+onT8VTfUp57fTrq4t4jPcQwySQwgEl3VSVUAb/ERTbAUhimh6L5te4Gu6l9SfVLiNSkb&#xA;+txtkZf7uNSF4n4iDtXt3YtGMd7PNlKW1Dkq6p5f80XGoQ6rZSWNrqUPwtIvrBZY+6Sih5D/AD8C&#xA;Ex3sc1jLajyTn/nav+XH/ktk2CTXXl/zRfayl9fyWM1tbUNnZ/vvTV6CruKbtXpkTGzZZiVCgq67&#xA;oHmHVoU5NZQXluedpdx+sJI367HwPcYyjaIypMfK95rlzp8o1uBYb63nkgLRhwkqRkBZV5hSQ/jS&#xA;nhhjfVEq6JxhQ7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqlPmfyvpPmXSpNM1OMtA+4dCBIhHd&#xA;SQw9iCKHvgItINMcT8n/AC0i8Rc3dKk7mA7sST1h98kDTAxBNrv+VR+W/wDlpu/vt/8Aqjh4keGF&#xA;OD8nPLMMSxJc3hVehY25PWvX0cANJMAVT/lUflv/AJabv77f/qjh4keGEz8peQNA8rmZ9PWSSebZ&#xA;55yrSUqWoCqp3Y++QEabCbZJhQ7FUgsv+U+1n/tlaX/1E6hirr3/AJT7Rv8Atlap/wBROn4qn+Ku&#xA;xV2KuxVTnuLe3QPPKkSE0DOwUV60qcVQ0Gs6fNf/AKPR2F36X1j0njkSsQbhyBdVBHI+ONrSNxV2&#xA;KpPfa9Nb6/a6RFbLK1zE0pmaQpx48iBxCNWvA9xg4t6ZcO1phFeo8gikR7eZvsRyU+Kgr8LKWU/I&#xA;GuFiiMVUJr2NJDEiPPMOsUYBIrv8TEqq/wCyIr2xVA2+tTv5gbR57ZY2FoLxZVk57GQx8SvBaHau&#xA;xOC96TW1prhQ7FUh1zUL+LzHoWnW85gt7/619ZKqhY+jEHShdXpvkSdwyA2KaEahCahluox+yQI5&#xA;af61eDH2ovzyTFXhnjmTkldjRlIoykdiO2Kr8VdirEdQ0j8x5NVuZrHXreDTnP8Ao9s9ujsu5O7c&#xA;AelBuTgFrLlsp/ob8z/+phtP+kVf+aclbGj3oUaD+bn10ufM9r9V4Din1WP7fI1HH0q04035/Rkd&#xA;78me1eaK/Q35n/8AUw2n/SKv/NOSthR71TT9I/MePVbaa+163n05D/pFsluiM24OzcCelRsRkTbK&#xA;PLdFeY9N873WpQS6FrEOn2KRFZ4JYUlLy8wQ1WQkDjt9r6Md7T0QP6G/M/8A6mG0/wCkVf8AmnJW&#xA;wo96nLoX5qOVKeZrWMCvIC0jPLbbqvjgLIeap+hvzP8A+phtP+kVf+acNsaPeo3Wh/mu8VLfzJax&#xA;yVBr9VjFR3FTG9P+BwS8mUdjunNl/wAp9rP/AGytL/6idQxV17/yn2jf9srVP+onT8VT/FVK7vLS&#xA;zga4u547e3QgNNKyogLMFWrMQN2IA98VXQzwTp6kMiyp05oQwqPcYqsuJ3VlhiAM8lSvL7KqOrtT&#xA;sK9O58OoVdBZwxOZN5JyKNO/xOR1pXstd+K0HtiqRH/yYq/9shv+ooZH+Jl/CyPJMXYqxXUf/Jh6&#xA;X/zCv+qbKz9Q9zYPpPvZRLFHLGY5F5IeoPsag/MHpljWgfrU61suVbvmESQgbxkFhKR7KpHgWHgc&#xA;VRsMMcMYRBQDck7kk9ST3JxVj4/8mK3/AGyF/wCoo5H+Jl/CyPJMXYqxnXv+U18rf9H/APyYXIS5&#xA;hnH6SybJsEJd/uJUu12Wqx3A7FGNA3+wJrX+WuKovFXYq7FUBr2pXOmaNd39rZyahcW8ZeKyhr6k&#xA;rD9leKua/JTiVDF08++ZGRWPlK8UkAlSZdq9v7jDTEnyan8/+ZY4ZJF8o3sjIpZY1MtWIFaD9x3x&#xA;IUHyatvzB8yywJI/lC9iZxUxsZqj2P7gYBuEyNFU/wAeeY/+pUvPvl/6oYaRxHuQ9j+Yvmi5txLL&#xA;5NvrdySPSczVFP8Ao3GCO6ZbFEf488x/9SpeffL/ANUMNI4j3J35U17UNasZ7i+0qbSJYbiSBbe4&#xA;58nRApEo5pF8LctqD6ciyTrCqQWX/Kfaz/2ytL/6idQxV17/AMp9o3/bK1T/AKidPxVP8VY/5+/5&#xA;RW7/AOMlv/1Ex5GXJlDmm9za1JngAW7A+F+nOn7D06qfw7ZJipaTMl3E+oLWlyxEYPVY4yUVfvDN&#xA;9OKo7FWOH/yYq/8AbIb/AKihkf4mX8LI8kxdirFjHPffmEZI1VYdItoxcFyQzG5EvDgoBBA7kkZC&#xA;vUzv0spybBBvZSfpmK+UqIxbyQTAk8iS6NHQUpQUevzGKozFWNXRltvzBsZmUNDqOny2sZBPJXt5&#xA;PWYsKU4lWAG/XI/xMv4WS5Ji7FWMamJrvz/o0MSqE021uLu4dmIJW4HoKqAA1IZampG2QPMMx9JZ&#xA;Pk2CE1kkaRfECpFvKQPH4DirelX66hpdnfqpRbuCOdUJqVEqBwK+1cANpIpFYUMev/zB8laffS2F&#xA;9q9vbXcNPUhlYoRUkbVG+6kbYjdTtzUf+Vn/AJe/9X+z/wCRgw0jiDX/ACtD8va0/wAQWdfD1BgW&#xA;w3/ys/8AL3/q/wBn/wAjBhpeIK1h+YPkrUL6KwsdXt7m7mr6cMTFyaEDeg23YDfAdkjfki9X82+X&#xA;NGuo7XVL+O0nlQyxpJUVQHiTWlOuKnZBf8rG8jf9Xq2/4L+zDRY8Q73f8rG8jf8AV6tv+C/sxorx&#xA;Dvd/ysbyN/1erb/gv7MaK8Q71sn5leRI15NrVuRUCilmJJNBQKCepwHZIIOwVrL/AJT7Wf8AtlaX&#xA;/wBROoYpde/8p9o3/bK1T/qJ0/FU/wAVSbzRpF9q1rZ2lvKkdt9chk1JHNDJbRksyKeDnlzCHbj0&#xA;6+IItMTSc4UKVraw2sRihHGPm8lK13kcyN9HJjiqriqTXmj3j+Z9O1e1kVIooZrbUEY7yRMOUQQc&#xA;W6S7n4l+npgre2QO1JzhYuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVALoWlpdT3UUTQz3RBuHikk&#xA;j5kVpUIyj9o/fgpNqv6Mtv55/wDpIn/5rwod+jLb+ef/AKSJ/wDmvFXfoy2/nn/6SJ/+a8VUm0LS&#xA;3uoLqWJpp7Uk27yySScCaVoHZh+yPuwUm19xpGnz3qX0kZF4kRgW4R3jf0mYMUqhXbkoOGkWu/Rl&#xA;t/PP/wBJE/8AzXirv0Zbfzz/APSRP/zXirv0Zbfzz/8ASRP/AM14qoXnl/S722e2vEkuLeSnOGWa&#xA;Z0PEhhVS9NiK4kKCgbL/AJT7Wf8AtlaX/wBROoYq69/5T7Rv+2Vqn/UTp+Kp/irsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVYhd/l/Jcaxe6idVlUXZUiAoGVOJY7Et/l0+QGI2WW9&#xA;Nf8AKvW/6ub/APIpf+asNsOHzLv+Vet/1c3/AORS/wDNWNrw+Zd/yr1v+rm//Ipf+asbXh8y6z/L&#xA;6S21qz1IatMy2ta2wQKj1ZTUkN1+GnyJyJFs47WiPNHkiXXdWtb9dVnsVtoWh9CJVZXLNXk3Ko/D&#xA;Gt7U8qS7/lWU/wD1f7n/AJFQ/wBMnxMODzKyT8rZ5OH/ADsN4vBg3wxxCtOx23HtgJSI+a//AJVl&#xA;P/1f7n/kVD/TDxI4PMoe9/Ki4uYfTHmK7joytURxivE1oePE0PzyMtwygKN82RWX/Kfaz/2ytL/6&#xA;idQxS69/5T7Rv+2Vqn/UTp+Kp/irsVS3WPMOl6Qq/W5azybQWkQ5zyE7AJGN9ztU7V74DIBIiSlJ&#xA;sfMnmAE6i7aPpL/8eMLA3UqkdJZdwgPdV7Eg+ORonyZWBy3RH+JdL0iSHS795YzF+6+tyK7xKAaQ&#xA;iac1HOSP4qnwatMkZAMRElP0dHRXRgyMAyspqCDuCCMKG8VdirsVSvWfMml6SUjndpryXaCxgX1J&#xA;5CegVB8u9BkTIBkIkoC31LzLG51TVoorPTApUaen72YcvsyPJsOXIBQoH7W9OOIvqpropnV/Mmik&#xA;trkK3+nn4m1CyUhoa7kSwncov8y9hvucFkc00DyT+w1Gx1C2W5sp0uIH6Ohrv4HuCO4O4yQNsSKR&#xA;GFDsVdiqS6r5qsrO4+o2kb6jqp+zY23xMPeV/sxr0rXf2yJlTIRtCwW3mUSrrGrXgiWD4hpVt/cp&#xA;E20hlY/FIyoeW23IfD1piAeqkjoyTJMXEhQSTQDck9AMVS7TNe0/Ubi5toC6XFq3GSGVTG5XtIqt&#xA;uUaux/qMAleyTGkxwoQOuzavDo93Lo0CXOqJGTZwSmiPJ2DEsm3+yGApCQw6j+YZhjM2mwpMVBkV&#xA;UiIDU3AP10VFcmAGkmd7AL/0h59/6t8X/IuL/stw1HvRxZO4O/SHn3/q3xf8i4v+y3Go968WTuDv&#xA;0h59/wCrfF/yLi/7Lcaj3rxZO4Jj5YufM1xZ3LeYbSKzuluZEtkhIo1sKek7Uknozb1HLIN3ROMV&#xA;diqQWX/Kfaz/ANsrS/8AqJ1DFXXv/KfaN/2ytU/6idPxVP8AFUh8xzeY31DTdO0hhbwXgnN7qBha&#xA;UwCIIU4moRS9SPiG/bIyvoyjXVE6P5Z0zS2aaNWuL6T++v7hvUnc+7np8hTERAUyJTXJMUIml2oe&#xA;9aVRMt+6vNHIAy0WJIglD+z+7rTxJxVjOsaNq3l2yn1DyrI7KnxNokiPcwuWIBMSqRIp3LUU/htl&#xA;ZjXJsEr5sxyxrdirH9cbzLdaxBpenSCx0+S3ea61H0mkcMrhRFG1Qiswau+/cdMib6MhXMo3RvLm&#xA;l6Tze2jL3Uv9/ezH1J5CaEl5DvuRWg2xEQFMiUXqFkl7biB2Kr6kUhoK1EUqycT7NwockxRGKpBf&#xA;+UoTctf6NO2k6k27yQgGGX2lhPwN338d98gY9zMT6FF+WL7Vr7Q7e51aAW2oOZBPCqPEBwlZFISQ&#xA;sw5KoO5yUSa3YyAvZNMKGL3kPmXV9cv9ONw+m6HaiHjPBGyT3HqIGZUnYlQEYblB7HIGyfJmKA80&#xA;70rRtM0m3+r6fbrAh3cjdnPi7mrMfmckAByYkk829ZEx0e+EKGSY28ojQAks3A0AA3NThKA3pFxd&#xA;3Ok2VzeR+jdzQRSXEPFk4SOgLrxarLRjSh3wDkk827797JBadVmYtMP+KoxVvahcorDuCcKEDr2g&#xA;m/Md7ZSfVdYtd7W6HQjr6UtPtI34feDGUb97KMq9y7QdeGoiS2uY/quq2vw3lm3UH+dP5kbsf7CW&#xA;Mr96yjXuTbJMXYq7FXYqsnmSCGSZ/sRqWam5oBXbFUr0bzRpuqSG2HO01FBWXTrpfTnXv9mpDCm9&#xA;VJyIkCyMSE3yTF2KpBZf8p9rP/bK0v8A6idQxV17/wAp9o3/AGytU/6idPxVP8VdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVYxE2pH8xpVP1j9FjTW4+oP3H1j1Yq+kev2KcvfI72y2p&#xA;k+SYsI/Muv1aL9Eev/iyn+gfUuPr+jX95z5bcOPLjXv0/ayuf2tkPsZhY/7xW/8Ae/3Sf3/979kf&#xA;3n+X/N75Y1q+KpHD538qzRiSPUEZCSAeMnUGh6r4jEboJA2Lk87+VHZ1TUY2aM0cKGJU+BoNsNLx&#xA;BTbzV5f1DUbTSbW8WW7nkWX0wr1CQ1lrUqF+1FTrgOxpI3FhMNY0DStXiVb2HlJHvDcIeEsbdQUc&#xA;bih38MBiCkSISj1vNGgbTq+u6Uv+7owBexL/AJSdJgPEfF1J2yO482Wx8k60jWdO1ezF5p8vrQFm&#xA;QsVZCGXZlKsFIIyQNsSKS2y/5T7Wf+2Vpf8A1E6hhQ69/wCU+0b/ALZWqf8AUTp+Kp/irsVYtdXV&#xA;x5nuJNP0+QxaHEeGoagnWc94YT/L/M3f5farJ4thybAOHc808sY0s3/R6VECIGtASTSNaKyVNT8B&#xA;p17EeGWNaNxV2KrJp4IE9SaRYk6c3IUVPucVQ8Or6bPefU4bhJLkxmYIu9Y1YKWDD4TRmA64rSLx&#xA;VKdd8yW2jtEZ7eeWBqtczwpzSBOgeXeoDHpt2PyMZSplGNo+x1Cyv7dbmzmSeFujoa0PdT3DDuDu&#xA;MINoIpXwodirsVdirsVdirsVdiqFvv3UkF30WFisx/4qkFG9qBwjMewBxVA69rxsDHZWUf1rWLra&#xA;1tR0A6erLT7KL+P3kRlKveyjG/cu0HQRpwkubmT61qt18V5eN1J/kT+VF7D+wBjGvespX7k2yTF2&#xA;KsdT8vPJaig0mHqTU8iak1O5JxGyCLcv5eeSVJK6Pbgt9ohSK/jja0Few8leVtP1CPUbLT47e8iU&#xA;qkqFxQMCD8NeJ2Y9sSOqRsKTvFXYqoWdhaWayrbRiMTyvPLQk8pZW5OxrXqcaW0nsv8AlPtZ/wC2&#xA;Vpf/AFE6hirr3/lPtG/7ZWqf9ROn4qn+KsUuru98zX13pFqHs9JspWt9UuiyCSZlAJhiVWZlQht2&#xA;YCvTsQ0DZ26Ngob9WTWtrb2lvHbW0YigiHGONegGSAprJtLtc1KHTrvSZHR2a7uxYgpxNBPGzfFy&#xA;K/DziWpG/wCOJNJAtNsKFG5ndCkUQBnlrwr0VRTk7UpstRt3O23XFWobKGN/Vb97cdDO+7b9h/KP&#xA;ZdsVSN//ACYsP/bHl/6io8j/ABMv4WR5Jil+l3dteXOoywuJPRuPqrMK7GFF5Jv/ACyO+NrSV33k&#xA;6OO4a/0C4Ok35+0sY/0eWn7LxbqPmBt1oTkDDqNmYn0O6lF5zk06RbXzRbfo6cnjHeRhntZT/kMO&#xA;RX5Hp3piJ96mHcynJsFGe4KERxr6k7brHWgA/mY70XFVL6nNLvc3LtX/AHXCTCgPsVPqf8PT2xVC&#xA;6d5Y0nTIpI9NWW0EjmVuE0jguQFLcZGdDsoG4wAUkm0V6txbf70MJbcdbgDiyDxkA2p4sKU8AN8K&#xA;EXirsVcQGBBFQdiD0IxVLtL0DT9OuLm5hDyXF0xaSaZjI4X9mNWO4RegHhTwwCNbpMrTHCh2KuxV&#xA;jFzGk/5iwwzKJIV0h5FjbdQ/1lByAPRqd8h/F8Gf8PxTz6nLF8VrM4I6xzM0qN8y5Z1+g/QcmwVr&#xA;ecShgRwlQ0kjO9D169wexxVVxV2KuxVILL/lPtZ/7ZWl/wDUTqGKuvf+U+0b/tlap/1E6fiqf4qx&#xA;3WvLkq3X6a0IJbaym8qgBUul7pL0qx7MfpI+FlhKPUc2cZdDyTDQdetdXtWkjUw3MJ4Xdo+0kUgq&#xA;CCCAaVBoafcQQDGVolGlS9t4Lq/sYpY1k+rM12hZQ3F0X00Ir0P70kH2yTFHYqhbL95Lc3J/bkMS&#xA;eISElKHt/ecyPY/QFUVirHH/APJiw/8AbHl/6io8j/Ey/hZHkmKU6BpsOnyarFE7us1/LcsZOJIa&#xA;4RJWUcQvwgtt398AFJJtfrXmTSdHQfW5SZ3p6NpEOc0lTQcUHidqmgwSkAmMSUiudL8yeaoWi1Jj&#xA;oujSUP1OPi91IAQw5s6lU6VpSo6EdDkaMuewZWI8tyy93REZ3YKiglmJoABuSScsa0PYI5h+sSqV&#xA;nuP3jhhQqD9lN/5F2+dT3xVE4q7FXYqhLL91JLZ/sw8Wh9onrxX/AGLKwHtTFUXiqR6x5kltrwad&#xA;pdmdU1ML6k1usgiWKOlavIQwDN+ytPuqKxMt6DIR2so3RdatNWtPrFvVXU8J4H2kikH2kdexGGMr&#xA;WUaR+Fi7FXYqxlv/ACZUf/bGf/qKTIfxfBn/AA/Fk2TYIS8/czQXS9nWGUfzJKwVf+Bcg/KvjiqL&#xA;xV2KuxVILL/lPtZ/7ZWl/wDUTqGKuvf+U+0b/tlap/1E6fiqf4q7FUg17QbprpdZ0ZhDrEIo6naO&#xA;5jFKxyCoFaDY/LcUVlhKPUc2cZdDyTWxiuOBuLpVS7nCmWNW5qgA2jVqLyC1O9NyTk2CreRtJaTx&#xA;qiys8bKsTsY1YlSOLOoYqD3IBpiqVeTNHv8ARvLdnp1/Ist3B6pkeN3lX45XcUd1RjRWA3GRiKDK&#xA;Rsp1kmLGfNXlm71PVtI1GzWEyWEv+kCWWSEtFzR6Bo0k5U4H4TtvkZRshlGVAsmyTFJ9bsNenmQ6&#xA;RdRWgnUR3k8il5ERCShhWnEn425cj4UpkZX0ZRrq7RfK2l6UzToGub+TeW/uD6kzEihPI/Zr3p17&#xA;1xjABZTJTjJMUNqkFxPpt3BbcBcSwyJD6lQnNkIXlxBPGvWmKpFy/Mr/AH3o3/B3X/NGQ9Xkz9Pm&#xA;7l+ZX++9G/4O6/5ox9Xkvp80DpeqfmhfLKZdO02zMbcQJ2uV5f6tFNafd4YAZdySI96O5fmV/vvR&#xA;v+Duv+aMPq8kenzRmjw+aTfvPrIsUj9LggsmmLM3IEc/UVdl3p88Ivqg10V/Mj66mi3B0JEfVTwW&#xA;3EnEqOUiq7/EyD4ELMKnt0PQk30QKvdLdG0TXtJt2ig+pySysZLi5lMzSyuTUs7d+uCMaTKVqcmg&#xA;+Y/0ymrW0lnbXJHC6WP1eE6DoJFPcdm648O9rxbUmmkTeZGv7+PVYYEtI/S+oTW9f3nJSZeXJ2b4&#xA;Wp1VfpwoVdfm1mDR7mXRYEudUVQbWCWnBm5CtavEPs1/bGJutlFXuxZ9X/Nr14wmiWRhIb1WLrUH&#xA;bjT/AEj55JhvSI8qWfm668xXes+ZLSKxkht/qVlHAVKyRPL6jOxEsx5LwHh1yAG9tl+mmY5Jigtc&#xA;S8fRr5bFBJfehIbNDQVnCkxbkoB8YG/IfMYCkMNj1n85Daws+hWIuC4Ey81AEfKhIpctvx364RyY&#xA;nme5PfLl952n1CdNd0+C0sliVoJIipZpeRBU0ml24/5I+eJ5pHLfmyLFUgsv+U+1n/tlaX/1E6hi&#xA;rWuWHmH/ABDpuraRb2l0traXtpPDd3Mtqa3MtrIjI0dvdcqfVmBBA6jFW/rvn7/qzaV/3FLn/vH4&#xA;q7675+/6s2lf9xS5/wC8firvrvn7/qzaV/3FLn/vH4q7675+/wCrNpX/AHFLn/vH4q7675+/6s2l&#xA;f9xS5/7x+Ku+u+fv+rNpX/cUuf8AvH4q7675+/6s2lf9xS5/7x+Ku+u+fv8AqzaV/wBxS5/7x+Ku&#xA;+u+fv+rNpX/cUuf+8firvrvn7/qzaV/3FLn/ALx+Ku+u+fv+rNpX/cUuf+8firvrvn7/AKs2lf8A&#xA;cUuf+8firvrvn7/qzaV/3FLn/vH4q7675+/6s2lf9xS5/wC8firvrvn7/qzaV/3FLn/vH4q7675+&#xA;/wCrNpX/AHFLn/vH4q7675+/6s2lf9xS5/7x+Ku+u+fv+rNpX/cUuf8AvH4q7675+/6s2lf9xS5/&#xA;7x+Ku+u+fv8AqzaV/wBxS5/7x+Ku+u+fv+rNpX/cUuf+8firvrvn7/qzaV/3FLn/ALx+Ku+u+fv+&#xA;rNpX/cUuf+8firvrvn7/AKs2lf8AcUuf+8firvrvn7/qzaV/3FLn/vH4q7675+/6s2lf9xS5/wC8&#xA;firvrvn7/qzaV/3FLn/vH4q7675+/wCrNpX/AHFLn/vH4q7675+/6s2lf9xS5/7x+Ku+u+fv+rNp&#xA;X/cUuf8AvH4q1odh5h/xDqWravb2lqt1aWVpBDaXMt0a20t1I7O0lva8a/WVAAB6HFWQYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX/9k="/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="xmp.iid:62e8efd3-df36-8441-9ea8-426c75a458f3"
    stRef:documentID="xmp.did:62e8efd3-df36-8441-9ea8-426c75a458f3"
    stRef:originalDocumentID="uuid:C1BCCE1871B8DB11993190FCD52B4E9F"
    stRef:renditionClass="proof:pdf"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:79be7bbd-c0a1-1448-a436-87fbb48950be"
      stEvt:when="2022-09-16T13:43:19+04:00"
      stEvt:softwareAgent="Adobe Illustrator 26.3 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:4733ef68-b914-5d4b-b697-2d9ea3dde2a1"
      stEvt:when="2022-09-16T13:47:54+04:00"
      stEvt:softwareAgent="Adobe Illustrator 26.3 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:af72214a-1ef2-d84e-993f-eaf9ab7b995a"
      stEvt:when="2022-09-16T13:48:03+04:00"
      stEvt:softwareAgent="Adobe Illustrator 26.3 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:14f73efb-fbf8-4541-ba52-0e198768e5e7"
      stEvt:when="2022-09-16T19:09:01+04:00"
      stEvt:softwareAgent="Adobe Illustrator 26.3 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:62e8efd3-df36-8441-9ea8-426c75a458f3"
      stEvt:when="2022-09-16T19:09:06+04:00"
      stEvt:softwareAgent="Adobe Illustrator 26.3 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:81b26d2e-c412-8745-9a98-326407c56b6c"
      stEvt:when="2022-09-16T19:09:11+04:00"
      stEvt:softwareAgent="Adobe Illustrator 26.3 (Windows)"
      stEvt:changed="/"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmpTPg:MaxPageSize
    stDim:w="1841.138400"
    stDim:h="1104.986500"
    stDim:unit="Pixels"/>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Группа образцов по умолчанию"
       xmpG:groupType="0">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="Белый"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="255"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="Черный"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="0"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="RGB красный"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="0"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="RGB желтый"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="255"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="RGB зеленый"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="255"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="RGB голубой"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="255"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="RGB синий"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="0"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="RGB пурпурный"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="0"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="R=193 G=39 B=45"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="193"
         xmpG:green="39"
         xmpG:blue="45"/>
        <rdf:li
         xmpG:swatchName="R=237 G=28 B=36"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="237"
         xmpG:green="28"
         xmpG:blue="36"/>
        <rdf:li
         xmpG:swatchName="R=241 G=90 B=36"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="241"
         xmpG:green="90"
         xmpG:blue="36"/>
        <rdf:li
         xmpG:swatchName="R=247 G=147 B=30"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="247"
         xmpG:green="147"
         xmpG:blue="30"/>
        <rdf:li
         xmpG:swatchName="R=251 G=176 B=59"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="251"
         xmpG:green="176"
         xmpG:blue="59"/>
        <rdf:li
         xmpG:swatchName="R=252 G=238 B=33"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="252"
         xmpG:green="238"
         xmpG:blue="33"/>
        <rdf:li
         xmpG:swatchName="R=217 G=224 B=33"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="217"
         xmpG:green="224"
         xmpG:blue="33"/>
        <rdf:li
         xmpG:swatchName="R=140 G=198 B=63"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="140"
         xmpG:green="198"
         xmpG:blue="63"/>
        <rdf:li
         xmpG:swatchName="R=57 G=181 B=74"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="57"
         xmpG:green="181"
         xmpG:blue="74"/>
        <rdf:li
         xmpG:swatchName="R=0 G=146 B=69"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="146"
         xmpG:blue="69"/>
        <rdf:li
         xmpG:swatchName="R=0 G=104 B=55"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="104"
         xmpG:blue="55"/>
        <rdf:li
         xmpG:swatchName="R=34 G=181 B=115"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="34"
         xmpG:green="181"
         xmpG:blue="115"/>
        <rdf:li
         xmpG:swatchName="R=0 G=169 B=157"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="169"
         xmpG:blue="157"/>
        <rdf:li
         xmpG:swatchName="R=41 G=171 B=226"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="41"
         xmpG:green="171"
         xmpG:blue="226"/>
        <rdf:li
         xmpG:swatchName="R=0 G=113 B=188"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="113"
         xmpG:blue="188"/>
        <rdf:li
         xmpG:swatchName="R=46 G=49 B=146"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="46"
         xmpG:green="49"
         xmpG:blue="146"/>
        <rdf:li
         xmpG:swatchName="R=27 G=20 B=100"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="27"
         xmpG:green="20"
         xmpG:blue="100"/>
        <rdf:li
         xmpG:swatchName="R=102 G=45 B=145"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="102"
         xmpG:green="45"
         xmpG:blue="145"/>
        <rdf:li
         xmpG:swatchName="R=147 G=39 B=143"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="147"
         xmpG:green="39"
         xmpG:blue="143"/>
        <rdf:li
         xmpG:swatchName="R=158 G=0 B=93"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="158"
         xmpG:green="0"
         xmpG:blue="93"/>
        <rdf:li
         xmpG:swatchName="R=212 G=20 B=90"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="212"
         xmpG:green="20"
         xmpG:blue="90"/>
        <rdf:li
         xmpG:swatchName="R=237 G=30 B=121"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="237"
         xmpG:green="30"
         xmpG:blue="121"/>
        <rdf:li
         xmpG:swatchName="R=199 G=178 B=153"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="199"
         xmpG:green="178"
         xmpG:blue="153"/>
        <rdf:li
         xmpG:swatchName="R=153 G=134 B=117"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="153"
         xmpG:green="134"
         xmpG:blue="117"/>
        <rdf:li
         xmpG:swatchName="R=115 G=99 B=87"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="115"
         xmpG:green="99"
         xmpG:blue="87"/>
        <rdf:li
         xmpG:swatchName="R=83 G=71 B=65"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="83"
         xmpG:green="71"
         xmpG:blue="65"/>
        <rdf:li
         xmpG:swatchName="R=198 G=156 B=109"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="198"
         xmpG:green="156"
         xmpG:blue="109"/>
        <rdf:li
         xmpG:swatchName="R=166 G=124 B=82"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="166"
         xmpG:green="124"
         xmpG:blue="82"/>
        <rdf:li
         xmpG:swatchName="R=140 G=98 B=57"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="140"
         xmpG:green="98"
         xmpG:blue="57"/>
        <rdf:li
         xmpG:swatchName="R=117 G=76 B=36"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="117"
         xmpG:green="76"
         xmpG:blue="36"/>
        <rdf:li
         xmpG:swatchName="R=96 G=56 B=19"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="96"
         xmpG:green="56"
         xmpG:blue="19"/>
        <rdf:li
         xmpG:swatchName="R=66 G=33 B=11"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="66"
         xmpG:green="33"
         xmpG:blue="11"/>
        <rdf:li
         xmpG:swatchName="R=0 G=0 B=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="0"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="R=26 G=26 B=26"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="26"
         xmpG:green="26"
         xmpG:blue="26"/>
        <rdf:li
         xmpG:swatchName="R=51 G=51 B=51"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="51"
         xmpG:green="51"
         xmpG:blue="51"/>
        <rdf:li
         xmpG:swatchName="R=77 G=77 B=77"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="77"
         xmpG:green="77"
         xmpG:blue="77"/>
        <rdf:li
         xmpG:swatchName="R=102 G=102 B=102"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="102"
         xmpG:green="102"
         xmpG:blue="102"/>
        <rdf:li
         xmpG:swatchName="R=128 G=128 B=128"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="128"
         xmpG:green="128"
         xmpG:blue="128"/>
        <rdf:li
         xmpG:swatchName="R=153 G=153 B=153"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="153"
         xmpG:green="153"
         xmpG:blue="153"/>
        <rdf:li
         xmpG:swatchName="R=179 G=179 B=179"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="179"
         xmpG:green="179"
         xmpG:blue="179"/>
        <rdf:li
         xmpG:swatchName="R=204 G=204 B=204"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="204"
         xmpG:green="204"
         xmpG:blue="204"/>
        <rdf:li
         xmpG:swatchName="R=230 G=230 B=230"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="230"
         xmpG:green="230"
         xmpG:blue="230"/>
        <rdf:li
         xmpG:swatchName="R=242 G=242 B=242"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="242"
         xmpG:green="242"
         xmpG:blue="242"/>
        <rdf:li
         xmpG:swatchName="R=136 G=168 B=13"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="136"
         xmpG:green="168"
         xmpG:blue="13"/>
        <rdf:li
         xmpG:swatchName="R=127 G=71 B=221"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="127"
         xmpG:green="71"
         xmpG:blue="221"/>
        <rdf:li
         xmpG:swatchName="R=251 G=174 B=23"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="251"
         xmpG:green="174"
         xmpG:blue="23"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                       
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -1104.99 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1104.99 li
1841.14 1104.99 li
1841.14 0 li
cp
clp
1841.14 1104.99 mo
0 1104.99 li
0 0 li
1841.14 0 li
1841.14 1104.99 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
3.23972 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
1811.22 1069.12 mo
29.9207 1069.12 li
29.9207 35.8713 li
1811.22 35.8713 li
1811.22 1069.12 li
cp
0 0 0 rgb
@
1811.22 1069.12 mo
29.9207 1069.12 li
29.9207 35.8713 li
1811.22 35.8713 li
1811.22 1069.12 li
cp
@
255.813 100.02 mo
255.813 123.079 li
255.813 125.866 256.77 127.32 258.71 127.32 cv
260.734 127.32 261.647 126.001 261.647 123.035 cv
261.647 99.9518 li
261.647 97.1338 260.866 95.6927 258.684 95.6927 cv
256.84 95.6927 255.813 97.0256 255.813 100.02 cv
cp
270.469 100.997 mo
270.469 121.925 li
270.469 130.878 266.256 134.717 258.372 134.717 cv
250.888 134.717 247.038 130.783 247.038 122.013 cv
247.038 100.764 li
247.038 92.0534 251.827 88.2508 258.772 88.2508 cv
265.765 88.2508 270.469 91.9892 270.469 100.997 cv
cp
.729412 .631373 .533333 rgb
f
275.122 88.9255 mo
293.835 88.9255 li
293.835 96.5985 li
283.809 96.5985 li
283.809 106.879 li
293.266 106.879 li
293.266 114.551 li
283.809 114.551 li
283.809 134.041 li
275.122 134.041 li
275.122 88.9255 li
cp
f
314.695 127.048 mo
316.386 127.048 li
319.789 127.048 320.353 124.83 320.353 121.31 cv
320.353 101.107 li
320.353 97.7755 319.605 95.9623 316.32 95.9623 cv
314.695 95.9623 li
314.695 127.048 li
cp
306.009 88.9255 mo
316.675 88.9255 li
325.971 88.9255 329.176 93.1644 329.176 102.502 cv
329.176 119.461 li
329.176 127.235 327.533 134.041 317.266 134.041 cv
306.009 134.041 li
306.009 88.9255 li
cp
f
342.12 100.02 mo
342.12 123.079 li
342.12 125.866 343.077 127.32 345.017 127.32 cv
347.041 127.32 347.954 126.001 347.954 123.035 cv
347.954 99.9518 li
347.954 97.1338 347.173 95.6927 344.991 95.6927 cv
343.147 95.6927 342.12 97.0256 342.12 100.02 cv
cp
356.776 100.997 mo
356.776 121.925 li
356.776 130.878 352.563 134.717 344.679 134.717 cv
337.195 134.717 333.345 130.783 333.345 122.013 cv
333.345 100.764 li
333.345 92.0534 338.134 88.2508 345.079 88.2508 cv
352.072 88.2508 356.776 91.9892 356.776 100.997 cv
cp
f
369.695 100.02 mo
369.695 123.079 li
369.695 125.866 370.652 127.32 372.591 127.32 cv
374.616 127.32 375.529 126.001 375.529 123.035 cv
375.529 99.9518 li
375.529 97.1338 374.748 95.6927 372.566 95.6927 cv
370.721 95.6927 369.695 97.0256 369.695 100.02 cv
cp
384.351 100.997 mo
384.351 121.925 li
384.351 130.878 380.138 134.717 372.254 134.717 cv
364.77 134.717 360.92 130.783 360.92 122.013 cv
360.92 100.764 li
360.92 92.0534 365.709 88.2508 372.654 88.2508 cv
379.647 88.2508 384.351 91.9892 384.351 100.997 cv
cp
f
397.691 107.592 mo
398.766 107.592 li
401.662 107.592 402.847 106.677 402.847 102.476 cv
402.847 100.297 li
402.847 97.2695 402.238 95.7642 399.044 95.7642 cv
397.691 95.7642 li
397.691 107.592 li
cp
397.665 114.429 mo
397.665 134.041 li
389.004 134.041 li
389.004 88.9255 li
400.262 88.9255 li
407.819 88.9255 411.559 92.2477 411.559 100.137 cv
411.559 101.76 li
411.559 108.189 408.989 110.1 407.056 111.015 cv
409.862 112.37 411.178 114.432 411.178 120.726 cv
411.178 125.083 411.112 131.668 411.49 134.041 cv
403.096 134.041 li
402.535 132.002 402.575 126.128 402.575 120.369 cv
402.575 115.294 401.996 114.429 398.692 114.429 cv
397.665 114.429 li
cp
f
423.212 120.136 mo
423.212 123.26 li
423.212 126.227 423.95 127.605 425.93 127.605 cv
427.928 127.605 428.397 125.563 428.397 123.434 cv
428.397 119.175 427.594 117.943 422.989 114.089 cv
417.907 109.785 415.296 107.236 415.296 100.59 cv
415.296 94.1453 417.43 88.2068 425.974 88.2068 cv
435.049 88.2068 436.388 94.3947 436.388 99.5595 cv
436.388 102.156 li
428.196 102.156 li
428.196 99.4531 li
428.196 96.7158 427.745 95.3609 426.029 95.3609 cv
424.43 95.3609 423.913 96.7396 423.913 99.2936 cv
423.913 102.011 424.404 103.353 428.137 106.262 cv
434.771 111.477 437.154 114.403 437.154 121.834 cv
437.154 128.896 434.738 134.717 425.776 134.717 cv
417.169 134.717 414.713 129.525 414.713 122.84 cv
414.713 120.136 li
423.212 120.136 li
cp
f
130.318 155.745 mo
119.838 155.745 li
119.838 169.285 li
131.4 169.285 li
131.077 171.149 li
117.829 171.149 li
117.829 140.485 li
130.857 140.485 li
130.857 142.351 li
119.838 142.351 li
119.838 153.878 li
130.318 153.878 li
130.318 155.745 li
cp
.501961 .501961 .501961 rgb
f
137.413 169.29 mo
140.761 169.29 li
147.197 169.29 149.166 164.066 149.166 155.077 cv
149.166 146.246 146.584 142.346 140.805 142.346 cv
137.413 142.346 li
137.413 169.29 li
cp
135.4 140.485 mo
141.476 140.485 li
148.033 140.485 151.271 145.353 151.271 154.901 cv
151.271 165.344 148.432 171.149 140.937 171.149 cv
135.4 171.149 li
135.4 140.485 li
cp
f
158.546 140.485 mo
158.546 171.149 li
156.532 171.149 li
156.532 140.485 li
158.546 140.485 li
cp
f
168.71 142.351 mo
161.695 142.351 li
161.695 140.485 li
177.738 140.485 li
177.738 142.351 li
170.723 142.351 li
170.723 171.149 li
168.71 171.149 li
168.71 142.351 li
cp
f
188.713 158.28 mo
186.531 149.694 185.233 144.579 184.87 142.445 cv
184.778 142.445 li
184.331 145.017 182.897 151.108 181.155 158.28 cv
188.713 158.28 li
cp
180.693 160.145 mo
178.02 171.149 li
176.007 171.149 li
176.007 171.149 183.605 140.487 183.605 140.485 cv
186.227 140.485 li
194.133 171.149 li
191.94 171.149 li
189.219 160.145 li
180.693 160.145 li
cp
f
199.996 169.339 mo
204.649 169.339 li
208.804 169.339 210.996 166.665 210.996 162.273 cv
210.996 157.58 208.415 155.424 203.974 155.424 cv
199.996 155.424 li
199.996 169.339 li
cp
204.062 153.614 mo
208.188 153.614 209.926 151.647 209.926 147.932 cv
209.926 144.616 208.177 142.298 204.638 142.298 cv
199.996 142.298 li
199.996 153.614 li
204.062 153.614 li
cp
197.986 140.485 mo
205.104 140.485 li
209.229 140.485 211.979 143.105 211.979 147.745 cv
211.979 152.015 209.911 153.73 208.07 154.36 cv
210.494 155.129 213.054 157.374 213.054 162.187 cv
213.054 167.512 210.021 171.149 204.792 171.149 cv
197.986 171.149 li
197.986 140.485 li
cp
f
217.721 140.485 mo
219.735 140.485 li
219.735 169.286 li
230.974 169.286 li
230.522 171.149 li
217.721 171.149 li
217.721 140.485 li
cp
f
246.792 155.745 mo
236.312 155.745 li
236.312 169.285 li
247.874 169.285 li
247.551 171.149 li
234.303 171.149 li
234.303 140.485 li
247.331 140.485 li
247.331 142.351 li
236.312 142.351 li
236.312 153.878 li
246.792 153.878 li
246.792 155.745 li
cp
f
260.829 163.43 mo
261.056 166.965 262.883 169.657 266.601 169.657 cv
270.139 169.657 272.145 167.858 272.145 163.535 cv
272.145 159.868 270.796 157.987 266.439 155.877 cv
261.918 153.708 259.762 151.634 259.762 147.261 cv
259.762 143.499 262.164 140.122 266.821 140.122 cv
272.123 140.122 273.659 144.1 273.747 147.447 cv
271.738 147.447 li
271.602 146.13 271.151 141.977 266.685 141.977 cv
263.246 141.977 261.816 144.388 261.816 147.076 cv
261.816 150.472 263.337 152.08 267.334 154.01 cv
272.607 156.577 274.246 159.186 274.246 163.394 cv
274.246 168.254 271.672 171.512 266.553 171.512 cv
260.983 171.512 259.04 167.803 258.772 163.43 cv
260.829 163.43 li
cp
f
283.061 142.351 mo
276.047 142.351 li
276.047 140.485 li
292.089 140.485 li
292.089 142.351 li
285.074 142.351 li
285.074 171.149 li
283.061 171.149 li
283.061 142.351 li
cp
f
297.545 154.514 mo
302.312 154.514 li
306.306 154.514 307.787 151.973 307.787 148.117 cv
307.787 144.755 306.262 142.344 302.503 142.344 cv
297.545 142.344 li
297.545 154.514 li
cp
297.545 156.374 mo
297.545 171.149 li
295.532 171.149 li
295.532 140.485 li
302.65 140.485 li
307.53 140.485 309.932 143.411 309.932 148.112 cv
309.932 152.789 307.765 154.769 305.748 155.4 cv
308.883 156.348 309.613 159.168 309.613 163.318 cv
309.613 164.534 li
309.613 166.989 309.661 169.484 310.064 171.149 cv
307.967 171.149 li
307.56 169.754 307.56 166.837 307.56 164.444 cv
307.56 163.452 li
307.56 158.915 306.702 156.374 302.133 156.374 cv
297.545 156.374 li
cp
f
316.43 155.567 mo
316.43 165.24 318.612 169.695 322.781 169.695 cv
327.038 169.695 329.084 165.247 329.084 155.657 cv
329.084 145.589 326.862 141.941 322.737 141.941 cv
318.699 141.941 316.43 146.257 316.43 155.567 cv
cp
331.189 155.526 mo
331.189 165.504 329.055 171.556 322.689 171.556 cv
316.554 171.556 314.325 165.77 314.325 155.657 cv
314.325 145.593 316.962 140.078 322.781 140.078 cv
328.919 140.078 331.189 145.296 331.189 155.526 cv
cp
f
336.491 140.485 mo
338.501 140.485 li
338.501 156.509 li
341.005 153.189 346.685 145.329 350.264 140.485 cv
352.559 140.485 li
343.224 153.169 li
352.871 171.149 li
350.491 171.149 li
341.867 154.852 li
338.501 159.254 li
338.501 171.149 li
336.491 171.149 li
336.491 140.485 li
cp
f
368.265 155.745 mo
357.785 155.745 li
357.785 169.285 li
369.346 169.285 li
369.024 171.149 li
355.775 171.149 li
355.775 140.485 li
368.804 140.485 li
368.804 142.351 li
357.785 142.351 li
357.785 153.878 li
368.265 153.878 li
368.265 155.745 li
cp
f
121.432 96.6035 mo
114.906 96.6035 li
114.906 88.9805 li
136.618 88.9805 li
136.618 96.6035 li
130.043 96.6035 li
130.043 133.811 li
121.432 133.811 li
121.432 96.6035 li
cp
.729412 .631373 .533333 rgb
f
146.739 133.811 mo
146.739 119.453 li
146.739 118.731 146.624 117.924 146.421 117.134 cv
138.544 88.9805 li
147.937 88.9805 li
149.146 95.4438 150.552 102.873 151.11 108.521 cv
151.389 108.521 li
152.116 103.157 153.549 95.5641 154.72 88.9805 cv
163.61 88.9805 li
155.552 117.853 li
155.437 118.4 155.349 118.849 155.349 119.785 cv
155.349 133.811 li
146.739 133.811 li
cp
f
174.463 109.199 mo
175.858 109.199 li
179.129 109.199 179.824 107.367 179.824 103.633 cv
179.824 100.539 li
179.824 97.6429 179.146 95.7748 176.268 95.7748 cv
174.463 95.7748 li
174.463 109.199 li
cp
165.831 88.9805 mo
177.324 88.9805 li
184.769 88.9805 188.462 92.9165 188.462 100.857 cv
188.462 103.595 li
188.462 111.448 185.497 116.188 176.99 116.188 cv
174.463 116.188 li
174.463 133.811 li
165.831 133.811 li
165.831 88.9805 li
cp
f
210.075 114.01 mo
200.836 114.01 li
200.836 126.231 li
211.673 126.231 li
210.633 133.811 li
192.203 133.811 li
192.203 88.9805 li
210.568 88.9805 li
210.568 96.6035 li
200.836 96.6035 li
200.836 106.428 li
210.075 106.428 li
210.075 114.01 li
cp
f
222.499 119.992 mo
222.499 123.097 li
222.499 126.045 223.232 127.416 225.196 127.416 cv
227.187 127.416 227.652 125.386 227.652 123.269 cv
227.652 119.038 226.859 117.812 222.28 113.983 cv
217.231 109.705 214.632 107.172 214.632 100.57 cv
214.632 94.1664 216.755 88.2639 225.245 88.2639 cv
234.26 88.2639 235.595 94.4126 235.595 99.5439 cv
235.595 102.126 li
227.449 102.126 li
227.449 99.4399 li
227.449 96.7184 227.006 95.3754 225.3 95.3754 cv
223.708 95.3754 223.193 96.743 223.193 99.2813 cv
223.193 101.981 223.686 103.316 227.395 106.207 cv
233.987 111.387 236.35 114.298 236.35 121.68 cv
236.35 128.699 233.954 134.484 225.048 134.484 cv
216.498 134.484 214.052 129.325 214.052 122.681 cv
214.052 119.992 li
222.499 119.992 li
cp
f
1452.31 100.02 mo
1452.31 123.079 li
1452.31 125.866 1453.27 127.32 1455.21 127.32 cv
1457.23 127.32 1458.15 126.001 1458.15 123.035 cv
1458.15 99.9518 li
1458.15 97.1338 1457.36 95.6927 1455.18 95.6927 cv
1453.34 95.6927 1452.31 97.0256 1452.31 100.02 cv
cp
1466.97 100.997 mo
1466.97 121.925 li
1466.97 130.878 1462.75 134.717 1454.87 134.717 cv
1447.39 134.717 1443.54 130.783 1443.54 122.013 cv
1443.54 100.764 li
1443.54 92.0534 1448.33 88.2508 1455.27 88.2508 cv
1462.26 88.2508 1466.97 91.9892 1466.97 100.997 cv
cp
f
1471.62 88.9255 mo
1490.33 88.9255 li
1490.33 96.5985 li
1480.31 96.5985 li
1480.31 106.879 li
1489.76 106.879 li
1489.76 114.551 li
1480.31 114.551 li
1480.31 134.041 li
1471.62 134.041 li
1471.62 88.9255 li
cp
f
1507.22 134.022 mo
1502.12 88.9263 li
1511.25 88.9263 li
1511.89 96.9908 1512.8 112.268 1513.02 119.385 cv
1513.32 119.385 li
1514.23 110.557 1515.31 98.2822 1516.27 88.9263 cv
1523.73 88.9263 li
1524.66 97.7377 1525.69 109.854 1526.54 119.238 cv
1526.89 119.238 li
1527.29 110.826 1528.11 96.3886 1528.7 88.9263 cv
1537.26 88.9263 li
1531.57 134.022 li
1522.58 134.022 li
1521.69 126.109 1520.56 117.387 1519.76 108.062 cv
1519.46 108.062 li
1518.59 117.24 1517.24 125.869 1516.29 134.022 cv
1507.22 134.022 li
cp
f
1549.41 88.9263 mo
1549.41 134.022 li
1540.75 134.022 li
1540.75 88.9263 li
1549.41 88.9263 li
cp
f
1554.85 134.022 mo
1554.85 88.9263 li
1564.44 88.9263 li
1565.88 94.43 1570.39 114.854 1570.75 116.834 cv
1570.96 116.834 li
1570.48 110.834 1570.17 102.63 1570.17 96.3355 cv
1570.17 88.9263 li
1578.23 88.9263 li
1578.23 134.022 li
1568.54 134.022 li
1567.61 129.732 1562.68 106.398 1562.39 104.955 cv
1562.15 104.955 li
1562.49 110.263 1562.75 119.231 1562.75 126.32 cv
1562.75 134.022 li
1554.85 134.022 li
cp
f
1592.32 127.033 mo
1594.01 127.033 li
1597.41 127.033 1597.97 124.815 1597.97 121.297 cv
1597.97 101.102 li
1597.97 97.7726 1597.23 95.9597 1593.94 95.9597 cv
1592.32 95.9597 li
1592.32 127.033 li
cp
1583.63 88.9263 mo
1594.3 88.9263 li
1603.59 88.9263 1606.79 93.1625 1606.79 102.497 cv
1606.79 119.448 li
1606.79 127.219 1605.15 134.022 1594.89 134.022 cv
1583.63 134.022 li
1583.63 88.9263 li
cp
f
1619.74 100.015 mo
1619.74 123.065 li
1619.74 125.85 1620.69 127.303 1622.63 127.303 cv
1624.65 127.303 1625.57 125.986 1625.57 123.021 cv
1625.57 99.9475 li
1625.57 97.131 1624.79 95.6893 1622.61 95.6893 cv
1620.76 95.6893 1619.74 97.0229 1619.74 100.015 cv
cp
1634.39 100.992 mo
1634.39 121.913 li
1634.39 130.86 1630.18 134.697 1622.29 134.697 cv
1614.81 134.697 1610.97 130.766 1610.97 122 cv
1610.97 100.759 li
1610.97 92.0516 1615.75 88.2508 1622.7 88.2508 cv
1629.68 88.2508 1634.39 91.9875 1634.39 100.992 cv
cp
f
1642.17 134.022 mo
1637.06 88.9263 li
1646.2 88.9263 li
1646.83 96.9908 1647.74 112.268 1647.96 119.385 cv
1648.27 119.385 li
1649.18 110.557 1650.26 98.2822 1651.21 88.9263 cv
1658.68 88.9263 li
1659.6 97.7377 1660.64 109.854 1661.48 119.238 cv
1661.83 119.238 li
1662.23 110.826 1663.05 96.3886 1663.64 88.9263 cv
1672.21 88.9263 li
1666.51 134.022 li
1657.52 134.022 li
1656.64 126.109 1655.51 117.387 1654.71 108.062 cv
1654.4 108.062 li
1653.54 117.24 1652.18 125.869 1651.23 134.022 cv
1642.17 134.022 li
cp
f
1682.64 120.123 mo
1682.64 123.245 li
1682.64 126.212 1683.37 127.59 1685.35 127.59 cv
1687.35 127.59 1687.82 125.547 1687.82 123.42 cv
1687.82 119.163 1687.02 117.931 1682.41 114.078 cv
1677.34 109.775 1674.72 107.227 1674.72 100.585 cv
1674.72 94.1432 1676.86 88.2068 1685.4 88.2068 cv
1694.47 88.2068 1695.81 94.3934 1695.81 99.5543 cv
1695.81 102.15 li
1687.62 102.15 li
1687.62 99.4489 li
1687.62 96.7131 1687.17 95.3594 1685.45 95.3594 cv
1683.85 95.3594 1683.34 96.736 1683.34 99.2894 cv
1683.34 102.006 1683.83 103.347 1687.56 106.256 cv
1694.19 111.467 1696.57 114.393 1696.57 121.819 cv
1696.57 128.88 1694.16 134.697 1685.2 134.697 cv
1676.6 134.697 1674.14 129.509 1674.14 122.826 cv
1674.14 120.123 li
1682.64 120.123 li
cp
f
1326.82 155.739 mo
1316.34 155.739 li
1316.34 169.279 li
1327.9 169.279 li
1327.58 171.144 li
1314.33 171.144 li
1314.33 140.48 li
1327.36 140.48 li
1327.36 142.346 li
1316.34 142.346 li
1316.34 153.873 li
1326.82 153.873 li
1326.82 155.739 li
cp
.501961 .501961 .501961 rgb
f
1333.91 169.285 mo
1337.26 169.285 li
1343.7 169.285 1345.66 164.061 1345.66 155.072 cv
1345.66 146.24 1343.08 142.341 1337.3 142.341 cv
1333.91 142.341 li
1333.91 169.285 li
cp
1331.9 140.48 mo
1337.97 140.48 li
1344.53 140.48 1347.77 145.348 1347.77 154.896 cv
1347.77 165.339 1344.93 171.144 1337.44 171.144 cv
1331.9 171.144 li
1331.9 140.48 li
cp
f
1355.04 140.48 mo
1355.04 171.144 li
1353.03 171.144 li
1353.03 140.48 li
1355.04 140.48 li
cp
f
1365.21 142.346 mo
1358.19 142.346 li
1358.19 140.48 li
1374.24 140.48 li
1374.24 142.346 li
1367.22 142.346 li
1367.22 171.144 li
1365.21 171.144 li
1365.21 142.346 li
cp
f
1385.21 158.275 mo
1383.03 149.689 1381.73 144.574 1381.37 142.44 cv
1381.28 142.44 li
1380.83 145.012 1379.4 151.103 1377.65 158.275 cv
1385.21 158.275 li
cp
1377.19 160.14 mo
1374.52 171.144 li
1372.51 171.144 li
1372.51 171.144 1380.1 140.482 1380.1 140.48 cv
1382.73 140.48 li
1390.63 171.144 li
1388.44 171.144 li
1385.72 160.14 li
1377.19 160.14 li
cp
f
1396.49 169.334 mo
1401.15 169.334 li
1405.3 169.334 1407.49 166.659 1407.49 162.268 cv
1407.49 157.575 1404.91 155.419 1400.47 155.419 cv
1396.49 155.419 li
1396.49 169.334 li
cp
1400.56 153.609 mo
1404.69 153.609 1406.42 151.642 1406.42 147.927 cv
1406.42 144.61 1404.68 142.293 1401.14 142.293 cv
1396.49 142.293 li
1396.49 153.609 li
1400.56 153.609 li
cp
1394.48 140.48 mo
1401.6 140.48 li
1405.73 140.48 1408.48 143.1 1408.48 147.74 cv
1408.48 152.01 1406.41 153.724 1404.57 154.355 cv
1406.99 155.123 1409.55 157.369 1409.55 162.182 cv
1409.55 167.506 1406.52 171.144 1401.29 171.144 cv
1394.48 171.144 li
1394.48 140.48 li
cp
f
1414.22 140.48 mo
1416.23 140.48 li
1416.23 169.281 li
1427.47 169.281 li
1427.02 171.144 li
1414.22 171.144 li
1414.22 140.48 li
cp
f
1443.29 155.739 mo
1432.81 155.739 li
1432.81 169.279 li
1444.37 169.279 li
1444.05 171.144 li
1430.8 171.144 li
1430.8 140.48 li
1443.83 140.48 li
1443.83 142.346 li
1432.81 142.346 li
1432.81 153.873 li
1443.29 153.873 li
1443.29 155.739 li
cp
f
1457.33 163.425 mo
1457.55 166.96 1459.38 169.651 1463.1 169.651 cv
1466.64 169.651 1468.64 167.853 1468.64 163.53 cv
1468.64 159.863 1467.29 157.982 1462.94 155.871 cv
1458.42 153.702 1456.26 151.629 1456.26 147.256 cv
1456.26 143.494 1458.66 140.117 1463.32 140.117 cv
1468.62 140.117 1470.16 144.095 1470.25 147.441 cv
1468.24 147.441 li
1468.1 146.125 1467.65 141.972 1463.18 141.972 cv
1459.74 141.972 1458.31 144.383 1458.31 147.071 cv
1458.31 150.466 1459.84 152.074 1463.83 154.005 cv
1469.11 156.572 1470.74 159.181 1470.74 163.388 cv
1470.74 168.249 1468.17 171.507 1463.05 171.507 cv
1457.48 171.507 1455.54 167.798 1455.27 163.425 cv
1457.33 163.425 li
cp
f
1479.56 142.346 mo
1472.55 142.346 li
1472.55 140.48 li
1488.59 140.48 li
1488.59 142.346 li
1481.57 142.346 li
1481.57 171.144 li
1479.56 171.144 li
1479.56 142.346 li
cp
f
1494.04 154.509 mo
1498.81 154.509 li
1502.8 154.509 1504.29 151.968 1504.29 148.112 cv
1504.29 144.75 1502.76 142.339 1499 142.339 cv
1494.04 142.339 li
1494.04 154.509 li
cp
1494.04 156.368 mo
1494.04 171.144 li
1492.03 171.144 li
1492.03 140.48 li
1499.15 140.48 li
1504.03 140.48 1506.43 143.406 1506.43 148.107 cv
1506.43 152.784 1504.26 154.764 1502.25 155.395 cv
1505.38 156.343 1506.11 159.162 1506.11 163.313 cv
1506.11 164.529 li
1506.11 166.984 1506.16 169.479 1506.56 171.144 cv
1504.47 171.144 li
1504.06 169.749 1504.06 166.832 1504.06 164.439 cv
1504.06 163.447 li
1504.06 158.909 1503.2 156.368 1498.63 156.368 cv
1494.04 156.368 li
cp
f
1512.93 155.561 mo
1512.93 165.235 1515.11 169.69 1519.28 169.69 cv
1523.54 169.69 1525.58 165.242 1525.58 155.651 cv
1525.58 145.584 1523.36 141.935 1519.24 141.935 cv
1515.2 141.935 1512.93 146.251 1512.93 155.561 cv
cp
1527.69 155.521 mo
1527.69 165.499 1525.55 171.551 1519.19 171.551 cv
1513.05 171.551 1510.82 165.765 1510.82 155.651 cv
1510.82 145.588 1513.46 140.073 1519.28 140.073 cv
1525.42 140.073 1527.69 145.291 1527.69 155.521 cv
cp
f
1532.99 140.48 mo
1535 140.48 li
1535 156.504 li
1537.5 153.184 1543.18 145.324 1546.76 140.48 cv
1549.06 140.48 li
1539.72 153.163 li
1549.37 171.144 li
1546.99 171.144 li
1538.37 154.846 li
1535 159.249 li
1535 171.144 li
1532.99 171.144 li
1532.99 140.48 li
cp
f
1564.76 155.739 mo
1554.28 155.739 li
1554.28 169.279 li
1565.84 169.279 li
1565.52 171.144 li
1552.27 171.144 li
1552.27 140.48 li
1565.3 140.48 li
1565.3 142.346 li
1554.28 142.346 li
1554.28 153.873 li
1564.76 153.873 li
1564.76 155.739 li
cp
f
1317.93 96.6035 mo
1311.4 96.6035 li
1311.4 88.9805 li
1333.12 88.9805 li
1333.12 96.6035 li
1326.54 96.6035 li
1326.54 133.811 li
1317.93 133.811 li
1317.93 96.6035 li
cp
.729412 .631373 .533333 rgb
f
1343.24 133.811 mo
1343.24 119.453 li
1343.24 118.731 1343.12 117.924 1342.92 117.134 cv
1335.04 88.9805 li
1344.44 88.9805 li
1345.64 95.4438 1347.05 102.873 1347.61 108.521 cv
1347.89 108.521 li
1348.61 103.157 1350.05 95.5641 1351.22 88.9805 cv
1360.11 88.9805 li
1352.05 117.853 li
1351.94 118.4 1351.85 118.849 1351.85 119.785 cv
1351.85 133.811 li
1343.24 133.811 li
cp
f
1370.96 109.199 mo
1372.36 109.199 li
1375.63 109.199 1376.32 107.367 1376.32 103.633 cv
1376.32 100.539 li
1376.32 97.6429 1375.64 95.7748 1372.77 95.7748 cv
1370.96 95.7748 li
1370.96 109.199 li
cp
1362.33 88.9805 mo
1373.82 88.9805 li
1381.27 88.9805 1384.96 92.9165 1384.96 100.857 cv
1384.96 103.595 li
1384.96 111.448 1382 116.188 1373.49 116.188 cv
1370.96 116.188 li
1370.96 133.811 li
1362.33 133.811 li
1362.33 88.9805 li
cp
f
1406.57 114.01 mo
1397.33 114.01 li
1397.33 126.231 li
1408.17 126.231 li
1407.13 133.811 li
1388.7 133.811 li
1388.7 88.9805 li
1407.07 88.9805 li
1407.07 96.6035 li
1397.33 96.6035 li
1397.33 106.428 li
1406.57 106.428 li
1406.57 114.01 li
cp
f
1419 119.992 mo
1419 123.097 li
1419 126.045 1419.73 127.416 1421.69 127.416 cv
1423.69 127.416 1424.15 125.386 1424.15 123.269 cv
1424.15 119.038 1423.36 117.812 1418.78 113.983 cv
1413.73 109.705 1411.13 107.172 1411.13 100.57 cv
1411.13 94.1664 1413.25 88.2639 1421.74 88.2639 cv
1430.76 88.2639 1432.09 94.4126 1432.09 99.5439 cv
1432.09 102.126 li
1423.95 102.126 li
1423.95 99.4399 li
1423.95 96.7184 1423.5 95.3754 1421.8 95.3754 cv
1420.21 95.3754 1419.69 96.743 1419.69 99.2813 cv
1419.69 101.981 1420.18 103.316 1423.89 106.207 cv
1430.49 111.387 1432.85 114.298 1432.85 121.68 cv
1432.85 128.699 1430.45 134.484 1421.55 134.484 cv
1413 134.484 1410.55 129.325 1410.55 122.681 cv
1410.55 119.992 li
1419 119.992 li
cp
f
1531.25 377.346 mo
1522.58 377.346 li
1522.58 359.999 li
1531.25 359.999 li
1531.25 377.346 li
cp
f
1.2 lw
1531.25 377.346 mo
1522.58 377.346 li
1522.58 359.999 li
1531.25 359.999 li
1531.25 377.346 li
cp
0 0 0 rgb
@
1782.83 377.346 mo
1774.16 377.346 li
1774.16 359.999 li
1782.83 359.999 li
1782.83 377.346 li
cp
.729412 .631373 .533333 rgb
f
1782.83 377.346 mo
1774.16 377.346 li
1774.16 359.999 li
1782.83 359.999 li
1782.83 377.346 li
cp
0 0 0 rgb
@
.5 lw
1774.16 377.346 mo
1531.25 377.346 li
1531.25 359.999 li
1774.16 359.999 li
1774.16 377.346 li
cp
@
1774.16 373.228 mo
1531.25 373.228 li
1531.25 364.117 li
1774.16 364.117 li
1774.16 373.228 li
cp
.772549 .886275 .929412 rgb
f
1774.16 373.228 mo
1531.25 373.228 li
1531.25 364.117 li
1774.16 364.117 li
1774.16 373.228 li
cp
0 0 0 rgb
@
1644.03 373.228 mo
1652.71 373.228 li
1652.71 364.117 li
1644.03 364.117 li
1644.03 373.228 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
1644.03 373.228 mo
1652.71 373.228 li
1652.71 364.117 li
1644.03 364.117 li
1644.03 373.228 li
cp
0 0 0 rgb
@
1531.25 373.228 mo
1539.93 373.228 li
1539.93 364.117 li
1531.25 364.117 li
1531.25 373.228 li
cp
.729412 .631373 .533333 rgb
f
1531.25 373.228 mo
1539.93 373.228 li
1539.93 364.117 li
1531.25 364.117 li
1531.25 373.228 li
cp
0 0 0 rgb
@
1652.71 373.228 mo
1661.38 373.228 li
1661.38 364.117 li
1652.71 364.117 li
1652.71 373.228 li
cp
.729412 .631373 .533333 rgb
f
1652.71 373.228 mo
1661.38 373.228 li
1661.38 364.117 li
1652.71 364.117 li
1652.71 373.228 li
cp
0 0 0 rgb
@
1765.48 373.228 mo
1774.15 373.228 li
1774.15 364.117 li
1765.48 364.117 li
1765.48 373.228 li
cp
.729412 .631373 .533333 rgb
f
1765.48 373.228 mo
1774.15 373.228 li
1774.15 364.117 li
1765.48 364.117 li
1765.48 373.228 li
cp
0 0 0 rgb
@
1539.93 368.672 mo
1644.03 368.672 li
.729412 .631373 .533333 rgb
f
.75 lw
1539.93 368.672 mo
1644.03 368.672 li
0 0 0 rgb
@
1661.38 368.672 mo
1765.48 368.672 li
.729412 .631373 .533333 rgb
f
.5 lw
1661.38 368.672 mo
1765.48 368.672 li
0 0 0 rgb
@
1473.3 517.035 mo
1230.4 517.035 li
1230.4 510.922 li
1473.3 510.922 li
1473.3 517.035 li
cp
.772549 .886275 .929412 rgb
f
1473.3 517.035 mo
1230.4 517.035 li
1230.4 510.922 li
1473.3 510.922 li
1473.3 517.035 li
cp
0 0 0 rgb
@
1230.4 517.035 mo
1234.74 517.035 li
1234.74 510.922 li
1230.4 510.922 li
1230.4 517.035 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
1230.4 517.035 mo
1234.74 517.035 li
1234.74 510.922 li
1230.4 510.922 li
1230.4 517.035 li
cp
0 0 0 rgb
@
1348.09 517.035 mo
1355.61 517.035 li
1355.61 510.922 li
1348.09 510.922 li
1348.09 517.035 li
cp
.729412 .631373 .533333 rgb
f
1348.09 517.035 mo
1355.61 517.035 li
1355.61 510.922 li
1348.09 510.922 li
1348.09 517.035 li
cp
0 0 0 rgb
@
1468.96 517.035 mo
1473.3 517.035 li
1473.3 510.922 li
1468.96 510.922 li
1468.96 517.035 li
cp
.729412 .631373 .533333 rgb
f
1468.96 517.035 mo
1473.3 517.035 li
1473.3 510.922 li
1468.96 510.922 li
1468.96 517.035 li
cp
0 0 0 rgb
@
1230.4 525.708 mo
1221.73 525.708 li
1221.73 508.362 li
1230.4 508.362 li
1230.4 525.708 li
cp
.729412 .631373 .533333 rgb
f
1230.4 525.708 mo
1221.73 525.708 li
1221.73 508.362 li
1230.4 508.362 li
1230.4 525.708 li
cp
0 0 0 rgb
@
1481.98 525.708 mo
1473.3 525.708 li
1473.3 508.362 li
1481.98 508.362 li
1481.98 525.708 li
cp
.729412 .631373 .533333 rgb
f
1481.98 525.708 mo
1473.3 525.708 li
1473.3 508.362 li
1481.98 508.362 li
1481.98 525.708 li
cp
0 0 0 rgb
@
.5 lw
1473.3 525.708 mo
1230.4 525.708 li
1230.4 508.362 li
1473.3 508.362 li
1473.3 525.708 li
cp
@
1355.61 513.979 mo
1468.96 513.979 li
@
1234.74 513.979 mo
1348.09 513.979 li
@
1380.61 674.142 mo
1371.93 674.142 li
1371.93 656.796 li
1380.61 656.796 li
1380.61 674.142 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
1380.61 674.142 mo
1371.93 674.142 li
1371.93 656.796 li
1380.61 656.796 li
1380.61 674.142 li
cp
0 0 0 rgb
@
1632.18 674 mo
1623.51 674 li
1623.51 656.654 li
1632.18 656.654 li
1632.18 674 li
cp
.729412 .631373 .533333 rgb
f
1632.18 674 mo
1623.51 674 li
1623.51 656.654 li
1632.18 656.654 li
1632.18 674 li
cp
0 0 0 rgb
@
.5 lw
1623.51 674 mo
1380.61 674 li
1380.61 656.654 li
1623.51 656.654 li
1623.51 674 li
cp
@
1384.95 665.327 mo
1619.17 665.327 li
@
1384.95 671.441 mo
1619.17 671.441 li
1619.17 659.214 li
1384.95 659.214 li
1384.95 671.441 li
cp
.772549 .886275 .929412 rgb
f
1384.95 671.441 mo
1619.17 671.441 li
1619.17 659.214 li
1384.95 659.214 li
1384.95 671.441 li
cp
0 0 0 rgb
@
1619.17 671.583 mo
1623.51 671.583 li
1623.51 659.356 li
1619.17 659.356 li
1619.17 671.583 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
1619.17 671.583 mo
1623.51 671.583 li
1623.51 659.356 li
1619.17 659.356 li
1619.17 671.583 li
cp
0 0 0 rgb
@
1380.61 671.583 mo
1384.95 671.583 li
1384.95 659.356 li
1380.61 659.356 li
1380.61 671.583 li
cp
.729412 .631373 .533333 rgb
f
1380.61 671.583 mo
1384.95 671.583 li
1384.95 659.356 li
1380.61 659.356 li
1380.61 671.583 li
cp
0 0 0 rgb
@
1774.16 517.035 mo
1531.25 517.035 li
1531.25 510.922 li
1774.16 510.922 li
1774.16 517.035 li
cp
.772549 .886275 .929412 rgb
f
.5 lw
1774.16 517.035 mo
1531.25 517.035 li
1531.25 510.922 li
1774.16 510.922 li
1774.16 517.035 li
cp
0 0 0 rgb
@
1531.25 525.708 mo
1522.58 525.708 li
1522.58 508.362 li
1531.25 508.362 li
1531.25 525.708 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
1531.25 525.708 mo
1522.58 525.708 li
1522.58 508.362 li
1531.25 508.362 li
1531.25 525.708 li
cp
0 0 0 rgb
@
1782.83 525.708 mo
1774.16 525.708 li
1774.16 508.362 li
1782.83 508.362 li
1782.83 525.708 li
cp
.729412 .631373 .533333 rgb
f
1782.83 525.708 mo
1774.16 525.708 li
1774.16 508.362 li
1782.83 508.362 li
1782.83 525.708 li
cp
0 0 0 rgb
@
.5 lw
1774.16 525.708 mo
1531.25 525.708 li
1531.25 508.362 li
1774.16 508.362 li
1774.16 525.708 li
cp
@
1230.4 594.385 mo
1236.74 594.385 li
1236.74 588.048 li
1230.4 588.048 li
1230.4 594.385 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
1230.4 594.385 mo
1236.74 594.385 li
1236.74 588.048 li
1230.4 588.048 li
1230.4 594.385 li
cp
0 0 0 rgb
@
1466.96 594.385 mo
1473.3 594.385 li
1473.3 588.048 li
1466.96 588.048 li
1466.96 594.385 li
cp
.729412 .631373 .533333 rgb
f
1466.96 594.385 mo
1473.3 594.385 li
1473.3 588.048 li
1466.96 588.048 li
1466.96 594.385 li
cp
0 0 0 rgb
@
1230.4 599.89 mo
1221.73 599.89 li
1221.73 582.544 li
1230.4 582.544 li
1230.4 599.89 li
cp
.729412 .631373 .533333 rgb
f
1230.4 599.89 mo
1221.73 599.89 li
1221.73 582.544 li
1230.4 582.544 li
1230.4 599.89 li
cp
0 0 0 rgb
@
1481.98 599.89 mo
1473.3 599.89 li
1473.3 582.544 li
1481.98 582.544 li
1481.98 599.89 li
cp
.729412 .631373 .533333 rgb
f
1481.98 599.89 mo
1473.3 599.89 li
1473.3 582.544 li
1481.98 582.544 li
1481.98 599.89 li
cp
0 0 0 rgb
@
.5 lw
1473.3 599.89 mo
1230.4 599.89 li
1230.4 582.544 li
1473.3 582.544 li
1473.3 599.89 li
cp
@
1466.96 594.385 mo
1236.74 594.385 li
1236.74 588.048 li
1466.96 588.048 li
1466.96 594.385 li
cp
.772549 .886275 .929412 rgb
f
1466.96 594.385 mo
1236.74 594.385 li
1236.74 588.048 li
1466.96 588.048 li
1466.96 594.385 li
cp
0 0 0 rgb
@
1230.4 377.346 mo
1221.73 377.346 li
1221.73 359.999 li
1230.4 359.999 li
1230.4 377.346 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
1230.4 377.346 mo
1221.73 377.346 li
1221.73 359.999 li
1230.4 359.999 li
1230.4 377.346 li
cp
0 0 0 rgb
@
1481.98 377.346 mo
1473.3 377.346 li
1473.3 359.999 li
1481.98 359.999 li
1481.98 377.346 li
cp
.729412 .631373 .533333 rgb
f
1481.98 377.346 mo
1473.3 377.346 li
1473.3 359.999 li
1481.98 359.999 li
1481.98 377.346 li
cp
0 0 0 rgb
@
.5 lw
1473.3 377.346 mo
1230.4 377.346 li
1230.4 359.999 li
1473.3 359.999 li
1473.3 377.346 li
cp
@
1473.3 373.228 mo
1230.4 373.228 li
1230.4 364.117 li
1473.3 364.117 li
1473.3 373.228 li
cp
.772549 .886275 .929412 rgb
f
1473.3 373.228 mo
1230.4 373.228 li
1230.4 364.117 li
1473.3 364.117 li
1473.3 373.228 li
cp
0 0 0 rgb
@
1345.28 377.346 mo
1351.85 377.346 li
1351.85 359.999 li
1345.28 359.999 li
1345.28 377.346 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
1345.28 377.346 mo
1351.85 377.346 li
1351.85 359.999 li
1345.28 359.999 li
1345.28 377.346 li
cp
0 0 0 rgb
@
1230.4 373.228 mo
1239.08 373.228 li
1239.08 364.117 li
1230.4 364.117 li
1230.4 373.228 li
cp
.729412 .631373 .533333 rgb
f
1230.4 373.228 mo
1239.08 373.228 li
1239.08 364.117 li
1230.4 364.117 li
1230.4 373.228 li
cp
0 0 0 rgb
@
1336.6 373.228 mo
1345.28 373.228 li
1345.28 364.117 li
1336.6 364.117 li
1336.6 373.228 li
cp
.729412 .631373 .533333 rgb
f
1336.6 373.228 mo
1345.28 373.228 li
1345.28 364.117 li
1336.6 364.117 li
1336.6 373.228 li
cp
0 0 0 rgb
@
1358.43 373.228 mo
1367.1 373.228 li
1367.1 364.117 li
1358.43 364.117 li
1358.43 373.228 li
cp
.729412 .631373 .533333 rgb
f
1358.43 373.228 mo
1367.1 373.228 li
1367.1 364.117 li
1358.43 364.117 li
1358.43 373.228 li
cp
0 0 0 rgb
@
1351.85 377.346 mo
1358.43 377.346 li
1358.43 359.999 li
1351.85 359.999 li
1351.85 377.346 li
cp
.729412 .631373 .533333 rgb
f
1351.85 377.346 mo
1358.43 377.346 li
1358.43 359.999 li
1351.85 359.999 li
1351.85 377.346 li
cp
0 0 0 rgb
@
1464.63 373.228 mo
1473.3 373.228 li
1473.3 364.117 li
1464.63 364.117 li
1464.63 373.228 li
cp
.729412 .631373 .533333 rgb
f
1464.63 373.228 mo
1473.3 373.228 li
1473.3 364.117 li
1464.63 364.117 li
1464.63 373.228 li
cp
0 0 0 rgb
@
1239.08 368.672 mo
1336.6 368.672 li
.729412 .631373 .533333 rgb
f
.5 lw
1239.08 368.672 mo
1336.6 368.672 li
0 0 0 rgb
@
1367.1 368.672 mo
1464.63 368.672 li
.729412 .631373 .533333 rgb
f
1367.1 368.672 mo
1464.63 368.672 li
0 0 0 rgb
@
1323.17 451.527 mo
1314.5 451.527 li
1314.5 434.181 li
1323.17 434.181 li
1323.17 451.527 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
1323.17 451.527 mo
1314.5 451.527 li
1314.5 434.181 li
1323.17 434.181 li
1323.17 451.527 li
cp
0 0 0 rgb
@
1689.62 451.527 mo
1680.95 451.527 li
1680.95 434.181 li
1689.62 434.181 li
1689.62 451.527 li
cp
.729412 .631373 .533333 rgb
f
1689.62 451.527 mo
1680.95 451.527 li
1680.95 434.181 li
1689.62 434.181 li
1689.62 451.527 li
cp
0 0 0 rgb
@
.75 lw
1680.95 451.527 mo
1323.17 451.527 li
1323.17 434.181 li
1680.95 434.181 li
1680.95 451.527 li
cp
@
1680.95 447.409 mo
1323.17 447.409 li
1323.17 438.298 li
1680.95 438.298 li
1680.95 447.409 li
cp
.772549 .886275 .929412 rgb
f
1680.95 447.409 mo
1323.17 447.409 li
1323.17 438.298 li
1680.95 438.298 li
1680.95 447.409 li
cp
0 0 0 rgb
@
1438.05 451.527 mo
1444.62 451.527 li
1444.62 434.181 li
1438.05 434.181 li
1438.05 451.527 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
1438.05 451.527 mo
1444.62 451.527 li
1444.62 434.181 li
1438.05 434.181 li
1438.05 451.527 li
cp
0 0 0 rgb
@
1559.5 451.527 mo
1566.07 451.527 li
1566.07 434.181 li
1559.5 434.181 li
1559.5 451.527 li
cp
.729412 .631373 .533333 rgb
f
1559.5 451.527 mo
1566.07 451.527 li
1566.07 434.181 li
1559.5 434.181 li
1559.5 451.527 li
cp
0 0 0 rgb
@
1323.17 447.409 mo
1327.51 447.409 li
1327.51 438.298 li
1323.17 438.298 li
1323.17 447.409 li
cp
.729412 .631373 .533333 rgb
f
1323.17 447.409 mo
1327.51 447.409 li
1327.51 438.298 li
1323.17 438.298 li
1323.17 447.409 li
cp
0 0 0 rgb
@
1433.71 447.409 mo
1438.05 447.409 li
1438.05 438.298 li
1433.71 438.298 li
1433.71 447.409 li
cp
.729412 .631373 .533333 rgb
f
1433.71 447.409 mo
1438.05 447.409 li
1438.05 438.298 li
1433.71 438.298 li
1433.71 447.409 li
cp
0 0 0 rgb
@
1327.51 442.854 mo
1433.71 442.854 li
.729412 .631373 .533333 rgb
f
.75 lw
1327.51 442.854 mo
1433.71 442.854 li
0 0 0 rgb
@
1444.62 447.409 mo
1448.96 447.409 li
1448.96 438.298 li
1444.62 438.298 li
1444.62 447.409 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
1444.62 447.409 mo
1448.96 447.409 li
1448.96 438.298 li
1444.62 438.298 li
1444.62 447.409 li
cp
0 0 0 rgb
@
1555.16 447.409 mo
1559.5 447.409 li
1559.5 438.298 li
1555.16 438.298 li
1555.16 447.409 li
cp
.729412 .631373 .533333 rgb
f
1555.16 447.409 mo
1559.5 447.409 li
1559.5 438.298 li
1555.16 438.298 li
1555.16 447.409 li
cp
0 0 0 rgb
@
1448.96 442.854 mo
1555.16 442.854 li
.729412 .631373 .533333 rgb
f
.75 lw
1448.96 442.854 mo
1555.16 442.854 li
0 0 0 rgb
@
1566.07 447.409 mo
1570.41 447.409 li
1570.41 438.298 li
1566.07 438.298 li
1566.07 447.409 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
1566.07 447.409 mo
1570.41 447.409 li
1570.41 438.298 li
1566.07 438.298 li
1566.07 447.409 li
cp
0 0 0 rgb
@
1676.61 447.409 mo
1680.95 447.409 li
1680.95 438.298 li
1676.61 438.298 li
1676.61 447.409 li
cp
.729412 .631373 .533333 rgb
f
1676.61 447.409 mo
1680.95 447.409 li
1680.95 438.298 li
1676.61 438.298 li
1676.61 447.409 li
cp
0 0 0 rgb
@
1570.41 442.854 mo
1676.61 442.854 li
.729412 .631373 .533333 rgb
f
.75 lw
1570.41 442.854 mo
1676.61 442.854 li
0 0 0 rgb
@
1766.51 595.813 mo
1538.9 595.813 li
1538.9 586.621 li
1766.51 586.621 li
1766.51 595.813 li
cp
.772549 .886275 .929412 rgb
f
.5 lw
1766.51 595.813 mo
1538.9 595.813 li
1538.9 586.621 li
1766.51 586.621 li
1766.51 595.813 li
cp
0 0 0 rgb
@
1531.25 595.813 mo
1538.9 595.813 li
1538.9 586.621 li
1531.25 586.621 li
1531.25 595.813 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
1531.25 595.813 mo
1538.9 595.813 li
1538.9 586.621 li
1531.25 586.621 li
1531.25 595.813 li
cp
0 0 0 rgb
@
1648.63 595.813 mo
1656.27 595.813 li
1656.27 586.621 li
1648.63 586.621 li
1648.63 595.813 li
cp
.729412 .631373 .533333 rgb
f
1648.63 595.813 mo
1656.27 595.813 li
1656.27 586.621 li
1648.63 586.621 li
1648.63 595.813 li
cp
0 0 0 rgb
@
1766.51 595.813 mo
1774.16 595.813 li
1774.16 586.621 li
1766.51 586.621 li
1766.51 595.813 li
cp
.729412 .631373 .533333 rgb
f
1766.51 595.813 mo
1774.16 595.813 li
1774.16 586.621 li
1766.51 586.621 li
1766.51 595.813 li
cp
0 0 0 rgb
@
1531.25 599.89 mo
1522.58 599.89 li
1522.58 582.544 li
1531.25 582.544 li
1531.25 599.89 li
cp
.729412 .631373 .533333 rgb
f
1531.25 599.89 mo
1522.58 599.89 li
1522.58 582.544 li
1531.25 582.544 li
1531.25 599.89 li
cp
0 0 0 rgb
@
1782.83 599.89 mo
1774.16 599.89 li
1774.16 582.544 li
1782.83 582.544 li
1782.83 599.89 li
cp
.729412 .631373 .533333 rgb
f
1782.83 599.89 mo
1774.16 599.89 li
1774.16 582.544 li
1782.83 582.544 li
1782.83 599.89 li
cp
0 0 0 rgb
@
.5 lw
1774.16 599.89 mo
1531.25 599.89 li
1531.25 582.544 li
1774.16 582.544 li
1774.16 599.89 li
cp
@
1538.9 591.217 mo
1648.63 591.217 li
@
1656.53 591.217 mo
1766.51 591.217 li
@
1388.25 302.675 mo
1615.87 302.675 li
1615.87 293.483 li
1388.25 293.483 li
1388.25 302.675 li
cp
.772549 .886275 .929412 rgb
f
1388.25 302.675 mo
1615.87 302.675 li
1615.87 293.483 li
1388.25 293.483 li
1388.25 302.675 li
cp
0 0 0 rgb
@
1380.61 302.675 mo
1388.25 302.675 li
1388.25 293.483 li
1380.61 293.483 li
1380.61 302.675 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
1380.61 302.675 mo
1388.25 302.675 li
1388.25 293.483 li
1380.61 293.483 li
1380.61 302.675 li
cp
0 0 0 rgb
@
1497.98 302.675 mo
1505.62 302.675 li
1505.62 293.483 li
1497.98 293.483 li
1497.98 302.675 li
cp
.729412 .631373 .533333 rgb
f
1497.98 302.675 mo
1505.62 302.675 li
1505.62 293.483 li
1497.98 293.483 li
1497.98 302.675 li
cp
0 0 0 rgb
@
1615.87 302.675 mo
1623.51 302.675 li
1623.51 293.483 li
1615.87 293.483 li
1615.87 302.675 li
cp
.729412 .631373 .533333 rgb
f
1615.87 302.675 mo
1623.51 302.675 li
1623.51 293.483 li
1615.87 293.483 li
1615.87 302.675 li
cp
0 0 0 rgb
@
.5 lw
1623.51 306.752 mo
1380.61 306.752 li
1380.61 289.405 li
1623.51 289.405 li
1623.51 306.752 li
cp
@
1388.25 298.079 mo
1497.98 298.079 li
@
1505.89 298.079 mo
1615.87 298.079 li
@
1380.61 289.405 mo
1368.34 301.669 li
1373.42 306.753 li
1380.61 306.753 li
1380.61 289.405 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
2 lj
1380.61 289.405 mo
1368.34 301.669 li
1373.42 306.753 li
1380.61 306.753 li
1380.61 289.405 li
cp
0 0 0 rgb
@
1721.66 210.023 mo
1638.3 293.382 li
1631.8 286.882 li
1715.16 203.523 li
1721.66 210.023 li
cp
.772549 .886275 .929412 rgb
f
.5 lw
0 lj
1721.66 210.023 mo
1638.3 293.382 li
1631.8 286.882 li
1715.16 203.523 li
1721.66 210.023 li
cp
0 0 0 rgb
@
1721.66 210.023 mo
1716.25 215.426 li
1709.75 208.926 li
1715.16 203.523 li
1721.66 210.023 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
1721.66 210.023 mo
1716.25 215.426 li
1709.75 208.926 li
1715.16 203.523 li
1721.66 210.023 li
cp
0 0 0 rgb
@
1638.3 293.382 mo
1632.89 298.785 li
1626.39 292.285 li
1631.8 286.882 li
1638.3 293.382 li
cp
.729412 .631373 .533333 rgb
f
1638.3 293.382 mo
1632.89 298.785 li
1626.39 292.285 li
1631.8 286.882 li
1638.3 293.382 li
cp
0 0 0 rgb
@
1724.54 212.906 mo
1730.67 206.771 li
1718.41 194.506 li
1712.27 200.64 li
1724.54 212.906 li
cp
.729412 .631373 .533333 rgb
f
1724.54 212.906 mo
1730.67 206.771 li
1718.41 194.506 li
1712.27 200.64 li
1724.54 212.906 li
cp
0 0 0 rgb
@
.5 lw
1635.78 301.668 mo
1730.67 206.771 li
1718.41 194.506 li
1623.51 289.403 li
1635.78 301.668 li
cp
@
1713 212.176 mo
1635.05 290.132 li
@
1365.82 293.382 mo
1282.46 210.023 li
1288.96 203.523 li
1372.32 286.882 li
1365.82 293.382 li
cp
.772549 .886275 .929412 rgb
f
1365.82 293.382 mo
1282.46 210.023 li
1288.96 203.523 li
1372.32 286.882 li
1365.82 293.382 li
cp
0 0 0 rgb
@
1282.46 210.023 mo
1287.86 215.426 li
1294.36 208.926 li
1288.96 203.523 li
1282.46 210.023 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
1282.46 210.023 mo
1287.86 215.426 li
1294.36 208.926 li
1288.96 203.523 li
1282.46 210.023 li
cp
0 0 0 rgb
@
1365.82 293.382 mo
1371.22 298.785 li
1377.72 292.285 li
1372.32 286.882 li
1365.82 293.382 li
cp
.729412 .631373 .533333 rgb
f
1365.82 293.382 mo
1371.22 298.785 li
1377.72 292.285 li
1372.32 286.882 li
1365.82 293.382 li
cp
0 0 0 rgb
@
1279.58 212.906 mo
1273.44 206.771 li
1285.71 194.506 li
1291.84 200.64 li
1279.58 212.906 li
cp
.729412 .631373 .533333 rgb
f
1279.58 212.906 mo
1273.44 206.771 li
1285.71 194.506 li
1291.84 200.64 li
1279.58 212.906 li
cp
0 0 0 rgb
@
.5 lw
1368.34 301.668 mo
1273.44 206.771 li
1285.71 194.506 li
1380.6 289.403 li
1368.34 301.668 li
cp
@
1291.11 212.176 mo
1369.07 290.132 li
@
1623.51 289.405 mo
1635.78 301.669 li
1630.69 306.753 li
1623.51 306.753 li
1623.51 289.405 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
2 lj
1623.51 289.405 mo
1635.78 301.669 li
1630.69 306.753 li
1623.51 306.753 li
1623.51 289.405 li
cp
0 0 0 rgb
@
118.158 334.826 mo
110.446 334.826 li
110.446 314.648 li
118.158 314.648 li
118.158 334.826 li
cp
.729412 .631373 .533333 rgb
f
0 lj
118.158 334.826 mo
110.446 334.826 li
110.446 314.648 li
118.158 314.648 li
118.158 334.826 li
cp
0 0 0 rgb
@
124.062 320.064 mo
118.427 314.429 li
167.681 265.176 li
173.315 270.811 li
124.062 320.064 li
cp
.729412 .631373 .533333 rgb
f
124.062 320.064 mo
118.427 314.429 li
167.681 265.176 li
173.315 270.811 li
124.062 320.064 li
cp
0 0 0 rgb
@
173.307 270.811 mo
178.942 265.176 li
228.195 314.429 li
222.56 320.064 li
173.307 270.811 li
cp
.729412 .631373 .533333 rgb
f
173.307 270.811 mo
178.942 265.176 li
228.195 314.429 li
222.56 320.064 li
173.307 270.811 li
cp
0 0 0 rgb
@
412.199 334.826 mo
419.911 334.826 li
419.911 314.648 li
412.199 314.648 li
412.199 334.826 li
cp
.729412 .631373 .533333 rgb
f
412.199 334.826 mo
419.911 334.826 li
419.911 314.648 li
412.199 314.648 li
412.199 334.826 li
cp
0 0 0 rgb
@
406.294 320.064 mo
411.929 314.429 li
362.676 265.176 li
357.041 270.811 li
406.294 320.064 li
cp
.729412 .631373 .533333 rgb
f
406.294 320.064 mo
411.929 314.429 li
362.676 265.176 li
357.041 270.811 li
406.294 320.064 li
cp
0 0 0 rgb
@
357.05 270.811 mo
351.415 265.176 li
302.162 314.429 li
307.797 320.064 li
357.05 270.811 li
cp
.729412 .631373 .533333 rgb
f
357.05 270.811 mo
351.415 265.176 li
302.162 314.429 li
307.797 320.064 li
357.05 270.811 li
cp
0 0 0 rgb
@
.362093 lw
129.479 314.648 mo
216.899 314.648 li
@
.5 lw
412.199 314.648 mo
412.199 322.617 li
118.158 322.617 li
118.158 314.648 li
@
.362093 lw
313.213 314.648 mo
400.996 314.648 li
@
.5 lw
227.976 314.648 mo
302.126 314.648 li
@
166.367 532.301 mo
160.197 532.301 li
160.197 454.417 li
166.367 454.417 li
166.367 532.301 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
166.367 532.301 mo
160.197 532.301 li
160.197 454.417 li
166.367 454.417 li
166.367 532.301 li
cp
0 0 0 rgb
@
377.935 532.301 mo
371.509 532.301 li
371.509 392.213 li
377.935 392.213 li
377.935 532.301 li
cp
.729412 .631373 .533333 rgb
f
377.935 532.301 mo
371.509 532.301 li
371.509 392.213 li
377.935 392.213 li
377.935 532.301 li
cp
0 0 0 rgb
@
160.197 552.478 mo
152.485 552.478 li
152.485 532.301 li
160.197 532.301 li
160.197 552.478 li
cp
.729412 .631373 .533333 rgb
f
160.197 552.478 mo
152.485 552.478 li
152.485 532.301 li
160.197 532.301 li
160.197 552.478 li
cp
0 0 0 rgb
@
385.648 552.478 mo
377.936 552.478 li
377.936 532.301 li
385.648 532.301 li
385.648 552.478 li
cp
.729412 .631373 .533333 rgb
f
385.648 552.478 mo
377.936 552.478 li
377.936 532.301 li
385.648 532.301 li
385.648 552.478 li
cp
0 0 0 rgb
@
.5 lw
237.961 532.301 mo
237.961 489.287 203.211 454.417 160.197 454.417 cv
@
237.961 532.301 mo
237.961 455.077 300.444 392.213 377.668 392.213 cv
@
554.299 494.884 mo
546.33 494.884 li
546.33 378.186 li
554.299 378.186 li
554.299 494.884 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
554.299 494.884 mo
546.33 494.884 li
546.33 378.186 li
554.299 378.186 li
554.299 494.884 li
cp
0 0 0 rgb
@
.5 lw
663.027 494.884 mo
663.027 430.434 610.78 378.186 546.33 378.186 cv
@
771.755 494.884 mo
779.724 494.884 li
779.724 378.186 li
771.755 378.186 li
771.755 494.884 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
771.755 494.884 mo
779.724 494.884 li
779.724 378.186 li
771.755 378.186 li
771.755 494.884 li
cp
0 0 0 rgb
@
.5 lw
663.027 494.884 mo
663.027 430.434 715.274 378.186 779.724 378.186 cv
@
546.33 515.061 mo
538.618 515.061 li
538.618 494.884 li
546.33 494.884 li
546.33 515.061 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
546.33 515.061 mo
538.618 515.061 li
538.618 494.884 li
546.33 494.884 li
546.33 515.061 li
cp
0 0 0 rgb
@
787.436 515.061 mo
779.724 515.061 li
779.724 494.884 li
787.436 494.884 li
787.436 515.061 li
cp
.729412 .631373 .533333 rgb
f
787.436 515.061 mo
779.724 515.061 li
779.724 494.884 li
787.436 494.884 li
787.436 515.061 li
cp
0 0 0 rgb
@
960.801 494.898 mo
952.832 494.898 li
952.832 363.6 li
960.801 363.6 li
960.801 494.898 li
cp
.729412 .631373 .533333 rgb
f
960.801 494.898 mo
952.832 494.898 li
952.832 363.6 li
960.801 363.6 li
960.801 494.898 li
cp
0 0 0 rgb
@
.5 lw
1092.1 494.898 mo
1092.1 422.384 1033.31 363.6 960.801 363.6 cv
@
952.79 515.061 mo
945.078 515.061 li
945.078 494.884 li
952.79 494.884 li
952.79 515.061 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
952.79 515.061 mo
945.078 515.061 li
945.078 494.884 li
952.79 494.884 li
952.79 515.061 li
cp
0 0 0 rgb
@
1099.81 515.061 mo
1092.1 515.061 li
1092.1 494.884 li
1099.81 494.884 li
1099.81 515.061 li
cp
.729412 .631373 .533333 rgb
f
1099.81 515.061 mo
1092.1 515.061 li
1092.1 494.884 li
1099.81 494.884 li
1099.81 515.061 li
cp
0 0 0 rgb
@
.5 lw
1156.02 999.924 mo
1243 999.924 li
@
1254.29 999.924 mo
1283.78 999.924 li
1283.78 1007.89 li
1144.48 1007.89 li
1144.48 999.924 li
@
1144.48 1020.1 mo
1136.76 1020.1 li
1136.76 999.924 li
1144.48 999.924 li
1144.48 1020.1 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
1144.48 1020.1 mo
1136.76 1020.1 li
1136.76 999.924 li
1144.48 999.924 li
1144.48 1020.1 li
cp
0 0 0 rgb
@
1291.5 1020.1 mo
1283.78 1020.1 li
1283.78 999.924 li
1291.5 999.924 li
1291.5 1020.1 li
cp
.729412 .631373 .533333 rgb
f
1291.5 1020.1 mo
1283.78 1020.1 li
1283.78 999.924 li
1291.5 999.924 li
1291.5 1020.1 li
cp
0 0 0 rgb
@
1150.38 1005.34 mo
1144.75 999.705 li
1194 950.452 li
1199.63 956.087 li
1150.38 1005.34 li
cp
.729412 .631373 .533333 rgb
f
1150.38 1005.34 mo
1144.75 999.705 li
1194 950.452 li
1199.63 956.087 li
1150.38 1005.34 li
cp
0 0 0 rgb
@
1199.62 956.087 mo
1205.26 950.452 li
1254.51 999.705 li
1248.88 1005.34 li
1199.62 956.087 li
cp
.729412 .631373 .533333 rgb
f
1199.62 956.087 mo
1205.26 950.452 li
1254.51 999.705 li
1248.88 1005.34 li
1199.62 956.087 li
cp
0 0 0 rgb
@
932.793 1004.8 mo
932.793 1012.77 li
801.495 1012.77 li
801.495 1004.8 li
932.793 1004.8 li
cp
.729412 .631373 .533333 rgb
f
932.793 1004.8 mo
932.793 1012.77 li
801.495 1012.77 li
801.495 1004.8 li
932.793 1004.8 li
cp
0 0 0 rgb
@
1065.42 1004.8 mo
1065.42 1012.77 li
934.119 1012.77 li
934.119 1004.8 li
1065.42 1004.8 li
cp
.729412 .631373 .533333 rgb
f
1065.42 1004.8 mo
1065.42 1012.77 li
934.119 1012.77 li
934.119 1004.8 li
1065.42 1004.8 li
cp
0 0 0 rgb
@
.5 lw
1065.42 1004.8 mo
1065.42 932.289 1005.97 873.505 933.456 873.505 cv
860.943 873.505 801.495 932.289 801.495 1004.8 cv
@
942.296 1013.63 mo
942.296 1021.34 li
925.217 1021.34 li
925.217 1013.63 li
942.296 1013.63 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
942.296 1013.63 mo
942.296 1021.34 li
925.217 1021.34 li
925.217 1013.63 li
942.296 1013.63 li
cp
0 0 0 rgb
@
941.54 865.793 mo
941.54 873.505 li
924.46 873.505 li
924.46 865.793 li
941.54 865.793 li
cp
.729412 .631373 .533333 rgb
f
941.54 865.793 mo
941.54 873.505 li
924.46 873.505 li
924.46 865.793 li
941.54 865.793 li
cp
0 0 0 rgb
@
141.614 905.379 mo
135.978 899.744 li
228.82 806.902 li
234.455 812.537 li
141.614 905.379 li
cp
.729412 .631373 .533333 rgb
f
141.614 905.379 mo
135.978 899.744 li
228.82 806.902 li
234.455 812.537 li
141.614 905.379 li
cp
0 0 0 rgb
@
141.614 920.092 mo
135.978 925.727 li
228.82 1018.57 li
234.455 1012.93 li
141.614 920.092 li
cp
.729412 .631373 .533333 rgb
f
141.614 920.092 mo
135.978 925.727 li
228.82 1018.57 li
234.455 1012.93 li
141.614 920.092 li
cp
0 0 0 rgb
@
267.883 899.542 mo
267.883 899.542 275.596 899.542 275.898 899.542 cv
275.898 925.815 li
275.596 925.815 267.883 925.815 267.883 925.815 cv
267.883 899.542 li
cp
.729412 .631373 .533333 rgb
f
267.883 899.542 mo
267.883 899.542 275.596 899.542 275.898 899.542 cv
275.898 925.815 li
275.596 925.815 267.883 925.815 267.883 925.815 cv
267.883 899.542 li
cp
0 0 0 rgb
@
135.993 899.542 mo
135.993 899.542 128.281 899.542 127.979 899.542 cv
127.979 925.815 li
135.993 925.815 li
135.993 899.542 li
cp
.729412 .631373 .533333 rgb
f
135.993 899.542 mo
135.993 899.542 128.281 899.542 127.979 899.542 cv
127.979 925.815 li
135.993 925.815 li
135.993 899.542 li
cp
0 0 0 rgb
@
.5 lw
234.495 811.605 mo
255.267 834.998 267.883 865.797 267.883 899.542 cv
@
234.495 1013.3 mo
255.267 989.906 267.883 959.107 267.883 925.362 cv
@
389.557 721.29 mo
393.092 715.168 li
318.516 672.112 li
314.982 678.234 li
389.557 721.29 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
389.557 721.29 mo
393.092 715.168 li
318.516 672.112 li
314.982 678.234 li
389.557 721.29 li
cp
0 0 0 rgb
@
393.092 737.369 mo
401.576 737.369 li
401.576 715.173 li
393.092 715.173 li
393.092 737.369 li
cp
.729412 .631373 .533333 rgb
f
393.092 737.369 mo
401.576 737.369 li
401.576 715.173 li
393.092 715.173 li
393.092 737.369 li
cp
0 0 0 rgb
@
145.097 737.369 mo
153.58 737.369 li
153.58 715.173 li
145.097 715.173 li
145.097 737.369 li
cp
.729412 .631373 .533333 rgb
f
145.097 737.369 mo
153.58 737.369 li
153.58 715.173 li
145.097 715.173 li
145.097 737.369 li
cp
0 0 0 rgb
@
.5 lw
286.886 637.984 mo
300.419 660.322 307.552 687.071 307.552 715.173 cv
307.552 699.775 309.785 685.64 318.516 672.112 cv
@
153.58 715.163 mo
157.115 721.285 li
290.55 644.247 li
287.015 638.124 li
153.58 715.163 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
153.58 715.163 mo
157.115 721.285 li
290.55 644.247 li
287.015 638.124 li
153.58 715.163 li
cp
0 0 0 rgb
@
.5 lw
698.971 651.022 mo
688.06 669.896 681.816 691.805 681.816 715.173 cv
@
553.449 737.369 mo
544.966 737.369 li
544.966 715.173 li
553.449 715.173 li
553.449 737.369 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
553.449 737.369 mo
544.966 737.369 li
544.966 715.173 li
553.449 715.173 li
553.449 737.369 li
cp
0 0 0 rgb
@
818.666 737.369 mo
810.183 737.369 li
810.183 715.173 li
818.666 715.173 li
818.666 737.369 li
cp
.729412 .631373 .533333 rgb
f
818.666 737.369 mo
810.183 737.369 li
810.183 715.173 li
818.666 715.173 li
818.666 737.369 li
cp
0 0 0 rgb
@
810.183 715.173 mo
806.648 721.295 li
695.479 657.112 li
699.014 650.99 li
810.183 715.173 li
cp
.729412 .631373 .533333 rgb
f
810.183 715.173 mo
806.648 721.295 li
695.479 657.112 li
699.014 650.99 li
810.183 715.173 li
cp
0 0 0 rgb
@
.5 lw
664.661 651.022 mo
675.572 669.896 681.816 691.805 681.816 715.173 cv
@
553.449 715.173 mo
556.984 721.295 li
668.152 657.112 li
664.618 650.99 li
553.449 715.173 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
553.449 715.173 mo
556.984 721.295 li
668.152 657.112 li
664.618 650.99 li
553.449 715.173 li
cp
0 0 0 rgb
@
.5 lw
1091.33 715.173 mo
1091.33 689.242 1083.97 664.922 1072 643.886 cv
@
946.9 737.369 mo
938.417 737.369 li
938.417 715.173 li
946.9 715.173 li
946.9 737.369 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
946.9 737.369 mo
938.417 737.369 li
938.417 715.173 li
946.9 715.173 li
946.9 737.369 li
cp
0 0 0 rgb
@
1099.81 737.369 mo
1091.33 737.369 li
1091.33 715.173 li
1099.81 715.173 li
1099.81 737.369 li
cp
.729412 .631373 .533333 rgb
f
1099.81 737.369 mo
1091.33 737.369 li
1091.33 715.173 li
1099.81 715.173 li
1099.81 737.369 li
cp
0 0 0 rgb
@
950.435 721.466 mo
946.9 715.343 li
1071.55 643.374 li
1075.09 649.497 li
950.435 721.466 li
cp
.729412 .631373 .533333 rgb
f
950.435 721.466 mo
946.9 715.343 li
1071.55 643.374 li
1075.09 649.497 li
950.435 721.466 li
cp
0 0 0 rgb
@
732.84 919.935 mo
737.223 912.344 li
612.146 840.13 li
607.763 847.721 li
732.84 919.935 li
cp
.729412 .631373 .533333 rgb
f
732.84 919.935 mo
737.223 912.344 li
612.146 840.13 li
607.763 847.721 li
732.84 919.935 li
cp
0 0 0 rgb
@
592.121 912.299 mo
592.121 912.299 583.638 912.299 583.306 912.299 cv
583.306 941.2 li
583.638 941.2 592.121 941.2 592.121 941.2 cv
592.121 912.299 li
cp
.729412 .631373 .533333 rgb
f
592.121 912.299 mo
592.121 912.299 583.638 912.299 583.306 912.299 cv
583.306 941.2 li
583.638 941.2 592.121 941.2 592.121 941.2 cv
592.121 912.299 li
cp
0 0 0 rgb
@
737.201 912.299 mo
737.201 912.299 745.684 912.299 746.017 912.299 cv
746.017 941.2 li
737.201 941.2 li
737.201 912.299 li
cp
.729412 .631373 .533333 rgb
f
737.201 912.299 mo
737.201 912.299 745.684 912.299 746.017 912.299 cv
746.017 941.2 li
737.201 941.2 li
737.201 912.299 li
cp
0 0 0 rgb
@
.5 lw
612.146 840.13 mo
599.469 860.136 592.121 887.46 592.121 912.299 cv
@
612.146 1013.28 mo
599.469 993.271 592.121 965.946 592.121 941.107 cv
@
732.84 933.494 mo
737.223 941.085 li
612.146 1013.3 li
607.763 1005.71 li
732.84 933.494 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
732.84 933.494 mo
737.223 941.085 li
612.146 1013.3 li
607.763 1005.71 li
732.84 933.494 li
cp
0 0 0 rgb
@
.5 lw
982.945 256.027 mo
982.945 213.014 948.195 178.144 905.181 178.144 cv
@
982.945 256.027 mo
982.945 178.804 1045.43 115.94 1122.65 115.94 cv
@
890.127 255.904 mo
903.934 255.904 li
903.934 252.819 li
890.127 252.819 li
890.127 255.904 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
890.127 255.904 mo
903.934 255.904 li
903.934 252.819 li
890.127 252.819 li
890.127 255.904 li
cp
0 0 0 rgb
@
890.127 282.379 mo
903.934 282.379 li
903.934 279.295 li
890.127 279.295 li
890.127 282.379 li
cp
.729412 .631373 .533333 rgb
f
890.127 282.379 mo
903.934 282.379 li
903.934 279.295 li
890.127 279.295 li
890.127 282.379 li
cp
0 0 0 rgb
@
905.219 255.904 mo
905.219 262.845 li
907.79 262.845 li
907.79 279.295 li
905.219 279.295 li
896.05 279.295 li
896.05 255.904 li
905.219 255.904 li
cp
.729412 .631373 .533333 rgb
f
905.219 255.904 mo
905.219 262.845 li
907.79 262.845 li
907.79 279.295 li
905.219 279.295 li
896.05 279.295 li
896.05 255.904 li
905.219 255.904 li
cp
0 0 0 rgb
@
1137.95 255.904 mo
1124.15 255.904 li
1124.15 252.819 li
1137.95 252.819 li
1137.95 255.904 li
cp
.729412 .631373 .533333 rgb
f
1137.95 255.904 mo
1124.15 255.904 li
1124.15 252.819 li
1137.95 252.819 li
1137.95 255.904 li
cp
0 0 0 rgb
@
1137.95 282.379 mo
1124.15 282.379 li
1124.15 279.295 li
1137.95 279.295 li
1137.95 282.379 li
cp
.729412 .631373 .533333 rgb
f
1137.95 282.379 mo
1124.15 282.379 li
1124.15 279.295 li
1137.95 279.295 li
1137.95 282.379 li
cp
0 0 0 rgb
@
1122.86 255.904 mo
1122.86 262.845 li
1120.29 262.845 li
1120.29 279.295 li
1122.86 279.295 li
1132.03 279.295 li
1132.03 255.904 li
1122.86 255.904 li
cp
.729412 .631373 .533333 rgb
f
1122.86 255.904 mo
1122.86 262.845 li
1120.29 262.845 li
1120.29 279.295 li
1122.86 279.295 li
1132.03 279.295 li
1132.03 255.904 li
1122.86 255.904 li
cp
0 0 0 rgb
@
905.181 256.027 mo
913.15 256.027 li
913.15 178.144 li
905.181 178.144 li
905.181 256.027 li
cp
.729412 .631373 .533333 rgb
f
905.181 256.027 mo
913.15 256.027 li
913.15 178.144 li
905.181 178.144 li
905.181 256.027 li
cp
0 0 0 rgb
@
1114.95 256.027 mo
1122.92 256.027 li
1122.92 115.924 li
1114.95 115.924 li
1114.95 256.027 li
cp
.729412 .631373 .533333 rgb
f
1114.95 256.027 mo
1122.92 256.027 li
1122.92 115.924 li
1114.95 115.924 li
1114.95 256.027 li
cp
0 0 0 rgb
@
554.273 255.892 mo
546.304 255.892 li
546.304 139.195 li
554.273 139.195 li
554.273 255.892 li
cp
.729412 .631373 .533333 rgb
f
554.273 255.892 mo
546.304 255.892 li
546.304 139.195 li
554.273 139.195 li
554.273 255.892 li
cp
0 0 0 rgb
@
.5 lw
663.001 255.892 mo
663.001 191.442 610.754 139.195 546.304 139.195 cv
@
771.729 255.892 mo
779.698 255.892 li
779.698 139.195 li
771.729 139.195 li
771.729 255.892 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
771.729 255.892 mo
779.698 255.892 li
779.698 139.195 li
771.729 139.195 li
771.729 255.892 li
cp
0 0 0 rgb
@
.5 lw
663.001 255.892 mo
663.001 191.442 715.248 139.195 779.698 139.195 cv
@
531.245 255.904 mo
545.052 255.904 li
545.052 252.82 li
531.245 252.82 li
531.245 255.904 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
531.245 255.904 mo
545.052 255.904 li
545.052 252.82 li
531.245 252.82 li
531.245 255.904 li
cp
0 0 0 rgb
@
531.245 282.379 mo
545.052 282.379 li
545.052 279.295 li
531.245 279.295 li
531.245 282.379 li
cp
.729412 .631373 .533333 rgb
f
531.245 282.379 mo
545.052 282.379 li
545.052 279.295 li
531.245 279.295 li
531.245 282.379 li
cp
0 0 0 rgb
@
546.338 255.904 mo
546.338 262.845 li
548.908 262.845 li
548.908 279.295 li
546.338 279.295 li
537.168 279.295 li
537.168 255.904 li
546.338 255.904 li
cp
.729412 .631373 .533333 rgb
f
546.338 255.904 mo
546.338 262.845 li
548.908 262.845 li
548.908 279.295 li
546.338 279.295 li
537.168 279.295 li
537.168 255.904 li
546.338 255.904 li
cp
0 0 0 rgb
@
794.808 255.904 mo
781.001 255.904 li
781.001 252.82 li
794.808 252.82 li
794.808 255.904 li
cp
.729412 .631373 .533333 rgb
f
794.808 255.904 mo
781.001 255.904 li
781.001 252.82 li
794.808 252.82 li
794.808 255.904 li
cp
0 0 0 rgb
@
794.808 282.379 mo
781.001 282.379 li
781.001 279.295 li
794.808 279.295 li
794.808 282.379 li
cp
.729412 .631373 .533333 rgb
f
794.808 282.379 mo
781.001 282.379 li
781.001 279.295 li
794.808 279.295 li
794.808 282.379 li
cp
0 0 0 rgb
@
779.716 255.904 mo
779.716 262.845 li
777.146 262.845 li
777.146 279.295 li
779.716 279.295 li
788.885 279.295 li
788.885 255.904 li
779.716 255.904 li
cp
.729412 .631373 .533333 rgb
f
779.716 255.904 mo
779.716 262.845 li
777.146 262.845 li
777.146 279.295 li
779.716 279.295 li
788.885 279.295 li
788.885 255.904 li
779.716 255.904 li
cp
0 0 0 rgb
@
1309.58 784.188 mo
1315.22 789.823 li
1222.38 882.664 li
1216.74 877.029 li
1309.58 784.188 li
cp
.729412 .631373 .533333 rgb
f
1309.58 784.188 mo
1315.22 789.823 li
1222.38 882.664 li
1216.74 877.029 li
1309.58 784.188 li
cp
0 0 0 rgb
@
1309.59 769.618 mo
1315.23 763.982 li
1222.39 671.141 li
1216.75 676.776 li
1309.59 769.618 li
cp
.729412 .631373 .533333 rgb
f
1309.59 769.618 mo
1315.23 763.982 li
1222.39 671.141 li
1216.75 676.776 li
1309.59 769.618 li
cp
0 0 0 rgb
@
.603489 lw
1216.74 877.029 mo
1195.97 853.637 1183.31 823.77 1183.31 790.025 cv
@
.5 lw
1216.75 676.776 mo
1195.98 700.169 1183.31 730.459 1183.31 764.205 cv
@
1315.22 782.063 mo
1315.22 789.82 li
1315.22 789.82 1322.93 789.82 1323.23 789.82 cv
1323.23 763.981 li
1315.22 763.981 li
1315.22 771.583 li
1311.92 771.583 li
1311.92 782.063 li
1315.22 782.063 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
1315.22 782.063 mo
1315.22 789.82 li
1315.22 789.82 1322.93 789.82 1323.23 789.82 cv
1323.23 763.981 li
1315.22 763.981 li
1315.22 771.583 li
1311.92 771.583 li
1311.92 782.063 li
1315.22 782.063 li
cp
0 0 0 rgb
@
1316.33 789.82 mo
1330.14 789.82 li
1330.14 792.904 li
1316.33 792.904 li
1316.33 789.82 li
cp
.729412 .631373 .533333 rgb
f
1316.33 789.82 mo
1330.14 789.82 li
1330.14 792.904 li
1316.33 792.904 li
1316.33 789.82 li
cp
0 0 0 rgb
@
1316.33 760.896 mo
1330.14 760.896 li
1330.14 763.981 li
1316.33 763.981 li
1316.33 760.896 li
cp
.729412 .631373 .533333 rgb
f
1316.33 760.896 mo
1330.14 760.896 li
1330.14 763.981 li
1316.33 763.981 li
1316.33 760.896 li
cp
0 0 0 rgb
@
1168.4 790.025 mo
1182.2 790.025 li
1182.2 793.109 li
1168.4 793.109 li
1168.4 790.025 li
cp
.729412 .631373 .533333 rgb
f
1168.4 790.025 mo
1182.2 790.025 li
1182.2 793.109 li
1168.4 793.109 li
1168.4 790.025 li
cp
0 0 0 rgb
@
1168.4 760.667 mo
1182.2 760.667 li
1182.2 763.752 li
1168.4 763.752 li
1168.4 760.667 li
cp
.729412 .631373 .533333 rgb
f
1168.4 760.667 mo
1182.2 760.667 li
1182.2 763.752 li
1168.4 763.752 li
1168.4 760.667 li
cp
0 0 0 rgb
@
1183.31 782.138 mo
1183.31 790.025 li
1183.31 790.025 1175.6 790.025 1175.3 790.025 cv
1175.3 763.752 li
1175.6 763.752 1183.31 763.752 1183.31 763.752 cv
1183.31 771.481 li
1186.62 771.481 li
1186.62 782.138 li
1183.31 782.138 li
cp
.729412 .631373 .533333 rgb
f
1183.31 782.138 mo
1183.31 790.025 li
1183.31 790.025 1175.6 790.025 1175.3 790.025 cv
1175.3 763.752 li
1175.6 763.752 1183.31 763.752 1183.31 763.752 cv
1183.31 771.481 li
1186.62 771.481 li
1186.62 782.138 li
1183.31 782.138 li
cp
0 0 0 rgb
@
487.654 986.871 mo
495.623 986.871 li
495.623 855.573 li
487.654 855.573 li
487.654 986.871 li
cp
.729412 .631373 .533333 rgb
f
487.654 986.871 mo
495.623 986.871 li
495.623 855.573 li
487.654 855.573 li
487.654 986.871 li
cp
0 0 0 rgb
@
.5 lw
356.356 986.871 mo
356.356 914.357 415.14 855.573 487.654 855.573 cv
@
510.728 986.819 mo
496.922 986.819 li
496.922 983.735 li
510.728 983.735 li
510.728 986.819 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
510.728 986.819 mo
496.922 986.819 li
496.922 983.735 li
510.728 983.735 li
510.728 986.819 li
cp
0 0 0 rgb
@
510.728 1013.29 mo
496.922 1013.29 li
496.922 1010.21 li
510.728 1010.21 li
510.728 1013.29 li
cp
.729412 .631373 .533333 rgb
f
510.728 1013.29 mo
496.922 1013.29 li
496.922 1010.21 li
510.728 1010.21 li
510.728 1013.29 li
cp
0 0 0 rgb
@
495.636 986.819 mo
495.636 993.76 li
493.065 993.76 li
493.065 1010.21 li
495.636 1010.21 li
504.805 1010.21 li
504.805 986.819 li
495.636 986.819 li
cp
.729412 .631373 .533333 rgb
f
495.636 986.819 mo
495.636 993.76 li
493.065 993.76 li
493.065 1010.21 li
495.636 1010.21 li
504.805 1010.21 li
504.805 986.819 li
495.636 986.819 li
cp
0 0 0 rgb
@
341.139 986.819 mo
354.945 986.819 li
354.945 983.735 li
341.139 983.735 li
341.139 986.819 li
cp
.729412 .631373 .533333 rgb
f
341.139 986.819 mo
354.945 986.819 li
354.945 983.735 li
341.139 983.735 li
341.139 986.819 li
cp
0 0 0 rgb
@
341.139 1013.29 mo
354.945 1013.29 li
354.945 1010.21 li
341.139 1010.21 li
341.139 1013.29 li
cp
.729412 .631373 .533333 rgb
f
341.139 1013.29 mo
354.945 1013.29 li
354.945 1010.21 li
341.139 1010.21 li
341.139 1013.29 li
cp
0 0 0 rgb
@
356.231 986.819 mo
356.231 993.76 li
358.801 993.76 li
358.801 1010.21 li
356.231 1010.21 li
347.061 1010.21 li
347.061 986.819 li
356.231 986.819 li
cp
.729412 .631373 .533333 rgb
f
356.231 986.819 mo
356.231 993.76 li
358.801 993.76 li
358.801 1010.21 li
356.231 1010.21 li
347.061 1010.21 li
347.061 986.819 li
356.231 986.819 li
cp
0 0 0 rgb
@
1473.17 999.938 mo
1465.2 999.938 li
1465.2 868.64 li
1473.17 868.64 li
1473.17 999.938 li
cp
.729412 .631373 .533333 rgb
f
1473.17 999.938 mo
1465.2 999.938 li
1465.2 868.64 li
1473.17 868.64 li
1473.17 999.938 li
cp
0 0 0 rgb
@
.5 lw
1604.47 999.938 mo
1604.47 927.424 1545.69 868.64 1473.17 868.64 cv
@
1465.16 1020.1 mo
1457.45 1020.1 li
1457.45 999.924 li
1465.16 999.924 li
1465.16 1020.1 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
1465.16 1020.1 mo
1457.45 1020.1 li
1457.45 999.924 li
1465.16 999.924 li
1465.16 1020.1 li
cp
0 0 0 rgb
@
1612.18 1020.1 mo
1604.47 1020.1 li
1604.47 999.924 li
1612.18 999.924 li
1612.18 1020.1 li
cp
.729412 .631373 .533333 rgb
f
1612.18 1020.1 mo
1604.47 1020.1 li
1604.47 999.924 li
1612.18 999.924 li
1612.18 1020.1 li
cp
0 0 0 rgb
@
.5 lw
1690.43 1020.1 mo
1619.9 1020.1 li
1619.9 999.924 li
1690.43 999.924 li
1690.43 1020.1 li
cp
@
1690.43 1015.31 mo
1619.9 1015.31 li
1619.9 1004.71 li
1690.43 1004.71 li
1690.43 1015.31 li
cp
.772549 .886275 .929412 rgb
f
.75 lw
1690.43 1015.31 mo
1619.9 1015.31 li
1619.9 1004.71 li
1690.43 1004.71 li
1690.43 1015.31 li
cp
0 0 0 rgb
@
1650.57 1015.31 mo
1655.16 1015.31 li
1655.16 1004.71 li
1650.57 1004.71 li
1650.57 1015.31 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
1650.57 1015.31 mo
1655.16 1015.31 li
1655.16 1004.71 li
1650.57 1004.71 li
1650.57 1015.31 li
cp
0 0 0 rgb
@
1655.16 1015.31 mo
1659.76 1015.31 li
1659.76 1004.71 li
1655.16 1004.71 li
1655.16 1015.31 li
cp
.729412 .631373 .533333 rgb
f
1655.16 1015.31 mo
1659.76 1015.31 li
1659.76 1004.71 li
1655.16 1004.71 li
1655.16 1015.31 li
cp
0 0 0 rgb
@
.5 lw
1449.74 1020.1 mo
1379.2 1020.1 li
1379.2 999.924 li
1449.74 999.924 li
1449.74 1020.1 li
cp
@
1449.74 1015.31 mo
1379.2 1015.31 li
1379.2 1004.71 li
1449.74 1004.71 li
1449.74 1015.31 li
cp
.772549 .886275 .929412 rgb
f
.75 lw
1449.74 1015.31 mo
1379.2 1015.31 li
1379.2 1004.71 li
1449.74 1004.71 li
1449.74 1015.31 li
cp
0 0 0 rgb
@
1409.88 1015.31 mo
1414.47 1015.31 li
1414.47 1004.71 li
1409.88 1004.71 li
1409.88 1015.31 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
1409.88 1015.31 mo
1414.47 1015.31 li
1414.47 1004.71 li
1409.88 1004.71 li
1409.88 1015.31 li
cp
0 0 0 rgb
@
1414.47 1015.31 mo
1419.06 1015.31 li
1419.06 1004.71 li
1414.47 1004.71 li
1414.47 1015.31 li
cp
.729412 .631373 .533333 rgb
f
1414.47 1015.31 mo
1419.06 1015.31 li
1419.06 1004.71 li
1414.47 1004.71 li
1414.47 1015.31 li
cp
0 0 0 rgb
@
1379.2 1010.01 mo
1409.88 1010.01 li
.729412 .631373 .533333 rgb
f
.5 lw
1379.2 1010.01 mo
1409.88 1010.01 li
0 0 0 rgb
@
1419.06 1010.01 mo
1449.74 1010.01 li
.729412 .631373 .533333 rgb
f
1419.06 1010.01 mo
1449.74 1010.01 li
0 0 0 rgb
@
1619.9 1010.01 mo
1650.57 1010.01 li
.729412 .631373 .533333 rgb
f
.603489 lw
1619.9 1010.01 mo
1650.57 1010.01 li
0 0 0 rgb
@
1659.76 1010.01 mo
1690.43 1010.01 li
.729412 .631373 .533333 rgb
f
.5 lw
1659.76 1010.01 mo
1690.43 1010.01 li
0 0 0 rgb
@
1619.9 1020.1 mo
1612.18 1020.1 li
1612.18 999.924 li
1619.9 999.924 li
1619.9 1020.1 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
1619.9 1020.1 mo
1612.18 1020.1 li
1612.18 999.924 li
1619.9 999.924 li
1619.9 1020.1 li
cp
0 0 0 rgb
@
1698.15 1020.1 mo
1690.43 1020.1 li
1690.43 999.924 li
1698.15 999.924 li
1698.15 1020.1 li
cp
.729412 .631373 .533333 rgb
f
1698.15 1020.1 mo
1690.43 1020.1 li
1690.43 999.924 li
1698.15 999.924 li
1698.15 1020.1 li
cp
0 0 0 rgb
@
1379.2 1020.1 mo
1371.49 1020.1 li
1371.49 999.924 li
1379.2 999.924 li
1379.2 1020.1 li
cp
.729412 .631373 .533333 rgb
f
1379.2 1020.1 mo
1371.49 1020.1 li
1371.49 999.924 li
1379.2 999.924 li
1379.2 1020.1 li
cp
0 0 0 rgb
@
1457.45 1020.1 mo
1449.74 1020.1 li
1449.74 999.924 li
1457.45 999.924 li
1457.45 1020.1 li
cp
.729412 .631373 .533333 rgb
f
1457.45 1020.1 mo
1449.74 1020.1 li
1449.74 999.924 li
1457.45 999.924 li
1457.45 1020.1 li
cp
0 0 0 rgb
@
.5 lw
1594.66 795.472 mo
1594.66 772.964 1600.72 751.015 1610.7 732.5 cv
@
1733.97 815.635 mo
1741.68 815.635 li
1741.68 795.458 li
1733.97 795.458 li
1733.97 815.635 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
1733.97 815.635 mo
1741.68 815.635 li
1741.68 795.458 li
1733.97 795.458 li
1733.97 815.635 li
cp
0 0 0 rgb
@
.6 lw
1449.01 815.635 mo
1579.24 815.635 li
1579.24 795.458 li
1449.01 795.458 li
1449.01 815.635 li
cp
@
1449.01 810.845 mo
1579.24 810.845 li
1579.24 800.248 li
1449.01 800.248 li
1449.01 810.845 li
cp
.772549 .886275 .929412 rgb
f
.75 lw
1449.01 810.845 mo
1579.24 810.845 li
1579.24 800.248 li
1449.01 800.248 li
1449.01 810.845 li
cp
0 0 0 rgb
@
1518.8 810.845 mo
1514.2 810.845 li
1514.2 800.248 li
1518.8 800.248 li
1518.8 810.845 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
1518.8 810.845 mo
1514.2 810.845 li
1514.2 800.248 li
1518.8 800.248 li
1518.8 810.845 li
cp
0 0 0 rgb
@
1514.2 810.845 mo
1509.61 810.845 li
1509.61 800.248 li
1514.2 800.248 li
1514.2 810.845 li
cp
.729412 .631373 .533333 rgb
f
1514.2 810.845 mo
1509.61 810.845 li
1509.61 800.248 li
1514.2 800.248 li
1514.2 810.845 li
cp
0 0 0 rgb
@
.6 lw
1579.24 805.547 mo
1518.8 805.547 li
@
1509.61 805.547 mo
1449.01 805.547 li
@
1586.95 815.635 mo
1594.66 815.635 li
1594.66 795.458 li
1586.95 795.458 li
1586.95 815.635 li
cp
.729412 .631373 .533333 rgb
f
1.2 lw
1586.95 815.635 mo
1594.66 815.635 li
1594.66 795.458 li
1586.95 795.458 li
1586.95 815.635 li
cp
0 0 0 rgb
@
1579.24 815.635 mo
1586.95 815.635 li
1586.95 795.458 li
1579.24 795.458 li
1579.24 815.635 li
cp
.729412 .631373 .533333 rgb
f
1579.24 815.635 mo
1586.95 815.635 li
1586.95 795.458 li
1579.24 795.458 li
1579.24 815.635 li
cp
0 0 0 rgb
@
1441.3 815.635 mo
1449.01 815.635 li
1449.01 795.458 li
1441.3 795.458 li
1441.3 815.635 li
cp
.729412 .631373 .533333 rgb
f
1441.3 815.635 mo
1449.01 815.635 li
1449.01 795.458 li
1441.3 795.458 li
1441.3 815.635 li
cp
0 0 0 rgb
@
1733.89 795.462 mo
1730.35 801.584 li
1610.7 732.5 li
1614.23 726.378 li
1733.89 795.462 li
cp
.729412 .631373 .533333 rgb
f
1.24497 lw
1733.89 795.462 mo
1730.35 801.584 li
1610.7 732.5 li
1614.23 726.378 li
1733.89 795.462 li
cp
0 0 0 rgb
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 26.3.1
%%For: (Maksim Kratkovski) ()
%%Title: (SET Doors+Windows_02-temp_01.eps)
%%CreationDate: 9/16/2022 7:09 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6ql_$^FWUB@!WETK!<bs(=3"V8.c$!_B>5DiQ6f(BXp%TTTK0C'KL65/S8je.riY]oX/`5phM6%&Z,4uNH.;8bY/dPBlhT(,
%I^4Ir_olti^\m-kec5QdmcR@E\L$WJNIJ?!Ie8hrr9*7XIJ3X5VWD]X0:-p%]PBCr!I*]nNV_/pe^GVSIJ36VDdL2)qX"+J&$K<P
%HN!dqG)&:FH+Eh&P<[2;:Nh54p>X&lJ(a3r4F-cfjI,mPVQ\=l?T^EbHN!5p2nOIHYV:ILL]?dhGtKR%moKG2QVUudnBJ;saRd`l
%q;o*Vq=jf_I*Fm)p[$-DBsPD%Tgc`pli#V+?gJP75Q-A@MK`EmPeS]qbKhS$doWA*rL*/)_=.EkB;jtlQWY:"]4^"aH2ZgKo2dU,
%7Igr!IOZH-NmI^haU^&]BM3R8?1R<NTC#Ios0_asG:<9Y:M"6nj0dO9J%7TIqSh-UDS,lW^\_<h7=EL#IWNFh]\\a:>tjgo[g1^=
%$TnWHNPtVkrn4d<]m0,1)(3+CG:+&qP*[9^+8of>3SkTW]?<Bmh9Tk?KHd3>5tE4h'_rI3WcRmX8gM`3I/`J>I^/drc^oOUm'Y6X
%rTcDWHiCcjc<&F4jCYn!p4jI1?N8j)kAOlZ1Wu4^cECQ&oB_0+]N'*'nH>XA%iE%T4+@4jocKg>&P@QGiWm]P06VJ@m'FJ*iS2+m
%nu$-(^[DoGYCHN,Z^8FVoj?D9TDNdJ_bt\r\]Y$&Fsk&&i-2R\I2Z[JaOm]&gZq<tW2@>&@,cV[eGJR`ci<e<jY(B<G<VfL'>N=f
%&<4L*qXsGu<r+H>.fIAIh::b>li4*K1(J6Z4F>bnir%D`?`c1;bMB@NBCGWo5QC6?5JDO9*967`N5r)qEVjCsY2b^):P:'J!+aCS
%kAL<t2dC];$R+GTcM667^)miu1^*^b!M>*s:IEK)cY#GEO6)>TElMHHj0kIt>L)DQYI$1Bdi.Xgo#8XR_elO72Z/<u\F"7ND2/37
%4WNt5iIH:#B7,"hkKLumBA@GilU0B>D6gT@hl37-dJeCsni2*V2Y7C7E?"c)H`Nd4;tuB"cma?ThtqBV_rqoNj"GK]hbfXKQ<&u?
%iB-ps?Vl]1iN5/<g&g&aY2MJ13M01"B8MW"Ok-eeTu)#%<-tehd,o-0o_iTRT;m?uIc33W&`6HN:8ISg5I63a0=VI>lnbb2UCX,\
%pl<,96)=[2\&P0Khf0V3M!mBm8hN07g&epndfLKG.B-+62GqL9\*;iDZ-hED#M=9<R_DqjmaJ&BoIo!P%X&aZ#Pkn'>X(\"nK#(f
%XeUq<0)@99iuW;=*q*(b=-=&c^-a?_PB/+?:3UNeP)L#B?R1&;FnE(i3qiD^*BZ6o:JC5L2BTF$pM9G*JUXb/ep(K!9%c9"3^?lf
%R9rS/lg!)7jRKs1f6,XLCL%0;l$X#BPfUmHC?d=!SaAVllYN4gI5q&t3[DDL]ug5t>-U7@HPaHddo`HQ0CSS/or!8XW.2!8oh-?%
%8W2/lqGiFP^&HNb>4q>fa4mYCh;@NglVIK5n+H/BVgcbJa.jEP5P=>ad_FD+qR)88j7AX*I+S2E^\_C7'7KNC&C^GWj8"(0[J50"
%@Lr@O8*6G6hiE-VcgpeiP2qs>fp?4>]sJdPT$.0-p5f1Pn)j03\K(;*IDm%gHTmHu)$@gom;3]__u5"gs&K%[I"oBro(q\Ms*P4l
%l[CpFZ8*r:T6S"u[!d<NBSHACp/B[an*oK:,.GX;q%*"Q^Go9!gq.UB,Q(X^mZ0gF-[)?M^%-F0'@%Z>)t+Rl7a5+BIu@OcE]kU_
%r+J!WGNM!0q/#N*s(M,b?J9JIGpl2\Klqh-PLBaDQhHS\>=PrG4.TEMO5CkOWf=CN[Qg>U]X%)(<pcNAaDon:^H4B<%N^n]&#9Af
%quP'nGP1c#UG;aJ)f+JCSa.pI$[*O`HmF3L:5=7sg)YNgqgDi*boX?.3P&d-oB;f);ncnDk[Y^l/$r5V1p7":hsheT2H*hRJ*X/^
%((OV1CjAaQmnmZr/;"jCZI_#!j%#ZMr_EFL4**])H"LpWqpFY!(7fdmPgT4d\&q1rolY5iC$-F@clTB]n:!Gc8p,7fK@W.sFa@E2
%kPfSV'mX'MjQ$'1%:uA*E0s?=q'p6op9c6H_B&8-QH&<,Ql9>_`ojDBY=#gCXQcLZaX`&2ma%kt@t/j<m+#+&qA=%[1H)6&Y0nc!
%7PrT%:=,s%Z7AC&CN&iN]gNpSl3]b>&Ls^.#2,e1261V!`'rCJVR3Db%G?8QG#GR%Fb(P)2sWpOh5Hm;Cr*:!(])JD<0h>21on4O
%!g9[TpLD&%[;dMYDfVIF;*_TYl<skJMhd9>$U,@tS?*A7ldW/7fc!tW^ZgAuV)DY073Bo*-PVn0DnEd'K/l!`Fc[d-2DID:7b:(q
%A9<-Enu8I9m`9nUo_,VR=n,R+K64dm8$,2:Dr[%'?9n+=j37m'kDSIl@o!c9T7mIog@Z\-6b4^>bS>oLXH]1!A:F9$mB%mDBqhfC
%^3pGsLPLMk8e1g%SLb:a$kt<&*.PP_3Jb7Sq5YmF8O)n1riplpnb:0.a,4pgJ*6%]1lda(I>Vi\ljIGNPcdZ5KX;W[rqC!7P0M6U
%em#V)i8V<uEkQ6u\XM[7#N(qP<nMA@h'0$j!;>m\@T-D'_:\Q+W"-^a=P6^D=3[;Fm:gO]k:cP69p=C'Mo<UX-Mj@DC$XX"XO?b)
%\oh8"NE^QQ.=!OJ?+nAWU.,#*?W(20/k9:F::-$ThdrfFn9?rQ2g:ZRRG/I#4T^D^^[JX]Rp:0O(;Po@hA`5[>'"W+<+VPenJ^ff
%iNbtkEbk+Em9M?4[=9!@?T6*3<?3IG7,HlTAXTe8hqB?t]J/pEI(@#S61K`T,Ak%t`u_^$QZ$*mgRm'k$dN'+2SBhEN8O=tKYF4Q
%_VM<='lXsP.t>1?%[81rlh*KoqmNHaCC5<"!+A]@r=?B9r2tP,UHSJ3A`kImonbcp>I)$>etL(U46DFIpl"Me\_bZ7KRNN#j8n#m
%91HZngjf%<f=rsF2gI3la=X=!]kNH'6)ta.7(S,Fb3S&1ld:8WiU$b*2Q:Q@ODrLo,.ZL-0DPInkpiKafX5G@Y)B<iIp2;9\X6U1
%Tst'BV1%6.bkP$cRb>,*$-,Zo+<),u;6n*s:IJn),\(F/)W(<dnXr@$)E`H&hn?af_HSj+7e\$b'XEXBg^j-/@HiC1)Z1>J)/S>=
%m)$bN)OI>ieU;-Pq(lk&2F4.G=V6HjB&]"Hf6u_lL,]l%n2T;clie1\*O8A_9%Are6/sUr?*@@SG%pTeQ#u4NENXGeFRR[1k&'[t
%.3m.1#M.T$K^06Vi2g=WJ[B<WZ1lrELCZ>3<1d3KW5I[R`1rSl[gV15_P9i[reBqdc6<NG"YNL/1"7Icf<jOH=0J`g<(pniiRTID
%KOjBhO.*FjO0Xh[4388gTdqaD9N74eIWnpRa'1(-M[t448s[rP_s!>S7`0@[S3iF=66:WTI)T6+VPg$+UhuFe_:fdO<p<YQjgqGX
%mj'C/1GqbRWl8u!N8+,&5d:j$^G$=[a#B<ZR6g%HlWR+(8m5eqM%Q*rgK43"*UA""1kp9d!5[?i5gHQ\]YE?0D%e2Z6`5ctf?F^k
%WQ[?IEG`U$gVsW/n(OZpL+Z`X5h95.F-*;>)'X'*fC2J4YU)sV\$]iiq\En*=_I@mF'Bj9*9O_kr_:)p%6i'l*gs7K"*@@VJ"NeE
%V)+ptfX(SDGBF:N9q7Z28&*;<UZO58N,,:bG1'sUdl]HskZ%MZ\p:F.qgG@Wm'-;_,i+Fl>>@ChEOeZ#hUtr[$+JC`3bWDZc,uug
%%#M$e:.9f[5cP^3>71[SkB>4oFd73;M,^Y0]5>-KNOee/UH]/fD:N(YQHa)E'*=F$D27__PF^jJij3q)[%jV&Cc2.VZ5sd%APd9u
%'$>Lp6a$8Lkg]8!1!?Bbj9E(FB9Ol`mJ$V?IV5+6rd+Biir?'ml7b-;A4oB,&.%,^0Xe%2a;8J>l%UYt7e<[&Z!e'oK]7W5ZMfhc
%Fk=W4g`%Q#[-`%A2Rp5r)r-Zk<7GR<3`"L4aD;HD^A#nD^6R.2_E=.88Z7j:omb_)5PG,lZcCD41EAV9R;h_\e&uY@C1Y.$?@@`N
%3CI%b(tNV3^O#G8O7qi7#=&+AZSt*rpK437=Rc"@^6/_m^I5$Pj%"U"T@L,poAU#Nn?636qVf%n^AOm1O!">mrgR!hph]\3T07Vo
%lLjcKp$A1(YQ+.-b9&t'rUd/KrDt-q?\Kp.Zd\qgdB]"5>Wtq)TC;E)=R6.!4rEg6P4GFCPTk72pY@uXrnYoWdCAe+-a000oM^%$
%J+fN'oDJ.35J;CAm97>-@I`%m[&Y`ngQFooU3/eOjrhF^rt9NZfBMCXcX+9\%e&"ahkpLiH1q+3n"e"MJ*c"DnKt6rSMs4a^"9:r
%nFue@me"bF);kbVp==S>pFf>!4T4HXH2`l^^Xr?h4F-b`om$71LA!jQ_a6:.(pQfR=3=9p$\.(X'&0(ns+#*PL-0hSp[?Sn_ikli
%T)\?RPOJMHq:"1!oafs[oBu@V?G6.+juYf8YdZA]CFIp5.Ja+K-U2_cJ#$ZCIu3CCgg2lTXaPOdAW$N`T:Wgqk1T(Vms]N\k*[i7
%Vp4\<a$,;N7m3a*g.&O*g0TC)&]6^\rnRg@j0)hL\^*=f5-4)tpG#t)NkK!dmpEiW#/02-rl'"k4S=!!h\^k5`pg[MPSJZ3`e3+B
%h,@5&ALC`\Lkur=n$9)um?#p1fJ.`/4glBBfWLeC=N1!V^Vj_64hQ%5nsf)4""eUa^"CZf?;C7PaI]JOHEZl9e$oAPlG`A`^XZc!
%VTcrt(;s3VlKb'0W_M'Eq>fq1.BE&`htae:XTBGWmGf:)P9QbL97Qp&q9p/+IeTc/h`RChRImo.RBmn/o:Nd'_K9e,IlZEWf<:fo
%o3>hY?gN7<G;!;eq,X<75?cI[/W7:(Fu`JLp>7u]oFI!)rP+C8Bpe6"QaE!R/bdFs3BQDUMlsSPp?pkaIdt6ET7->*rod,YZ2.%H
%["`ugKMu-MM_V)2ir.n-E?C83Pa:B/9IWuPp?@s2m'=qlk?N&Np\Bo3q393:.B`FY9.IK:d`R!k;aEIpV7PrmJ,H7")Gs3\E`Lh+
%p@V7Coi091gm7)k1p)HI>N1oPBiV=emWn3STcJELE'8["c4)LM)UTq'\duFtYJ_s_.c]N(=l'"`fB_rOq0oR6\@G@XSbog%2OD%(
%4asd4=')nW`<WQQ]qi[?i0>Csb/9Rqps<[Hj"@>$rU4XmF%MA[Fl3('?YXuPNrQJ,'IQ!h#Zo-#X.4jH/C"W98]Fp,mRZ3oKtAU;
%aB];TjNkXKIu2$L^gVnk#a$3gbK0)_1\cn?pdm(t!/)'nT?4qmROm6B3i$7HOl%S-8`Vms>\>^;kOA8/nfHaRi&tLf+#''?nK?dW
%j]p*l7,ULbS-ZbuWZs16=0'b=,>)pOA*6PH9agc\,C^'];(J!UjAa:&qP@Osj5=3h*QE5lGo<f,^P&NXb=rd4SFBDSBifQ&'ec_3
%FceaXNVUDk]_>FX95:OMGdY"f;WBk,psA??COGS(WUVcorFOLR/rh^WPD\jR\PC";ga'#ga\N[L"/E)W+q(mafrZF*KX:.]02`2=
%Q:e.</H!Em2aLkIA`bB)9Psp/PaI[/2NH42b03lR\M7!fiO.bs@;qK*.7a*_c<E2sjhtrs/]q?u!pWZ[S@D8U1f>QD9prLbS&k7\
%O1F=.)ig\6e;!:*q9B-K\oD"p*heGbk=Q7l';q!3YIW9>YD7DW]=Hcg?!h@Ef;`i.;*O$l>AJ>(H!Z&'UrJ\Ac'4jVM_]6RNg,\B
%puTWPU2dXhM[6oHd5[X4%L8E$P/eStguM0cbKB&l2g*561c$ho/A)INj=p,95^iqE$4?k3mRVfiN8GB8ClJe<;(cfJ=/8=EF5V(m
%RTgHnG#7TR]PSfnlWRMdE-'q`*6^C/8jpgs=FkE*bOO[_?=SAZF,[iQqj_g6At%AJGu<</RXi\kC0%\'1i#?\rT-qgS\@K)`n0b#
%Fh2uAQFC0ER2u3P?h&OsWU[[i466.LUrN/Cp]%$-4%Fk2n[t45Yaj0&SDEFW3m,r2=U[lfTKAa+7j4!ARs7-:UPH&KE'3K@bcB5,
%&)lI?B;(WDcrQoZSOJ;E6F"`48Z6oaNuX!#$T-"4kjB8?H&o7#mU`e*=Z]2ur#g$q,-o$V<nUe)LF*X%OVJ^E-,P]%l6?)K8QP(^
%jH1e4ZH1Hh,-(j/=^5)tJiUsL5&d@UbDNL/o!<98@2m&i]PrNM8I%[*3[Tu8\9..Mq-p$6i?7oQj="=oMb=G&N9G!(AKa""-*VV5
%PUM[*$E>CRMPAdX-uBZT9UHmR@ut+%pC\O%9*U31(8?=7%PX9e$Z(\R%BN$],_QuV-*j-&7CMO.]M?,"G4h]^bq,F9FHNS`Mk]%f
%8,SdqQ)6',=4gcE?Z*QQ7f6Mo06_m'3kb2Ib3j7sn*BI,Qdke:pH;p0\oC<$msX[)3Ai!ai<r0O_GS$dPV4$<o@3PhUO;#K?T?1E
%Nq3!\1l`2m5P]X*qXL=lqWI^i:]Ko+V"h+6'!5lWgrTVY_;UaAEW[@iOgWCG\"m4+NF2T9/b"%\6=B>3rOM4JIkNAW!b'_-GIIir
%)m?b"mWW8e#CNOWLj.OK\@MS/Zi3X\3g.fN^YB"Mb3#,8ch]F(^khTA/AS1\iu30h@gCjTT"mK#:Z)d[&>j](r@l1^?"Xl<8'19!
%oFfhg%^OF%eOtQMB1Fc,H^AikYu]*;TAMcf\N_'(9uWs<rdI.tV8PhIWj4FCLdH*S'\VN4![:h%i`a(db>"`/*;*a';4$XHR<?Ws
%b$VAo7=\Jm^&^:dDQ-sNTc:`PM$MO,;<Q`KcW+Urj/;VFo8_[?=<K6Q?6E-pYs:2J2jJ"4,99oaLq1sX$b*X@)_9$bDJjG+%31A>
%7Dt&c*TD$F7@JALW(W=l>0M\sk1opTH'N'aL!/bK:Lu7N<>c:H,MZ02_E<geR>+qUTBO^@b6YF'(1)&YpCJ?0Skb_JQS.'cHNqBX
%@"`*aM[$4-$P7%5$%"IuSdu5'Ak4qDUCtgeKbe1NK#&GrFd23636C_S*>c=1+[AYO$l4o2?GfC[I-PH1/@>ebS^nqWloO/f8ZtpJ
%a<`0WSUt-e>fj.mX'AolR5=j[J!1d21n/8j(VY/8Dd;u^2;\0j5BK%6RB;f("d`g"]e;pkna_h]YKB&rqGQ@/5.PZRWS8E<VJ?#5
%_)U^B<u4eI5`Q'G*?grB'0R65Bll'9HfUtQ:iCQU="6:%3h">=&25%ng63nT#$2-?#qS5=8!L=^\^N<#Fj^O,glkNJL`dBrE%6+,
%^oO+H*\9:+6%Yi3A[n2QD16D`VX>f*_]]LKPIeH>Ri;iRB+?81VRq@1\7>k!#jiR^I$B7`(L)OZ1gk22::iG+Vm;:BM1cft^XL@D
%hZMKrgeTr'?E:E+Nbe=;S'[rq&+eDs<6j66E6al(]"pnuHMltDDHu_J/%suc;Ib1EX5(5MjWucjQ+c9on%PU;pUKNVY.s<Aa_=_&
%qn2'fqlP-8<np8IheZWipJ+cW8K+k3H)\/%X#nBpLO&,0'+XVs)OJ5WK(''!mEE(^Uj;4l`[*JoXi;YC/^_'rdumto@(/g&Su/?<
%VPT%V9<22%L*b`:8g;Subt=<lV/B2R_kaXs-XE.'KQ"&kUobg)Q4^+KF_Nn*N(-_*[E3)>(-Q1J\hF-/(QC`LB;g(u_T9.P,rK"n
%\GG&`\TLair4"97^8/aR55Ejs0=f(16hWgSiHielCX,2d5*4MuOj53Hc"Rd;)'%gG3)5T!.*?RN_KAU12r#A08IUsT6>h_NStd14
%X6:s7p@KKN"Qo*:"#]YBCdr;\Ao;R^KCP\Y5aH6KDJoaJoAE78_sEp3+@FU:p_12:k>,gm<ti+5WQ1&JrI@ru\+1drE3(iqP2g'e
%^Lt':Ej*?!`AA"aJ]h4$o^S]h(dC)\[F)+FI*IW4pZ-57hn\1X\Qh$fQP_+gc'U+g:Um)WUUjD'B09"oY"Ei1@?!WWZPM+?5)O0n
%%5jTZ:03jdHuZ!@lfq,X$o]g=i8rg8O^l/p7F(nXlg^bE]?dY/].^/R4mr0.lS#fg%B"b$%;mDbM/XH5$WRsV-KbD4#B$iaJV49e
%jqBWG"1]!X#.4]O7NdUg1jCRZ8.L>j)-`f5A$eRmaKLUXEL<R(2N(%]WDWq$kr=fl7Ii7fMbRg(2G.]?V#1o%gl]8;d*8VWUSPIg
%f-\RT9ZN760AI+4TJ+SE1_WY;fe:f]p1M!<_o<T+B.jukmP'FCX[ZblHL%t5nC`QWD:4Rq)dXjGh+E:1SMG>Y>3.?plKt1(jaF;'
%kbXu.+)me-F\.S]]]ZEKna_h]YKB&rqGQ@/>T_rtU[LMBijuq$>t)1-?B='V>AEj8Ap>Cdp88A4<;<q?GT/iTL<8Zpe"sfP9)d$e
%./uP)X-E4S[ai6D1L'?&V.P]$$HcoBMfah:WPUs[&m6h^=1WD5.@Ft@@*tkDMEN7R@D#LuS7Zc+`\gXD>YhDf5GPT2ifi1,[/W&k
%D#a+VkU]!5>:eN_`A1=YK<<SgPeHND.L-0JgiF6g"eA%2\131SVn`t%a@#g$m!Y[8TUE_-JN$8G!Q`i:.#Y#Q1,L:i8BgfT*@L.O
%Meqheb-4kk;J>f"UpM?[O.aCWJ2Oc3)o%_@-YUgM#TQ6jL$fhL'4KlKrGG8Z!%m6i*ZE<'eBKX*m;`_mIc!m=Ss!c_`X?5Qii6']
%\[j]9\^Yjs7)'Mch^t@fn3+]H[4j.XRJZ#TU=dkpTR.?nmY?_?KJL)=To<HKLhUc@beUbjZ"t2t@'LTDfHc3nOuF!>IY_;[FELG2
%R!@.MWm_NPp*M,/O[oYJ@HP>@G^@[4_:VCn-p?0fF/6*Q?aeppUV"f,-5IN0]?;g&::n1WZY-1AO<14>@<YLW1gG1dUQDCAQIS-b
%bq00EgjtJF3oK4L$Zrae3n,)(AI#f]c8)S`/uL+5/mnM:iE5S3(\02j-@.=p%<1lIYA5jEN:K4V8&3fKWQ:t\DHt;U:l0M,Kjt:G
%+UPRLF%>\HMJ]%O\d+J,*/1<Gg7:I:L/6]6+7N\8.hD@CH$2Dc?UD>S`ZeTo)_<4<8nW3Z*nLQAjO';nSX*4r9<&p;0:(*WX(emm
%,E$DE>\WCU@FARbc/hi9kuu91VeGr(XHR`hjHfMEC):.lkgHpi?Ro[*4fq;8(8X'D@X;LIRU;<Zc=rB32Q)!udXe6)W[)R&1.%<?
%<!(G`Y$Yu(H'p:KB?Z6Uqms0_oG%$RY$kR9GtMgVY-0".Fd[&m^"'50o%s5pi@WZ.j%;EV6%6\I23,JI@[a_\rPb/;13uc!g'#qI
%kk3"8;TjUE4m+Dr<)_*_!Ve\_r>`$c*_h[2!BRK1j;?#P4]$IHgl!>h^u>UIXX:T3jO?dL]_,[\$b#AOXd0S.]Fjo#JV`qWW/on.
%O2='Y#FRY1r;j2OC[e2,'9m>Vh7tiQ(PUmUIAEB#,,V`BnkPthkT5n5hFin,i3+dkrpO.QT1R'8Sg:\?g.#QZmKo+lciT#_309"n
%##u<#%7Ak:EI\GhUt[5s6Pd)Nq+&Fk?mu)]U_$u8@e;hD+Z(C[><G:tfDoA)p(Q5s@Sm_rMg50@?jD""KE;Z,*V[b`$,&/f+r^5A
%:X-9Ug];6n(]nCr\'!_<83f^t%SG*O0Wm54$J)6f#Sah&%lFD(gmc$+l^IYGL?fA;'\t;7;g+(Ars0:F_/2>_e\^W>Qdg8\r"JQb
%##NLCjmR+KbHF2G*k4n-rJ[)o39c<2`O[:p*23(#[Hsp#V,#_c';k2&Fmo#WFT@WF+$[&BObVUmS]I@^qCJYa\P#KLWna@EHM!ah
%Xj7c#UmJE'9ipOcX.l!$Q,co$-&Zf?k#Fa9AZO?JI$h&s!p7qEY]7Tt>WnEkU94E@m==KIWV,R\:JP!ZY"U[J>F4U8;WG0VIT(Er
%l^crP7!O(YlTLEX.;lfaH;!VPp%<hmj:a/q\@RARlBS,u*qfTCcHu/$i\n&_%Df`/8!TqE#n*rs;<95\GG%eN.c-%";^S$%_hs=A
%6/)jWR3or+#24tjV;&G0Crf;-A$j";=Yag*dm10Z"-ma5JEqB1*o=LNTl6h@p1Ali+pnQY%O/"[4lgerqGiMh%fJQaE41\O?Od!g
%1MdLiRmY<[&2:N)X0/@c*]G7Yk8k7pbJJl(H71a4>m(CN",,tu37u*"h\I&V*?+i`8FTV]n:SQm[%Y.qFX&I4'/.orf$?hI5"l=X
%eie9B(;+epcIdm'0#,rMGJf./JE(KikT$I8p0#[JZRdfjP&2r!0%"CALdPANH\m)kM4$2bJ#REt#+2S%LV`76\@a^dMK"R8`b9>W
%H5d.JgVoqil/?Jd%gm7dMK%\;YCVXT_Z]OMQW[laj+SC)S;!ELFBIq3K-0eD#j$QYnIERrXt?b#,AL^%?7j%WM:6Cl2iOr(UO0nB
%.GLLlRL1g&'E`t$2(\8S9EpJ"LRA0tJS"un)a)MeY\.?Nm4GsX_-D&.MhNHOiKp%lb:2qdf>\B,1Q@M%RNS(;+#R$Aitrdm20KXC
%R1)#L9fJ]^(4Bm#rn&.=$Je+1aN2XV+t[mMo$X7b4o*BiQr$B%8fl(LqY3*&a%M'qa/ggWrcTs$QOYRF+MbJ1"L=UFG+$nR;9s`l
%(#8\U7W9fjn1e.uKL0bI9l2q\P,.#@H%P3?W`!=,?'/knUV_#tb_]c_B["iU;n=ug/HTm!,?LY<4Q[)(R-&7U-Pam0Yc7AgQ8[6A
%)YIFf4kI=/!h;Qs6FVJ=\g/9raT@pf[\>m:0Aj=7`p2%R.LhulDgBB_F_gI!]P5lr+^0YZqU8ICQbBnR6gr4kqHlif>c14C*YB1Y
%93rg!=;Fs3i4u=ET5mk&f.5cXC=+p&@kCBn"Gg;Jet\/."]eI26YS*I,rC*-BDRglq:$,sDMNWC!h%)C79UC0\Vt-i*3AW"!Z`Yl
%:Bs"bX2EIUb:ZPm6KCLc@M]PL*#o#f(]%`WbA\X(F]#?_(AI%PHP;Es#mDPR=_!St,*B5-$"hPD*d\kYk4l=R('J%uB<%d)i@iP[
%#C$W\eRF`m.#0%V<Q$l,\.%gk((TN<am0-aPUQ`o@&>g$!BpK:"EKYS\6l9&l#2E!Gai"60.?DQqQ&fI,m$MM1e\ibOWo*&kD9jj
%;FBTbOA/p"5Sr\L+PT;GScU*WrqOl3r)f.GglTn.,E62-f'%r-4c'4ZMFN6ILEn,V\D9,^4c>&1W.u2u($fj[#GK%Mfr!+T\VA`>
%<%sNO%GT%qL0\A+<LI\RX$qa9PfJir4_<8Di](5:[JOB"3KN7aF=[<8`)9"gWHf.KZ,TXWUF7a(-m"8<Gl6bb:^eu9_B2Mb9lIT5
%H:a*AF-R!6qNbnp5c)K&9)<K`m/ATgPfkI4*c>X[qhm/kE`f`>/M?QY*hKd*iS&:;l3`)ZeO%]o-8Y"M02BF9daP1,2D3a/&^mlm
%C,i:S(m],=c&/a]3rH\G[X/Vh]qJgMK+P7$?EMaoPJ]FAfdDE`RuF'u^cbf:pP?*>nPqMiT:4Q0lH01;E\Y\LdWG^ZAPuZ7]b@@g
%c\g&h4Dl'm0ZO5t7-:L8Fh,j9RWh/TBZZ/NUGZR8!gF)!hXLo[FNl0\8kE/f?*XfBacT+.5q4@L!ZSkT![gd/Z;H*8\e8k6E3rFZ
%`g_\Fj^*RlR"uYSDA*Vgjr<U;7m6jNZ<k6ol=EM4ZgMBIarNgZN*YtXd?dmNB`k!?=WW5mQK>90.FZa(>$BbIC$*rOF5/,Z!5Xoa
%!g!R$-_G8]<:37S"R<Ac7Q#*alXi"k=-"HZF9FSpd9[kdd:)&G(@Sp/YL8I=g$up2cmIA[2E#gi+RDqmQNuZOJTF!$Tc\d21["Y?
%3:d/1rBQkFYaU%%N+L@7#4HG_/a2asGCg4eYJY1#lIaP*OIM1uAh$B95(??6XK>MD-CqlQ%!?A"IblJjd1#WlP\t*bdEs@T@D5uj
%+jEcXeVuCIP(\]>JS.VILN+0IZ4VLciMU[if&I$pRZJWi^elJuE"tE>*B"-7XH^+Ui'^;?CKTjo>;K8r.;ICi<[dt?O:XR(UJo`9
%>n`3?R]s;\N`4>m6bTt(+1dB]S*Mr"/%'6FoPnp=3G(3n#N(2DZ-EgfP@Gh32ENrUZTpQ>;?EeD6aip4_6b;9ji/e%\O^3g)ZTP3
%Ib;1/AoVr/=k@pY[/C[[gtdK_h6SWYo14U""1(Y)#7^."21Fm8`247[8)`M_'YToJ5`6e!XN+`EWH9b:1OT'h7T>Cg0\>CbD:cNQ
%/^Z_+A3dMdg4"!kC4n*M]?/fp[si*'>^9MbgATGZ6D1LuDb%H?$NW6VO>f*.?W*sS+AM,"<qF#`[lC/ON\KRNetU5`-cM>0DH)J8
%E["#06sp%$S[_TdmL,#$^j.mZOpLbe;<k0E.7tdnDcNXojSY\:A!>rP)4pRI]/*T%Vk^Js#/dRRn3M])]_RjJnf;V$&HTJsS79f.
%B1TbVK"cF5qGmOjC!M)<:9W@6Rf25(\/=[d?/:+8)D6b`a42WF\n&B>Ap).qcBuK4;FS?>b`+g6L9tTZN3r-'Fn@<,dA>TR"pgS;
%!_j/,>A'BC%Q#ptRMW8@fQ]8$(eoB-/R4[X)49o]W'P.6Gi%2Ri</9Ee0$U<)<h1O+>iUk.=sij+%d-;N@&HGk;f&FELt3r-Khq0
%B+r:XF[kQe4jW@LX.**Qcg-s$iM(4Yh0FJ8[,0s`T'(?iAXd=p:ccH]TBgd2Dr]h>jHLr;K^9_-f&q<cB7?HLH1p"R8tP3QnSL;r
%bZ+(n96mCfR2-bOP!TOC'8I#[bS7>1`"j%D[c.TA>@\'bIp&S+c5IM2-0$?OkD)7$.fKJM5kT./!?<k:%M)VL&p\EZp)j"`-S+l!
%o87S$;X=#!>oC>Z<OWjUXr(j7I^ie1r@)8s@K!c8ed>E0H].DVR;sC\EdpGig^7V4;DYYM9\5#UIQuP6RN/JZSF%"]Ghkoq)CecR
%m;V1:N@M5>[EMe._B^bZU1-"L^O$nmD;!XS1J$DK[`jf`V/cK6Z$>5S/tP5\G3"8'p8L%9I@/e%T1uJoI?Y"XT-REB8:54-f%-tj
%>?eVGnYWW06%V&hrRE3BjYF9g[;"O.JN'lOgYBAWqb@r@,B[naj%#DpkA3Pqm@7ClD6*!5G1W80f-SiO/53*!;c2%AVs[r]..Kqh
%<=8I7^2h])r$g0X!ubBc]IqmmXUdX]Q^+&AXF(!qld!,q9\DGZ2OpNIP6=A,YA2d&ilQ"Yg7"ODF41n^'0o:JOAT)Hi$h.k[MS<_
%IP_WN<_lonV6.apGFdF#4gCKR$-"0\-I]nZ;YO^DI)+gQT1k9CDMXYg%kE%jI"q?B)YSQ=obubu=qpg9E&4lap'eH8#0OZ4>b1t@
%\]^Q?3IhbrhLt%<5hT05fqA<;4YKu6`!mA+caC9YR;K7XXm#I=^AT7mrUHX3<G=?`^;m4r(PYI:6XH:?g<W1Sn/ZS_qeXuXZf:/\
%pld&LhDB(fWGJH<Icg.uL>F7Ue&EYYj&Gf7Ul!iW?k_/Eq#=r`=A@A8@roh(rNO[1>uAQ$lF<8NYg%FV'_-(0Gk\bZ2s<SA_TpAR
%d.+AG3^6XI[2DFmQjFN3II6m@73VW:ffU.QYKjVcF00AO%K5bC5l&cn]/!Z8Bf'WOjg(_#WUY5LnSYr+DOu6%b@Gl$n=/fr>B'KX
%)ZMM8PoUWI:GrYUS&B$<-_=e)'20?T5u'PK1_E'#2H2T+4*i6lI2Z]i`'o$4M4UJ&(sB0&-ngZ9BV5c@%$Y*-Pj^;&I\DTO2"?8H
%^<jgQB]@q#5l%UeT&2`.Wjkd)Gjc.4Rb/_\%3<m`)>%SD@N=<b+8]GAGe?iZB;JuCpDZHXn2mRFYRq1XZ8]u,]uiO1,d)dm53d+q
%P5C>2Da`i<bi9f:k3KgqO*SCQ3@9(spY`Wa#?=cW3[158n\SeiNF/h%Ucq._+1U7C'"RtA&sodop@:Ghs.k.2/H=O--->VtmGsb'
%Dco]-gl[a_JL?(t&;trJef.5sUKG>3)R#PPc'H!&CP1kt\T=JX+teY/>a1An?P:7-\_<0h_f`^:o5/(LT:qFI0tUa$I5@s8fB_)^
%.X"k1bnS#jWC@3fUT6qXV'5)eg[SF8nI`s_8#+JE&g&M8In/CQnE3sTEWpH83hqi.HBTt;cWT4moTpkK,SD\Q+_;Jc>AK%Af3QVU
%Jg=Qt>4NgXT"!D2/tCIRjA+1o/8H_50ISnDUh*?ngdjmIfaXYO,.6sNK:\$D-BuF)%Q2=k]XGDCcZXhi\t>J6D8cu6n?dI&4,2[$
%n>pIdSs)1+QRg,JrA\h/G!-($E?a#ZVtJ?g1sMi-@Rm@bPO1j=N6-=55GLD"juJL8R:Pl[ji^c'bgF(HCQ=?cak0/plT#(DM?,^r
%"1S0lk7$YDVp>R[4(S0sa?)a-YTA$cO.nSg?X]0G9:G/QF#+M>:Qj2V3),3e9OJgtL.i)."n":9Ds5ojJFku6Ld+uA)=Cn$JKFg>
%&(kj*+I\%(U/_f676P8CT(^/jN?O9(LnMe)5]:oFBKBm<Is'BJm$l,Toql4W?jARc4<'!7_h7q_Cjo.C,84)qONKkXL_OH'f5Tdi
%%XU;-OLHLQFs)m7-SA8^U#.Zi%lQ8sHf6dGp+ljKWV&qPrJn877Y6<Lb7'pJV@D8ti3<9Bms3Ph[61EE_u/#1#%Ra''aPT9LO?&<
%iFo[+*n[C#/fNMhAj1\]3%Tah.u+E]"Z\U"ZC`tG$+WWK?I<`o90#b=m"(,X-c:"oihC)8ZfB'I[5Bua<%fCGDFR#iY)",$I1)!H
%IgO(=$Z^r7k[6N>:coc,G72;%Cll+RDVbcMkg2Bu]5o#)'AcX73lo6ccK;g.1'cHbkq3+/TJ&>ElpNa>S7XIiqe<'Vo$i!*UeY&g
%1t/h:Z$ZuHWe4Aqd&CN!?I=2/0`&jdDQLe/UdE[%O0`IU2btadDN(/,259O'cKHVjp=T77(3%$F^n5**KnA*!E:hA7%e2A;^siOr
%U@MT!nr9Sq`p1hE*c2R[J%T`MCub+gkL^K<:S="(pXfX/e@"VM]/A_UO/'Q_S+c\$\AlRWP76_h'+=VMjs8raDB^5geXXPl_+c39
%Vj`g"-oo=6I]>Em#&"#@_-NB0G?kVV\:G\?QH/78&"[D3M&#^9[Z@R:3@US\=T9q;)8(.r"X,KE@F\I\S.mRVb-fh71Ieh4Pn*A)
%c[WJ$@<uiM,p6dH%&-skiJhUBSi;.UEVU7-ng2<;98q&\(mcm1/mi'm^;RO/M/i@N]D`Ghn:`4'd)6`hp_)WX\RJg>jQjR/p$t&F
%T>,dFr8f#Mrps:7T0IW!k\n5rB0ecZc'())T"TSErSJ?4S&\os5\TXiebo_:gGtnoMJ,I@R>/>@QahsQh)1n)?-)Fd7lZ^ZVgJC4
%p]#i;5Nj37HM[Acd_Gg?r;PTMoNu.%G/)c0_gbm6h`U%"^ZD/^rE[,!h7"fHHK":12T;G&J$Z-8J`:Mm0CeG5mU*^h5(EFkq5]iX
%?N4a6$U(0TYP,/+^"E;Urg,Nr?_>&XroVbsYP1harXTn1YCHTM`Nuatqs<R:TC)Vr4RrI0gZ\Qbr'>*YC<qBH`8jj<+J!)+[0<=g
%O3)Yd-i(8@7VZ%Se)*C;9"*as6bNk#aZC<U?-9S/0SOP&1L['r0crUJA51p;nlfQ:gRXG+'Y$4@Rbm$lp>8$`-PmZ"<*:2n1e1TP
%e@[%UOXERcgkAet!,f)`1#J63ddDWU;=#'t>,mpc;Nom<mUW_P.>`8s%50%'Y(k`-,i"6Fiq6/W)0\89lW_"82WAqt7.0%Y+1H2*
%7JP^;W4/V8J/-`7>n@0OLOpG]Xo[UmHN&oBe_9HPh7ZHZR&Y5>>-L[>/$Hf6G;W#X+s%,9!8H=0gf\*9cJKpV>ItgBZH!eO)6t)7
%$D?J'(q.%-lj*d/k1k`ria[aAiDd<]3k`VT;S@.V8:`TZ/o6')(A-eN4\bc(mEE(7>'("l&6=,/KXpRNTYp,-BTa-X;'k9eC"H6-
%B.0Oo5mBR[8EW\-qU0!^W*Rh9\be#!MH>>Dn;]rk#^bTmrC.9Q>EZW-2)[^HaUlW(h^tR9n/[GVBdrT#4D1E00Zn)qZ,86c%Lf\a
%ifoV9'U5CTB\lo*rHL0U$'T:2XH1Lt/KdrWa;gkK/672C55%L;OIRj8'GkKD/sLN,XP'kp54J#?!ZincGC*(WAZPu(Ur]^X(FU#.
%kbNhhl;]lJCd\rf%:7^u.q2(k=luCZCH#;>9GEcL7QhX$&_^T&LYRaOFXLp0#.8g*\89Af&E5=8D-=)@>B6Z1eqE[/5s]=^5W8Mr
%o-dP*;:`P@6BieZnM5UW!DXH87_N<F2$m::;_kQ$EIF)Uj!nggK4q)UXn#7j?jU]4\D'q;2DX@!XIC"5`8@l3AGnB^FArXs!]E99
%EqdV-!+8b2V'lA/MTo*)9"O#9V<Aah.82Tsm-d>/_'J#7\[!I]:`(K-QGsQrONkd)(Kg+1"Rr?`W5pB2MsqkPACNX':<3D\m=^<i
%"&WV`V.i[o57(Jc$\99i8jqIN=NF"[=05*'P5_7E4a9qp>rY,Ffn"*^Tnnjk5bcDRlNSe@VK&])/K%6MCgit\((%Gr__/g(Z+Prj
%NC[U@VB/I]N_4;O:5`VGcV]i@NY.Xcck>:DH;F/'*duNs>@(VQ%$8qjY8F@`&dQa;;PO)cH[sGZ0u<DAQP.q,@1ute,01hZJ8WGk
%.P+eN#*=&B;>MFKWSE:Y?=_jQAZ97e'%qsW\!W??,C:-a<2_j3'hcpVjKM[&DV?ml<42m&1HA"jO3/-a9Hh56(dE1W7L4q4E68li
%0&[b"_+%"]SZk>HND!Y(jeG8A$iubkQ<S&i0LhNeJTCK[jB`rNi^VV;^e5?,,N]QHA.X4lBsukX'NYj;/9%<NU9=iIWK\[cm%r@/
%:a5l(<%\%\O^$\)KqY0ZJ3BX$)4>BAc8u*;*aYBlg)P:(ll,A,7)NR=A@+e@Q?Qm+K/2agqkHL>;Ibi5Pfd'`lmsZb?lfrPbkBHd
%Q7bkXSs1[)fa8M6*W?O8'.g-8FAS]:=\=@7qoZ`5704l>PE#d(#T2eikV.rM:I\$W$CBo984t^/Qi\@&A3,D_f^gE2]56P]@PCG]
%\:$W:\7cjK&kNF@gKK8eNId;4/u#gbRQ3l0e-I]21+j$#,I]38@_=CJV%13Iq$@JY6U%NuGa)1GgNqg4%4CeB(%SLS-.lM85_9T6
%3Q@',pl*`Kj=Dt-;?@W$Fm.mtN?s$V3\^r/VRe`&0;?VV0UVF:bfW=5!Y\o0ZGa6KZ+14VoJLo0Dq,kk;M`N%ja^Ri::EbWQlY-W
%Mt:9L2/_YV&sh[ipShOJ-)jEGN&a>.2@tc4S[,k`.ObI]0b%6QkSN6L7?ciO/;#-%3.\F:ZQj#8p`r1c39jB^l:R;&f`>0lGdMMY
%A'f@$@Rc^*#DL=I:Ce>aF,jg5ktG3:oAUFA(C*!V0G#AY9)"">6iIA&H"%MnkD([gA-a&$eccK(d:Y%^(_35eQ:7F1T3XpPqq*s]
%KXPG*[3r67A67%>erTdL;M@'Pgrn&`(+L08oRE!K8]ap!9;S<"WuS8_P:\mE5e]jqCaFd5G8%r%hB>fMCPO4H-G1(`]l[l5Z:YW;
%K"+LPb'di8m"^Y4'8aBU",[*^+<*LZeFeNI=FHt:)A\8YK'Sb<18o$B#Y2(gC(Dm>H7V)%(fm*PZjQ]Ie:m'q^1F%-n>h@><-Xg*
%XmDo/%LIPD(/SC<5oSKYC+PXhNS=g6W1lpekYOm)UK"B.&P6a#ePM-64,uo_i706TfLnN6g0Ei7nd6h>]KTY*Fa(g'Me".":o7@6
%RI!lmr'MRdJcL/%E+i_-P,`?)A902.H&3lEKUCiW1+>f#9JP[M?d=YrNXT*$8POK\P"IBE@-LMk0JE'p-,NP_@Y?<Z@I[XbOZDri
%()J@!/jaA@<PlP7N&:Md8_8Ua?$d!c(+"?%28gKkk'XMLdo:jbL$#bse[tf/'+U8IF41i:jGl!P'Stt+Jc[YeEd+HK"KP^-I)mj>
%fheW:>SLC_Pc^ts3/YQ8d$H%i]+GZ]6C^QQ&o%XX$;hc.U"Q_H"F0XQ;<U?cK3YFB"Gb5P6F1j<ds4D%)KfD)?I8/^^f6qI//\58
%83XEpTl`)hVNIR>6d:;+NUdNhheT?d&,t$F#)o2R>R%a]X5hNLJ+^E4YFiT-j6iiBrVb3C5CE@_=)X\gk"En:U?2doEMJ%0K.$P*
%;?I#W=GK0j</;i?rA2Ouo..[&R&A/$E`KU22WR!JUdT3$dR[b^&Fp3B;'rSF*5I5Rb#(0BXsSj_4;SnGfjD]^#C/ZPL5>Va]N!t2
%5ij+UNd09GeUfmp'RPu#\MR<jJqVnp/_Tjho+1)8r4C9YgW$83SN9i(j[?"#kRB;:!d>Mgf4&>;bX%Kp;S<G&`j^B^:RMt<liYlf
%W9!6ldEPXF\2J.C$&lXfV6\iUa)rRE@0YU##+B)[;@*A(J_Gf/+SC;0%'Cp&$knZ"94j`W!muK@6knj`i5$IIf-H4g%S,.k\dn$E
%=GKH"EESsH5tc<8JSq<i\cNg0mZ[;gUQsLH))W(IP;P^\U/!^F1CCQN[)Jk0l.D3)_4ImHLcA"7KCD5kA20;sOWbWng9i\T^^<F/
%+2qGmIA"][j]0CNk#LYaA&kAQ<2/*@;Qb2N(Xu$YQY'bYL1s<#Y%0(9RCFfZW:E=bnrgd%n`H3!l8a43GD`W#lq6>C]E5rV.'&V/
%[L$ce&3QN;oVCBMQ[1I0r7F$M!b1^Adg$PL.61^VYm.`B+p%p@&,iir_0(B.P6e?IlHlUOCljb/W3%=nkp"V+,sj4>Z`='NCa6/D
%@';hP`rMc#A>%!V(g9atar#4SFs,@_9FA/e./S>mL-A3tQ'/7VA,uC5puna'8!.?/1f*=bZ>1>F9Soo<'[e.c%afVQKMfsEJPft@
%UgdJl`kjLqOd?<P0-Tl,p(C=-]KHjEiH!SE6l)c7[6Uo1naXZ6kle)'@El)aMqpoiVo#=tYqfmOLG%T&"@D9nOMZUJh,5f!T?n)Z
%%7m9+0B-k9@MD3c1.d^,Nj)"e\.7@=CfTVS!`snCK+]_lkZb52[aUHfGmfd\"Z\J2Eg8YJ!Kb:=Pt?-!Oi2>2]4#6(4ZfCjXD/:[
%3:+N@\S]utM_lSd-qd!K_AG3e#o:m$S/+!CTVT\?G&[mVU[2LIK1"&?/@4B1V9#O#_m1_j3:LffS5Cggb\-EJP@9n6"'O0[$6^M=
%T!]?$0SERt9DWKCR@;+[Bi>&if>Vnb:"Crh1"""/f_.u^8f4m.Ipj^_laFp&dN,`$N#?I/.%j.m,n>;f9'W]]QDBVd&1)@n810po
%mUD7a.ZcDS&epm&(qe:-?*$t4[b-"*K!>r[@1jX28Pf3&maCL]@%8pTb,UTLb$[YH<`H(q6Fffk/<ngWJu=l5+)R5^&ue6?E`pVj
%[6f/'2i&k7ZS(U$G$_OVK]rD5a8s/8\^VVCIp+$GWJ?Sk+?\[]fYT@;2%9@Fq3uI-Z8#>+#hc\f?(rp=mNa>]Q!FVqg'VF,B#:Pf
%6Pkh4]8lb#"g-05.?65>J^<;F7?eKGMPs?PN35!P;&rDL:0mHb?rG?-4`*VC_b&?0R^C-d6/\9:jC!,HA;$b%U?'S%/TNnM7i8=2
%O&=M,ZaDE2;`qk@$i5boQp4u='36W5HaVbQMH6/$*qV?,*nmK5>PJ`YkeparUp7cLO,fr&FAuIZ_Be5a)K9*7P/SB>$UIsN>9ntY
%lHKGJdA&.=$f.i=<4:g<j+W(i\<4Z]?d5O3+P,#A.m#!NVJJJ/+\':e:*j$8BuK;U.<V<cq`%Q*KOmfIV,G5hEYYD]VT-bQ\n)cV
%"<ffn*!J9UZ!U-:V$rJ(CuoGHE"kf1"nfL8/m/e7b\/Y`l[gJFjSDNs3r"hJ?+S&,ocD2;#dSQRX&*8OajVsi=C,/>Ntqq`0#7n(
%@H_/)Cl1&bUNmSi6;#<;?%K;>X[+:'c)0."_N5.:26$,L/4Qg^C=9X8*?m"0e:X3)c4PeGCS("[>t,=:oE5(_La\?p\T'"^%'[mo
%U--mGL#rY./<'R)GS=ntPhN?k6dQBa=kWmR8_t]9\5PWcZ3l'uS=/0D)HW@GfI66>2W::HOA!3E_GI6b-a4e6WL+(KDLj]J2-=B[
%jIkeDW9)K/[9$QSg(N)D-*"e5:+1?mPWG/bh7Z5l2O;^R!#%lA!09WY*=:Q!T=CNQ*M.]`F:;U_Ued;<,mqh>&GQ!6lh1H45pqft
%rQpY!A0`@P$Q,RO"gGu1ba0a6oWXXtUX*GA**AfZ.ebcf<4/Ze0-0o_,#hgsK-tJo]89'nT$Bu;oqChA;#Ufm:pTsDhA>)S(@KBp
%!,Q&!)i&nn%0Hbl+.-hO)O%nV?!3K&0RYW[Ch"%e(g46p&><`!#OWg08*JS?Tju@j9FMK!q-6[leh=7#FLreVKAj<K$g9!-,BN2b
%0K89i_9,WkkXEJMF@"PN<7dqA_OEgrH*g'bYRT@*,24<^Jt*<GI[+%P`$)X.K7g9Cc2lQ`ct=%D:$QLomBk8,L_e5<HW_88E&`&6
%(k`<SE'gNGmUZZU;BX,T817,-6ahr]bYo=R6#"3s&4muGYM99t\%JShV8=%(\OtLPV<($ZE>@>s$l';u?>:6"Di2n1^Gb#,=VW-E
%eG$Yb'LE8b4UtUQTJL"+2(#Y\Q*)djDXk-jKDm&+RBS>jX6B9?HBOEsHfqWq,\gKdTcORML]t+%=JFdnGYEY\#n@Q'Fb`0W%4A"#
%aAUQ_kXnm.O]jjqeu2Lc9"']`nq=g!_(ic%TXChQN:$d-Y:g=bmkT*3Ak'0=[ie!*;*R(Z67hqN]6Gno>p(L+D,3\O_7b_k4A(8Y
%Lo/bS7r<t@mT.1GJcTBg9P^r;$<7de'OD3*K&,=fmsmGM,Xu,ngJOqRNtO8dHbf>P9N'r[hqu6_/>LUQX1j&^@==U[kp'rt>*7eg
%KTd:<Zn-N`G`s0u'R[>&`=6Ju)`a$ie>AJgZ#L&DJV-r,o\2"P6u["qN?#kMY]C8eJc$b"V\6+f8?sq\BOZEH3$2[tjsCN0a\d8A
%O?d@e&lo&uM5HL_TAdaf9<#*(&nlqd<Tu68*sKMsM-+Rl6CX!!)Ap_s4L##d@hKfZf_OKX&OFWa;KrJh&JmFYn7TZm%IQ.\C/f>6
%L3nkeU*TW1B64<j5%nW<h*H_FT^B\>aXp3&*G?s?"pi\6&BGt1#KK(YKM,3$VhDM3I$0H;!qd2[6^(r4R*:(7&:&e:/d6@690]q%
%g2ese(>Y-a60We91.9gQfHK[X0TK$C2Pid82:/IX;&.A,j%MBP,Za+@6P"`Q8%fM)R?9Ol*AV12frqsFrRc6PWci92Pm@^Dm'r;G
%huSJR21fQS-AG)rUKaB=(2j4$)32?8P8h%d*mN@(iPTFBIhC&7#(=nM!Ud^iT`QP4]5_bGe6`e-;g#P]q4_qVOXDV(1Ym*p.R4UQ
%(]q1Fp^E]O(51Y_'=DocLi;C@i)"QnE7U0U(X_aKLG$OtFAp6bO;^S+rbX]9&UY4&65.A(l6XYIlXl=,9uaRHZN:H[7meAibU-$c
%k!!Mq@H-3&XQG%A(aWG2(3Tr9(ff*AP\u3e5o5*,-8S-_a?lR8lCOoo.\N%F,*R'AZ_2PoJ;cH*Oa/0iFK>lY6_j>l0pihu'"d7n
%0D0":#O,j@`eepW1sut%/SKW#qCG6LM3%?s;^r]@,3r/A+:*qQ3oLhckqhs/:F:EY@4r#/3#UQ"Ns;`gg3'8gaF]@V3e[unTgS#X
%PgKblWCED.j"6iXYq[N_*32@X_*@4m(q^]4Qb$W\eJ(#ORSaSd;Bb+82sQ29M]6*"JNa)LOO5_'hhB/M;<)*K],R%dq"tq]ga')S
%2Y8-!TM@?Tm1EXs)O>r5kg"KO8ra=P>*b4PP0G$1K8m)2XeZ)V:#2%5eC+dcLDD4me4V:VgCojXS!&XIEDXf^_'n&SU>Z6X62Dr:
%FL%c9@d(g;BUp(<,l4gF(TO^VZKu]&[=EuR-lfB!di'Ec.mn9]7cm+Y%9+&GL&VI-6%L?l69#s"-p!K!BSJd>+Uk$=lMZJmJeAP%
%=UZh)[^/-a8e$LJ$3NWVR[+g]5Efu/7[O@K$9Gr;'nO-MoT:9>A4JhXlReMXphAn92'\P'7#&c4R"nWG`J+g**[Pd!Tcc^2[(1c'
%(,'OW0<r)rH"15&!`NA`,>fs`kX;34RA`(o2eYp>,P7S."/\LVkmU&H&oE_dQtjcr70h$fTreA)SH:>`?1%[Mr!l#'0VC5uPVtn=
%)c<=V:@&H/)hbo23uG5h/G'u.]G^.[K\1h=,Dh*NNGX-]eY:[J#DNl=A6-%&#]0j"&5K3*K?PaK/nAoCE8'T2N#lt/f[/$PR"pcS
%31,Fi-f'Jq?Xbhp1ar[IKQG;64Z8#F`n'V/\;KO'X\N'C#c'o,B[Be[Y:/@I4*H(mGbI)$oUoX9EZ1)CU5#V/C%d4Wh,`R,aLpGb
%Llf]>dU:AD%7bChnA["opT%J#<,I)?2iH_'JdH_:6J$:e.-!Pa=*P)M@%MoAj%CiPEI<2cQVuV[6/?KI+qtA^6^fV6]"UL>GSF:9
%8n_<n8K0D'_Br:ML/jC&=g10AS3:.]b0aT2lFsG6CB\dC>,=C!#%UUF*3'EHa_EA&#iA$L+@8tR)e(!83g.Lq,a)2i?OFGb=;8P%
%KM>G^T2Hu1nQ+$r;'GTNOp)`V/Qm!k0cGBam'_#L6PhloUDF@d#^=/R!"2sVUIMm/CgB:!eh)iVOA1<*)Hm1k]4%0/SL7#Eft<im
%Qk.rG)Lc)@"PKKE^tJkE+>)3L2JR=]IJpl9.sU,8"9m@p$isi+(5nPg+OD4A"\thH&J5'FKVPH=+$p0s1[Pr58FAm:878LG!68cs
%&$BB)%K$BA%7uMl`E#O%PK[/B#.ETcVH)\J,fJ1acsa1,\7(N$d.AJ"dKPUf!rl<+-qe/3TYtT#gE?1Gdn?$L[fMNp*I&#M"*0^?
%'&#)UBp*JF.5NLl)a$i46DE\VL4gbR!b##Wk[^hPP7R`*@+8#)GeZf(=4BaJ"Fc-&>9CE5@?3[`V9GqrB!D=kX>8\R9dYsJ17Za"
%:+4Nb_15o)#RdI^khp*]$,[&B#T6@D9tUKU!NsHo_r;+KJ;Sr>Ra5E'65!C"VUUll\*ArJdnCBjcWh#`^:F./d4^c1_"-E6:N4Bd
%'k@o]T-,D('k>kbZ%Uagb')\R_J+4/'[@Wg,H>3Y.914RE9nh)J6F8;QFQ-86i!N_%rZLR1:Cqe;2_7UT'E2W`2mEWTT0<,WE3k2
%L(&:i<cL)X0H/F\(oSf$-PTWMm\-;)&.feJeiq3)JP?\*BSH_P3(sR*]eiR`V:tr%MatdC0/7s\+UQps?!W9S!>0e8a&9N"P4o$M
%\W17LB^1Oe!&-p6GtO*,D8G[?BMo'/??CBj;'-CL'T="7AX,uX;":nc?97A-riXpQdYa$a=lN2,NE?u%f]t4N@\_ImZ!d*nfEI9,
%/_'O+Vk8H8he#@SLtXJ5OVS+!C8.gX^_Sd1'*bip6,A.?dIQ$[U$AP'M11l;RKV#7IB4nZA@!2+o26"fLa.Wr(E=/GJK(#i"Tb1K
%)<+>1)89%&ZU:M[fKeC]UYD((Z`oU>qRW0aXmiN8b;\7fC1Or3%t\D3lnD8S4_*&`V05lV3gtpecGu\j$1Of]%jO50YY2g%.^/;<
%Rs50L$Ud(-7.CaB0R-abn3G+TiF4/6.$INW+dgjhi<Kg+81MfW6l%)c09+%TP,H)ifj#Fg*>24_'VHu[H^I843#hEr8X/r4U8BBZ
%^%B*t$EcsM12Kf9O`fm@eMP4>&bCi6W=\sS3Z:UMG_l%k6Z4#Eh,"OT)E,TI!X:6[d2S2g99;bE=1f,]"nfbXBeT/K92:SgKCta$
%KEVO49#-0VWsq*h1(.c+B9W`;FI%kn.g?&.BM5#+/MP=YM0^8j"rV#8hFU4q"jBrRj0L0H@tt]<;(TOQJ.eY5Z\3<kp1RJKXcMTE
%6&BQ+:iS=u!%Pm[SK;dcFW#+_f"iLXU9r'q0T;rhO$m*;>qBS7Rnk';*R"s=3^9o?TF)Ae4okh&)AXNj1k#`e#AjYg;`SUo+r"n@
%TbpbKc1IqS"B/50K$,%C!'EYCc1<3@@Jklbkd;+.HA&hpJat!\Ak'hXkQ_jQ6cdHg#-aaV:^rUWd4T$=e.i?(J\J\a8OQ[)IgV'I
%"8-b.C1J0#>c%1QAt'*l64Ioc@E=m#=_R1lBqa93R[MZ<M_h^P:MRj87#>Zkd@?(&"_*-+9/&[MWE$(@iBU&88T/-[*C@IqjF4ao
%D1TI*5hKVh\qD*#h9=j]+Yt=l*`c^^K<]DE@C3VlQK;e@HD\pn6W4:'F_O.kj92hVFNMPtR^Ps5nl?s!Dkp/P$5=MRmtME5_<W4D
%C<8;ie/kZDip='T_qL;/*#Mcp0,72`5m`<JT4GfCf(^GX9sJ@3<58JWAj9MF!A\jaQN[N<[0/WEl]"SH@^I*@ed+:)S5S.]g#$Pd
%nVFknBM;\gK25YtX</$P1_l)@H'gQ'Th)($fHC<1i4q]b*51TM0Cu%Q5<#>0U!A4UUQC&/>iN,S^dLo:!d;n_98<-$iQQ>2%98%c
%;;-92WF4Qa^GNeY)A@bfdUajgJM(6P/#`n"G0p8_4:UZqV2TXLdGi6?.RFALa<F>rZ"\pu8nr'mFaK+&nr84Z?5YGUQ+f+MU&2)N
%hus/D!B-TAh^pX3S<T\UfJ&t=i9rMiH6I$.<WF)U9JO?m60ns`hJ7d-3-eUW5hI-bn/W2r3E[UkN7*)^"KR36<W6H!7Ym?n$;s?-
%:L/_^1a=3M+QO]DFj"8*:lJm'FQ[fQ9L[lj8eB*&MddHJ'/bC,?@fi\VON%S%Y_>Fk2F@0,BttiTjajU^(,>$H)tW!%h!;A.n2Kg
%Z=ngi^)#4090YWJ.Kb60H%[Od,u"+V`b^FcFqu=R!ATMV`sjk71-f;GbBRF#=R"DPDQ++&_p^4(<I7%;fF6KsFN@OI(*:Ch$L4:W
%:%8OE"Kl=sbLhn\8hl*kHOA#q8_JW+g-B>(@uQ@TBmn'b3L<#.[;)'I_p"2D(LV2,:P.JrdEZW,6g??V1OqK9PqFE*11)68TR!fL
%+N('6mWmORjja&oO"d<'+dJf4UFeT<]VjsU\<cFV-k.AjfZ%m@XQl!g-rmo7%njoca4HBT/tEY$9rZ,,'!q\_([s-D<+sD[lAu=0
%2c1G^,ELe8jD()/6ouD)@s\#8JiXd^:@eg[;R9Xd1.;_CTKLBYZ!*+.i%#(2@t9kUZ-0^E'm%QMbL.iFLA,Z]61d?7F`;oqcAT?O
%&MO`$JQ>,T&K%2J:E:lN9`c`9NJBUW\gj1J,;S8FM'i:Q-`'6'"VIWomYo:I:ol\^*6=Ktcepg&V,fFC$@<2Vdk&YA=S=-iSIn6I
%S?_N[OTAW>&nd2jVB03-<g\J\hmOJ^8Tr27KgcM(UU.`l[;s>e/Z;;[`RMLS!]2SS;KdUR@7-@qSq<[Fj-6idGka[:UTf:m/emI'
%AaJ/BU83=V9H\Xu_0?g^m*tS'@lO9@bJ@,*TkCmh:'a$&Xb;Qj8pjf6V^XZ_L\em,"Ofi7FC$L)YVNR:;P82QN-g6h4]?c>U9o4g
%&=s=5YU:I6*#?b#1ouJkmqibsi?8ZgS(O=;88qpdl2Y5m*<fIDR^N!Z&U*5L5A$"^[li`aBZ@pq11&&O^h:@#d^4O\>0*eL.A0)J
%=tFpWG:VFDW>^>`E3,_J;)`9VgOjHd,W;BMNAV2S?k!r3g>k+8S,pH#SW"uEn7nTsXSt42=3lhdXL8ad_#2(!OC1r;<u-@2)+=nF
%E^EJB*jUIcE[pGn7Ejf$I8!Waa&7[7(qbHTBWV"u,E^p#8@g9=p`#*6*ubJM&8A-7Ej<F3M4d%GZ<:6fr(^\q`aN;S.eZ3P=*HQu
%+j0NrB.27]C7YERqa8!I&:M.Zn0m(k?54@*OPT?9Vk8H8he$U!nCeqblip)20>IP`=&5F&r;,pJ]0C`BlCWmdo[g9RrU?@XHM`i^
%55Xd$P;gh%q-%*Fq=_8ol-FO&s8V'0)ph>%Q@t$PFn1r&<5JT89*826`6])C]2rr']#L3`"I'8F9:bhZK&U>WAMsYOBV@L=eZoiX
%bZYQR%*qO[l>5I3"[=W\1IE@_drYd!Ba,HD#e?Uk)AL;,)4;S&G%2dh+[]8=%$W+9qa\=+=V^6S:-I\-*[>A7md:2g$;s/fO8gI\
%"Yr@oPQ*KQO=i(N.Dc$I$M"n)XJO?`87;dNeV]#oZpig4p:^_F*%(%<F1k_4d9W8sm<RW'[&A!>g,DEqU7d8?>h+L*Q:BE3)+tL^
%"ZE/@kkII`'c)=d6>""51J48'CdGIFXCQuuNL4V9fbAAE8(A6g5&'"BkR0*d36"Lq?rS,ogED]1Hck\e#.dXA7Z#,1"nMaE\H'sp
%0m\aY:=LPp][I;L%#Z(Qfbk?[YZBZ[0kBA1at_KZ9'E?(JdQHn:nk*E.9W2dZkL=U_XJ:D=[LMA+!llpLTN)U[tu54h^qp6Ff@S0
%&0oOg_'1Bb`u+U%HG0EVR,TZ//5k.pC(*G1(.7O=&i$!\5s.]+cr!;^H:;obA:DJ<U4i:gAmE\;7ts.D>UiimZ.k)j;D$[o[][W/
%&JH:o(F`Ip5/[aUh(W!Z$&f!!\pHRbH596RXL2[p_]D6X!DsYTJT=tun=Upo;HL'jeMiJ-d788b>R^[S@Jcq0#?GA[BXo%ln;2b9
%L$lsU<%gCu3p;3J-,YI#CEB>_4'\-AL,#LMWJms)+"4sK7mdA'F:l9LHBp\"&t(T8X(nT'*Wh<e%Z/B+,cI60X^cA"<!((MZ#rHF
%.Mc?DoKs)amNq]XZ=?8mduEj7O_.`6'(a\;5[Y1N&ulfO'MPT=?.Ikm4Bk[/3+Gu70C*?H(bMU`6A<hJRO,"WS4ZM6MT/+E'd&-u
%#N/?t,J*TB&(4pd]X[Tu>JaSi9t+PW(eQR%H;#KIY5k>i#G#A3QEHkc+Om@15H$jVkY%B*JNQ')++U@*EV:Dd57cp8TV,h2Egct;
%Yc+;\TQgRF\H:e$['aZV-d\bZSk83BLG_LnMIpU%haNCACDR@L[7A'sZLW-u>`7l;A_8>-#F$oH;Chn=!uaZmTMQae&W;Su$(=^:
%.%XAnfk.g1c5MS^EYO`_.(1!+KMg.t1P$/W/9JIjMA)8CAu)I@n&p>/^bplf#2!EG/F)k=CfqnYP9KaAEb%)s!:[-g[&mgH"p@+@
%(cs"eU;&+=RF:.:c"Vt/gX:9)MV=;hc@o&oUCiIqWs]29n?A\'KrFkZV*o[WBa-#VgYd:,0uAIGb6g\6BH+>!2[s;8:/,^b:*PZ[
%dA@\$!?`nqG,VGKI3ips,q^H@(-E4R;(s1jJ12Ycb`,Mn&2G^WJ^fcg$&7YSlYCr=Y!XU%YQEOQ.9j_kKR3m8\2(N;BW;FadrQM.
%'L;iI?r'3jkGS[>7-Hbj-VV9Y31N1P<XI5'N2kWlB#E=&ZlSP)/>Z\BF:84O&kcs0$B"_70Ut+AZ!c\qaHsmilYR.$!Ji@_fFf#2
%/]<QA.[C)8LSXFHj-BtV6jt>_9LMR*D$)lA$i`]t4_39H@OCS\R>6@8jYF4mlR%TQ)Ii'#ea*KL#NDY[gBp6`,"fI1o]`G$"X'B"
%\:f`<]1*U@@hgsgX):_KDPJ(*(R8`Kd=VQ&P6u-[g:_&pP5r*$(+KY>mF"Z8jf98j!7Hh<V\$'@Lt&1Q%%RE4)1]#%dbI;rX2H?:
%-/NV.=9'UuXDZ)K*+/qZ)),K]g#heJ_TrBj2L<GH5Rn#),="eR.3fU6?5Bc`V#)]&=b+#CKYZ0HHu):^a?mj[-FG3\W%dVE../Ik
%-eVj<o%FL'#:1TMjFF55fG)t#6l@1#_mYc)g22D''B!/P,qL`s,Gb\`:U1KC&f068)\_](S_aDC#Jr<VOu2VP>WAui%$k"g+GGN[
%;#2<Zl='F.7dEN%^F;VCN$Sa@Xm3Km`)6fG/t/3\&8h`:%!$G\a]7<!9MUFZ@0D*YUb0rfH^X.6e9Sr6m*$UI/u:sodY5T:2YE_@
%%RMEA>SSS)(6,,IbTq6d(D3kYXH;R(ped1@&fC&j>E?jKpfiUO$eZa)^6QUr+:gk,:dh+7GX@[<Bq3,LK+3E]9LQ@`<q++&a#l'\
%&7&Rs4G[AHiQ_uQSYB/0=;RK+Z_/Xt,>TFU+h;h21VR/CpbeEt)"e8@/crCSrcT2o?]=fU5h:D;&QLQc%?\i2=H^>=Ef7Nh?qGNR
%:MJJ6+n8CQap*;eIpLZj#gjbX,JXlN181)OEZR)5Pe\KiJ:U\REs?#MU+t=OT-0G+AnIW4jcsHW/u-KX-caX+"gJGU*1$9,>q1$%
%[26$?X>H.dUh(5O3nBA4C_[f7EZ9NGNWQ^$)\`o1nFNp#A0iFZl#WphBi66?9\KKDZLebf1mX%I0e4C5nH'CIRUS,4Z@ed!.0$@T
%EM";o"E(_/`Y]JFg/G)L`IQR5dq;:pFF-;UKf0EGLqnBEVl;5cQo$^XfG9@.Q3Ks\[Q&mm$P\E1MKb!d%6`7s"1PH;c$M]p/j1`<
%T\H^+4n*rKe[SIk-0%;2oIs_daFGg-DD-ZHSBl"FYW:P,$+(%,.'TL'dp"AU!j<0gXg)DrVt&8@Tgsd3DL^qFNKK1X$XeGmqe'$l
%N'IJ.cg\*$@dAQpkGi!tWFa^3Rt8MD%_71#-6+aA[d1(?N#3fkHkH"o1RU4)DM11<l,=ck)aj%iE?RSma&jsnD`[6EU&\/#8CAks
%!P<_<)A0:(P-T0s)pCZ$6$\BG@>k9-r+M$t0qfG13\rY/jLeE4'E]O2>+RVP=Naf%bZI&5RO*lc+a?$STN2X(=UQ4KJNf*34p&Jf
%ns7aDFhM]Z_A#Uo>LX[e)/KFmmpX>F4=>a=(!T.rTGlsn2%@i=A[NuP)"FfL>7&QsPU/i.\9,5IfPGpWEO[$fWT9d.S+ODYbZ%k/
%-m<Dg67;W7dsEk\,tmES8Lek!g*QCD"3,^'Afc)a#84^udRQI&m)T\AJ/!'e#&k`CRIrfb$\[gh%Si^Y0c$a'ZlfekLdUh;NtB:S
%%u9s(5YY]i@J,&Z12no4Ak42m12J#JdOc=rmeLNnk;>#dJ3G>,<F]916GoJ<-NH^.=tGP8UmRC(-+23NCBIouQ"jB?W@:XS;71(O
%.FCbT:^%(qm@JE][\e\palqZm8rMg[i#QR/6tRVD0N#,.i?#s-"CkuS_E#W@d,=bt,t&M6>^i5iQKYql_EmlFfFa\jVM[i1BNdGV
%8"J!S;9VQU'UMjBEH8D9li:3-!MUGHm_^\@Ko3jf0H^oJ*NN"'%?HP0M@p,*\rQ5jUU4]L&kjfDT>Trf@`nT["SMfI%>MfP7PWA3
%):?UF3#Lu>3N#`:Bp$rl;?XA<7.X.";+:l>+(4&<C)eG[Jd5)T!&GWR'81(/n^Hu!Q3]Q@<mVk%2tSR("lU?'UC<2^r#9*Z.N`-6
%6#E1/!($j1:ZH.,!XOmrWkQ8nl(Z!IQr>-Es.N(bZoMO*FE,1ZW6fun.=tUE%UNE<fH?^T#6On(Q-QEZNL""+8tj0($!'u-g>Ll@
%[@F*Qe`mhe8dHUr&'=oacPX0Gr+a(_!sXCP:G^TPX"-Y_<Q2/52Ep'U#H/&q1<;QsbrNl*@akcrC[uR08U^GL(Y*4I_&Jb$93Jr;
%q(,"..)B>Z/-/_J4m=i/>9S!k9>E^.gdqPpG<CAl_4_Mj:4S2\p<E4HN%1Y0purSi^!hchZ^,2lE$\2b`eo;7168VRHGYaA7ZE1/
%Rb@EIa-$kZS+q.@,<EVZ)C\7&20D&->D:.X\TKST?iWS(7A82TCEe>Ofj=9s=U\"@H8oof;*kYgn)c:9F%'hr!)?&k9sZA"lY3Y9
%^)e3oV\80&WL>q-Sts=51m/d6"YhJs*BGP(rLk1>@s#j*7.mi\0O#F[/d'rR])h,HliBH.Tpn[gk1RSp9j8aVEkJD?33A8g%9Z"G
%8Yu<Q@=f[AUh;GC?l$?`)sS/($R,'rW-$g)k(6&%6?4(1%O/7I1X8ndocEJ*Nde)&8]FnCO9oerHNB9E!WLUl6Y!EH1'UlnlgRfD
%p:mD8E0!pu0YgqV=N!0kP9gX9-:_`T7Y(99,',PJb9\Z(VW4J56W>ah7?Q8t>$2UUZWsj((%r=#[Q#?$P/iAH"jBCg.Yn-1)o`R(
%8dmcr*i6MA.'YZ?1iPS.7lbXFXQYKA!?nEB%;%RIM$Zp0Q8Oj37MOaM-*o>#P<_Z-2m@FE_Di:?3C/bg>Vg8`:8Xu-\fN-U+kKZs
%Ne9@,&[I4ibFkaGd*UkkM7Nbl@Oh[065mlgi:-t:I1LWh#.&[mV.s`jp8$&[ZUl)p/d-'#fO%SgKn?$Cp2WTKAdTge9\;/[)8lO%
%>RWom[4pAC<>0j2e^0E-qT`.X9bl7,9[TN?`uuEcXd1u)$!'nIGW<r%,#5_/h.#ki&24DoloPV?!n\/Z#\`T6Kt.G$j#Dug2_\,\
%\Y,$(RheZq90Brk0"[isa([\h"1ngePS#2qB)9K006-gs,,0^bA5j<4]#,Kk*b@T]AgEh_8rV:oUc1`#gVKDY^9cJ!=bG?79LO+Q
%c.V07"Fu4JPBpC6).W"NqLS8VQ,?OPou]A<-=#GS#Ob()/]%6GV^q$R5oar89Ru.`9%NX$XsR^`\1qk)GUrF!dC0R6QRmM?.26u2
%&,j:i74u4\QJ#$j*8!1I1[<`+1(=*6!h-n-eZB7H/nXY.cL2XGbO>cp1)!^;nL,'K_kKC4`@u7d"'#kSJ\VB0QFa9&Pbo3t.((o*
%&r86$9m=tb:("EiW=m6c=#o0=37Vco0Ff.&23`K2KAtC7@`E77Jt0j%*aEm\90C\<<]h&.RH-(A9_"M;Pb\d<%Ll'VQ9gDg-^1`H
%6uf(P_bS__`JYlY%m4hm>t_bZ'8OPj:`LKN*&pYTpTC9J[qaP\)_c8Jc#lT.7QBu=.[/.j/90_YB]+E+&uHe<'hKC=Hb*Ts+E<p"
%OEeu8#81BE"S(RT3aAeI@7:[Hdio=1'fk&J`,ca1iM/+J2]U'o(*l6!E'tZGbBF=5Nm?*Ueks>9J-#E+(,WZi-S91CL-sOLc**5f
%S.YlJD'6`iUBRS0*AJP2$7;Ka!5l-3DfiY]e1Bsr_hD$3">K3I/KD$TMhN2!\]6[3qEGB=S7a#lIfU9Z;]#')$n7\YZNt445iI['
%NU?irS@1;liu1ZP&5?AF.nhqodGkC$Gi:)XDM8Bep^pq*[P6[#kMeaEkV1rq/7_<9J-cIN'V4>iQuJ]W&5B!rKS,=@I!Pl-%V7M#
%CcHW+*c6\skRc]4SrZ!^"pd`'&0_Sg5.FDiNga84_<FRI$G&M.L[m`5mLB``Jd"^b2E68T;n@J`Dadsj!u`-ZP;!mcA8mJ<iRp0*
%i#&5F"G)R@%\t\/H^Sih!OS,"U`[,)4;Z;p#oFW^=:Ri)Ck9EJ0HC#>!uRR"i>@#]^u//5$k0;X^&rZt`<"HS2hV%jBl_GiRZYDu
%F$]<EE>nr>U0F>-f9-S$\/$ludD3S$(P69(3&om-TS.7"_,8E$>6[,J@1j-[0[RXmj+UDP[clX+7DmJ7d(p$f[1MAF7L.Nil7@:@
%kht5E!-pZa_$R+&#h;)SK2[Y4S6t6kH,(?):HLZujC6-mD:$+U(/3ZPNXefd.%Vd4iPABckPf;U_-qOfk]0#qB*"pV^qk:M)fq<(
%i8Cj+NnA>44sBUp5V2@A*Lq+[We26O3.j4-(j%i#3;bt9a"9?^A"&o\.loX^Lhnur_$TgNE8`<,3&W8gEt*)-lr+8R^&\J:,mQGB
%"!!gH5fWR<3&jWU`KJ_PE,]V"J>X@=i/X_@J0T5ZE7jXc(q)j<a*+4VdF#cNESt7^l0.%RdEM@p3k439?.lFFi:%[?P@TR]%Q>!%
%AK;e]!0W>1WhP,]AF'p^d(qkrF))]Xi1@`AnH']#&4/JsXVYK6U[*#PK4CNX#^O&`#7"L",&glo#Ibt8#om2C]XpE6f4%q@%39hu
%XJ:F6>A8GUdD<59<,i?fI-j8@!nXSM"]*_^)9'ucDD?ePE,Z:A[[R:-:4Jo]%^(A8'=F#L]`A@^\`6)#E,`"BODY4,LP_96:KqdW
%=Okn2hSI$:MGjaZ#7&:4Q)BIV^qi04l)J+,_-ttBBYsfT-]5"BL!S]8=Ln\qDW'I&rtfb3:qUd6j$kZJ_4auZn2J_1;*sejTS"Hr
%0Qcp(M@NDZ\8"j%6jG+#0G.)=khstbLn)uB_6p))'ch[MFFt&u*K?c,*?CYh;gJkPTn=#+DDBsk70gjA."%_^K/7U(ZuU^-c6GgC
%C$t3CNopb6[\ABVf#FrFB68*/-Hq)`khqh+L+7#e_,7;sR<Egoh?Y?:LBkk#78q;:%uuWe6'QDF#?TDLhZc2&80\*fGD"8B\@%c-
%^_Ab'+["L"*o%@f@rW=ShulBHZ)mHQfVXq\2t5`*lVnS^%M)<Rd8J^+&+3ga%JK"9#Hp8:F9MoQM[?C&CiH??#gqqai38[$>QurC
%A+K\Q42Yp%XIe+*$XUJT4EO]pg_<b87Kk/jKfhW:EP=k`!tm`j&FU&PG_X$IqP+(Cdq%N#2Cf-?L6lf:^u8$sZu&;8GJp>.TJN9m
%F6JIlDeS'f3p(EU*=\MF#`;YIUOf1":l"=Li(RP*e#<`b*$op`dfp8onmK$_^q_++nCWDS"\orTJ43NnnAGlr]OHGim[*BEi)b7%
%T.Sd=1&9T"$Rft'i=`i;"+LuWMgFYl;H,[/,&:]=Uqk?%KAb;n?WNP3I2'#q_=PZ.oQ9%%r2o@:%;V1>dL[CJq^@['j7EZoKW,\f
%4oKR?p[ebWi!@3K*3C(a*0LQQ6Sfj(![^8(kt'`ogd%Jf&3,m0<Z#eIF35bkNW\^:9-)^i%QM-dHCVG&JA\a&k<Bmq3-/s="-mI<
%E/N/EXt\c^Y^DHK#+Ppr!gBnlJYU#m!<_cdq*H#;E3tu-Q5p7$TW*_^m6KTG.*UWh+E6K8^ad]^^aT=H"V<$m30SVUlItY]n@LrR
%lo<osn,^No`rW)tad"Fd3,p&I+l-SB.7c6%@YOn2VC"*U3Xdu2N9!SO#+YDF_VD72#+R&E'D/BDJ.m0n6G`p2S?Xm6E(9r,e3F&;
%UOWHjOkKb='QBYHc.nGA!`#sXEo2lY:<Z)&ZtrRSl&)FHBUMSH#Cn!aH_>naKYctY'Q=d)QaWW=UI:no\"\C7-BUTefq<leXkX6l
%"e7JkKit$F^mQ4<^(s':-^R]KB0u]TBW-])DG\-RE-Q&A#6B#OWeEl_!s/sB#_Rd7#WS==1"lg5%bZE32Hpl7m[Wd!$l!Z9n8AZ3
%*<dE/7(V0(J3/>qP@=3Q]Z&0L*?a9b1;e@@!<M@F$"2IQ^a[ni"g<Q/46!?Q$Oh"H;aXbM"ut!hRA[I/!,#CHcX>uSi/DY"eTD:>
%Q7SmkX;Kl5*37RD^tAo[=ptgYCAl!,*`ibh-L&kkC`)(I0g]^c$uj7NZH<=R3,pDC8j`U!#VJ5<eH!B></dp8!e<';YN<7qJ>;q#
%JGgJggaV/Kh?&56PcV@sJ?soa6?N9IQ69%Q$NNq-akMA@1a4Y!$4`UY!'"P\@!LQs!9\SYFs@U7M0d:2UDX(P)Z_NU!s)[&OXhpb
%3:FZqcW^Zo8ku3)K']3Y^BVU=-3?.m3Z3+F5l`;'UGoH>#iJPZ#i%?M^d/YMF#P=oPGlRd3sIZSg%:Ze)$=,,dq(iHG9("$TR\Po
%XUWC0!fg`20cLHZrVSbYWhY*^.\PGV)]3P$R_J%f"-/u;inhJ$;u;Ce"eegrFN+eO$of_H]#4dV*$`fS"+CX^SG\L@]c@8]h:YH6
%5QOB[@W?N)E&A*-(uX0gi1/S3J:lF@:bXT=))'"NiXH)O@mk^60YhB?j3\8U".\n&f`Em0$ugGh'b7'MJC@Sr7u,D-i&&MSN_AZC
%Dq;/)!<Q#?'(*OT&9,dcMAE?Ci(X0HZ*!&:CU,;KXr.K"<C78[38fbk,7Ir"!JdJEW/MZ8E-d4o_:*D>@8#(ur]1NK8ef`mK*.-C
%L4saiE4j'5Nh:=,C#pRUE5qulTHV:cNW[Rn;Vp'aJ:f?EFLI23N[Z<lm_Ak$a+[>D)]WgYLdL9H*,s+8&,$r%i!`QM0!,.rae:;3
%K`O^9P/i\(!s`)K_dJ8Si.*VRNs=hY"R_Y<g&jK2<_6.!CY8]=;tc2*X?b^(:@XEI+E5>EnLWB'&@`Xg/EN51"9\\FYW"i*%';$l
%ZF+)PBI9;\"R_gHUi(b!3>THDRfk5sCN&#<+E6en&A//Ja.QEB5mIIHb[#!5(I6o_[M9V4$3\Z%@tPL%S<Ha^?ipNA(LG:elin"\
%ik1Oo-6R88MTWA5For#?.9pT7[B-<tacOP%5i><9A+k$M!_:26*d,k]^mRZh[Eh+r84$6#"%*-&FrAW*l;6DP797A$)%%A.V(C5\
%^d71QgV,rT#GLJ5F<kfWJM!fFJb)_jR?>9nr&<O<6NY;))U@l1"KjB*YQBA##+YuC$m9MRR%cJ@JR]bn"HO#qcG4fro/7_1gd>(M
%K*..,p.SllNW[RnQFt(b_jR4A@06Ul:9!='@DLj7<BIhOJ-.*!k?nAp:'_9&1NXaY)M#lM4Tbs0"KZ40%KoP?Z6P)cWjp_WF4h[e
%X1IQLM?HZr%qE13&i`LN:q/pqk?cP3gX3)b6?^Gn3Yj[^R,5<g!iL5JRpj>=BD3QsF>WJ;h>^bmO,la4B>c'<cOCf&A(Vf#;[a+?
%#F).M)&bL0@45E;m-@=71!HIa0Q743lFDfW#0rTVic&_\^p08"O/=-?35\%^jhoG+JE)g'5W3<6gl7bjkKEtW3rL!9piT@ss.K@0
%NX!c3,oH<aB]'RNTm7/*E0*9R9EuIqnS=M\\3U5;GZ2!iB]+!=1'=\SJ\)tJZ:+jc0rtZ`$lmHHVY^AuNb)!'q(3FCT%"&C%L12k
%`]e=V_"e=L(3D6L]RuC5!!?:>#(Rq9^qcom,0>:aJ^]TcZX:PaTpc@K`@VodoQ\7=Ft@Ud"rPP;Z+scWW"_KU=PtSSJB,G,LL.+0
%@iYs4nQ9M:KkDrU'N`=bW=96*[QVqrL)C@=X`HnZm9&;,8)"]EcEP+3%`O:\@"H47=!JB7$k"%$`:V\IJ\r!/337Z6%Z`se',!9W
%;O2V0":f'6bA"or7p%7i#W`H?ZZFL%0]9/=jq(T.E"jjsXruZ,!Cl&Tc5>JI?Z<pn#]M-h=2,r02`p86$NT&MjG\Zi%@`0rp)EpJ
%a0^Tf=8[!$kaWLh\)Z0#"H&f@^B%od\>0W7%4MP8ITuU965&rAqDT%rVuUu0D`UT8%;`8`Tj/6;f<E#P`_W8U%fHjH1OufLOhW%m
%'iq3IhjG8!^,Q5\@4'\Dp)?'iZ@[PsKPQ>1)!3cOXI/%VJc%,dTnis72hif*OK]JjS&Idkl&adN;1S3Iq99O3m'`#5TO+LN&'/[&
%RV`-(#4)S*at;Ioc^#Pihak_-^mOJ%hbY9P"k5Ih/nujVlFYc4ireQcnRJ\-!.>O,1:7k[)m,uIB&J'c8>j7r1X7q;)(K)Th^j9e
%B]+95KS%8\kIV=(Z)o_;;#5cZ(F\1cWP*2"Hm<4us(Ce+Rk$LZ/A^d1j+"i\RAnr<TT"(_o95&XCsS9-9U'-X>HQ:<'M)[O%o*js
%')U:!SDtZQRJ-c:]HD1Z(+Q4P&eVePLrahN+*Tps3BqP3,J@6i?)JCo31519$,."N5fQ<hpP/%;JJgX]pF^2BFEVTni*c@=Ec8m^
%X:$h%DeNU3Au8LRA+:3/B[#>cFX#;uVSq<sS<Ec`&UOn'9A\MSYrA-)M,*Ds(6\-/@W1DMZ!M(_m#>T]"Zj%M>)LjFIt?$E0#Ss1
%)7;E',_f\sAoDLaYWld5hWU@PCUMT:1O=UuLW8Ub<)d?slcnq+e&in)'L;0k.(@ZO"8D!(4QlAaplEXgcKe3[5:&D^H5#C1?0[s3
%)o7C43nBkSS+nsVXldRY35=+&:@*smY54T),kf5L9db6^m#<)2D79%^Z_<JbHckZ6B(!*ufGcCNRWN.[3\H,^/5p/!U<#k.B[#>;
%/f:SVbhfQh(fHt^HdbO.d>cB,JE@(ZJXtI5/Q-gLA+gZDg4kaCS+sZK[PN8og+Y"kq?3X(&fJHcEdQ7R$;.3[EdQ7lF((m<AhO@X
%7VZk1?n=^5;0rBNQh%ORmEHV*([Xc\D.p8K!c1?n9qhaUdn&4FW'7)#U\:Q(J;fCH[C6_Y^5URu!fjjSfirn<2Mf&7P([d_-h_.=
%M9m%eYrAB`<;rBXH8CZ"gAf1YNPT2gD!1KRLJ"T70J[tg#,g;3R(_aB$A$9_fc-J.JD$@(%Ik&i&pqMl,&04fp*L'h/R=4HdD.6u
%:@-6@`t1.R]pY5)e#)Y]_nKb)cA^AE<^/T&Q.HuM!_ES8YIC4dQLPp,hQ6;2&_)'=R<_9.Das(&k>@&U)mM=A9VQ0jfNZuf['5!)
%p'-I#g)c7+>=$Lf&pk;eUt%.Dp1?`%OKhRI9pAI6_3NXlDasYS:@&FcT/#>#m#<0]+#N$N7Orb=)QbrJ2Q34'-8c6CNL81@"*G5D
%UsXK%T!t^)1X^R_V.WDLU\.*7*.s7%)j%a(*R/92M<hEmT[A(\-"'O5[,)58=b:cp>&Vuc(hZ<EDi#k:4S!gId19dASaq)jIO4J$
%b3P$`DZi^E-h_.CNX=ApAoG\KO[@Qc]t##trg>QhF%`<,LGF3t1UPPgbhd"V#WX.'B#68[=rO_+eio.M:@6;BEF[c.[5UrG_&S`o
%S*Le2W`+8>72S."eD=H7VC/LgQ%`m_A+ndQmdC6;*aAu+/Pp0rB$B,U9+3YsQ._X,HK8[ObhhF;*RoNYRCsp:d$9aHRgs6i,I'2_
%;A$%"&UVFR,%4"ep6H8t%3r,:^#Mf.RjkU$D$ah+2e$^foJ:Wt0mdj5o^N1Z,H?DiF^RofA5uGX4tq8]Y2Y!M;5rMU:uSA1?7Y$V
%+9Wl99G0aZV'HNOAb^HtY2s'r72f4+8U3!L'-6DKUXHC?$83Ag!%D%l$nE%/9-geGZQM'8*Fb?@]/rD:H<)D^R?.Qg6WQ--,dJVa
%#*M;b%D/>i6YI?H96,g[\gW!"1.ZNB^!qbaM2A+oHBINKmY;OR/7<2Q.KEsTP(od$(,RI8gN=^W5X&DN2.1LL>0"P),eO7'C!/p;
%#1@j//JaTdb+_^CK_#X).Y<<U=oB!<N_\?l&a9GFY/"7m&5XFTp4U8,kf?>[ONq=%%:Qo%ALhop`=L')auXYiV:\,b=]E4t"msD'
%+C?Oe?@8pb?6kVdd[<Nsn=>mY:+5K6&C4O#Nt)f"YXRN$+57<;@#FgRBG%3HA/?$n2'ROoZ,e$BGFa=%Qo>?T:cE/0R7^>R$)aR9
%!Dl'^3Zp'j/^\`2<>9`KCe(g:M@T]>J1YnIUErdU!A2%]d1.Lk<uQr)E6uE4.`uNs)r,F^3,o\TMC+\,Zm&sZZ=%6gL.lB``fplo
%MqW8L!B2+ZW<G/Cj9#BJOoqgD`)P+cHX=]T!3#NV<ap'OOs/GUWg6-X7`IU,jAsqdeE;?*=-O`3L&metXi4$86P09D5m1kE3%-hl
%WWp,haBru3.5Ko='6;S1K?u=#l,UU?C>m5oN&WuY-qEPT0.#<L%!nlhkm%d]%)PS@Q^uKZE:W&O,(n/*mRA%M=-77BU6)r28L?>%
%$^I[18dj+uE]:74_h'8%<<[&eqi(fcn2jT'oQZTfehtT%5Z7[+`ZZXbEa4.7>iNi)=B(CG=Wb\S`&ZoCLb>oVNc$psjdhLt',9Y!
%UL8"O=Y`!/!^Ds44TZ,H!1ja\&8V&%*Ch2BB&B:b$Mcupjg^qXUl-84('SkhVd(Cn;$oi5Br7*SW7&m5$GuOt(0C:#."k?9WR^bk
%M&)2AlR3rKU'6k'9fY.W6C9%[=.lt"Vgt*Lj:[QWUQEY"ALX26(T170+ZWE8#JiHNO?TI.MJa!B.6TX&@(gXn"uC]p]#4^iZET'V
%cPRi`o(]Jc%Tac:Nn:B+Dr:eA72cX`ksmuu+qe9;M/t%WVRAQo+BY/HPVf/n+Ep_CV)-Rl7?[8b&<%CMADbHr89b,:":88?,qH2;
%"T<$-^ea_.AD*`3H%]uW+#_?qdSc1sq*O.Q*[GqCB.=;F0q1mR[5X*lGBbrV4_;iR&bt3[kfq0QQ!mUCjdT4dVsRAKM2n/Iq[EfC
%b8\ekGpfP-LSl?lUY"@QXVc,H)'PAJLl'#=FY&/_I)ag8*@dn4R++\WC1/o6MD/NFj>T-NC%gp:k[^DM+?p?DD*0=^JB:ZaN#^nj
%6;m'<<p\7"6+K(d'HV(Z1=et@Tg%!;R[?H;(dp\Q&snaRMVg+!Lt\F@nWQo*(mXXp\E;;9UGaPt9tU\p&Y\2EFB\o9>ZVknR"a]4
%CR=m%BF3<&3P*:+5`<fQkGD\0Kjh;VILYHhMHfQYQ@35&&pqWFN.iLDWKsX8I,QVh-7onTRuC<^4no5\Do;*U:nQ$C%Yq]lj:K<g
%X8G"^&jR/eT"G2l8CUAL2-SN27!TG"+aeDFjPekGqUYLhLiuUk'X7t_bW#W?OF_TUD8GqjN.5rCrp)J9&>#lY%MGe["s)(sa>.3<
%#@XJ3@M=#?KJK%_L#tAI+:g&7-3rLHOF&[Ui/l'6K@Eb6UKOsaKqVTKTZH(IcGUj%Kto`C+eJtL1j=Z\r/e+;Ipa*d0#aPPejF8T
%DJ5n&/^,rha;f6L$BB=DVifmX<YiXT_'RWIjrKheOC3h*KO`c!XpJ#7"f/(j6;*!dM"`HtO\,.;;$@SUS)LI]/fKTUJaMVXU)l=Q
%Gsh:M4H->"qN+`;nX5,eQ9(Y-5UV*J`*&dFV4PI[5FIXY[`YRQOcG1GY%YpC,o)Bknnl4m9`B)XEkebMdh8&sC^hSjS0ZRAlPOp4
%:cXQ($cNHWQs/WAKM4*L7*H8oRjVrBqRV3R4?KLh$%6L<1DWt:aA?h$lLJE<`Kjhb+f6S=2DTSo\2.i3\Cil[?!1ea&58l;G>F)b
%qUik<ScIAtGruS@)fhR_-^@jkampUcCf->>Q9[mhf]I@>S94F[MSO"P7T[jsl_^O9L*U`CCE#L:B,Wb:"7WF$mI423f,;[CK?b;?
%!SHqp[8!-^2p>P>*lTg@4X+aEnE#k03ML(u9S2UVoi(t6iCPFE/BY+kl9HBZU8jK[V1^qL(+Utq`j,aX!tY3)mK1X<em<'FAC@K;
%5`l2V0NAQ6e,[j0*[N:q*M4\r-,d'@amjr93I&ioKqK4&C%LiYLbYe11<R+J^f^\g%>lFcfYDq1beTG"ls=ku8F&[5`CNhpZ;"gH
%#StNofn?)pQjD>mZ3XNf-7Pfgg[*mq7%G/]9pSbg$Ql[1;8Cfo/M+n.FN7.NSP8'q)^&*nBQnus"m+Cl<\lmQ9B>TLm8fJ,U+(V)
%oL]NC(s:nUh!4(_&*^\KY6WkMB@&4j`flsP'03f\g\Dp8@@elPdc1&E;N]uR-$Vk$C$NA"T/B4e.Xao'4*jlGVl4dU&7iM=mK4XR
%%%kX>6&dp3"gtmoDt#WXO:L0.=]Z/D0&UMsEP[Nlc^I@>&Eni^`H"r%(b0.)#1_VXg8OOc'OulYL%JGB>;,9@M:^sGD@iC@]ErY1
%Z(*E?2-+9"&SNbHG'j%>1rGSF%)m4bK2hT_Q=WCA4;7T&JY9/Vd9hoEZ@honXQmb0U9,pdD%14=igYnUMTnmBX<UeLOPJQng6`CZ
%&31NR*d1:&$T&;i6q!CLE'>E]SBDo[,]aV_0I$cadL]LN7Zj,]gWhN]13mI=@BV*Em<FG>+<_2L--](2^:R\VL1\^XcT3aR,-'MY
%XcTY4ek_M]GF/Q:F6A+f,QJReNi]R#YS[?iW[!g`(-jNd@$47AlUa!/[<22bYVaJ;%J,/C\?N;<!J5$`:;%b79-1oU#mm7Sc#S8d
%/9IA]L2M[u"@a6Q*2&?!r514oJ,o\['R^c3`g#!!&id$DVTLY?ZktJp;[h9c$u$\Bj>hj]C.;YnIn2X+g^Y`ao;mBER$o#hN+Te3
%M.B-tX,7i#\k`(>(1]4oKA7WD[7hN+Y7./Xjls,U))#'i?4DL?+]2FWhjn#!UU_+-]UG)sR&ptc;4cJ,(jkTQYX^fWITO31jpe7N
%.aA5C5t2m)+:\i$FkBYIY>Nu'f`Imm0?9?.atQ>AjoEE.%E\4+#JjON!65@[bqPpe>!FfWRF2(+1\NmI6XC3="P]VpcL_/[<*c?0
%W%F6%Rsb-BA?COAWjo<bO)0!OZj(q9&M(')LFbS$N'jFI;DJNI[SB/h4U\E_!WSpG^`HZ]@nbSLJZE&/IH4"2G%H,h(5AJgDb8Hd
%V6H,_.hC>]#*f4fK8]eN^+lR77p[=`D\WA<:9hC_6Q/!YQ2q/ZP>2<#DSBd*5A,B39#n$CLGi+2#&*3sUHmUunUY`5>%5b./ZnFW
%c.!TM>'"chfL!8tYkGtV`hbrAW<mK(XO#_IEMsc2`%?@X],5SSlH43m*O?J[d[E%UYaAr-+UHBB#WV1thi9.2J9q8L;lVk_WUcnI
%'.J]ro1OMAOnC&/PCfE`FcE@4R"YhI@-j,;CFCmc2Q:HqYUETW]!9WXFTSB:!$lnl4>\E.=S4_b?_P)_9IlWd<4`Ri$AaJ4,IK(/
%[*"_#`DaQ`aNM]R0[s[Z(5lL.X%f/1,T'7E+IYVX$5$eS4L7N)1X$Xi>!VgOgD_#u"=I*31iT'dUE0ZK&$8qg^b$_:Mhql&4!;k6
%3&+T_paWXCh;0,<1F]8m>>=sEA7PHe3:Le>HimjCaF_@RJ.asEP!bIkp`Q5ZBaHUO7OhDP`L4_ne%2$.[t;SNJe`PX5RLAQD9Rc_
%3NR>.f^e--#@Jj/D,#=KoL2tZqiG3.8M^ERb\neL1.YH<$p.@.M/>bbs$R7h7K>BkG/pKmn?fHCI+B's+FrNNX)Ed'-ZdVHd&$sB
%5XjJjOo@BqUdsT#8u+VC8/C=o!F))JeSl-f-$U'5/ZsW*.[8u/S"S&F!";MY%:EW#g&_D\W#SA*WJ(odc7r:T32b2<?8ftX5T20o
%bY1p-P=E%gH_OLA:^@.GN<)*VR1(&]=ek>@X9W^o;fQY`;S3e$!bhtQ2/!"Cr(3cib/>9?MZtPKe_%`8!\bDNVN7'Q8Tj^?5h<gu
%oZPaMn1^FVlmXOA%:S'IZON80r,b^`74T)&4HFp?qBnN7"9<O\)Mp)(=s^UE-;>/+#bmb:$KtVr\1<!YcB^MFPDX&U$-bqsq/$_@
%&3Y[40iNgWP9E:)5B@5EK<u_*69)YpABG]D&K<Q`A'P9/.:gY]o>n(F,$`\kC<qRl.%HMH,6:IT"2pX"[ih!pLLaLB/)LVUDgM-<
%eF2$8c@[jG$$@M`.5KQYQk#$DLk2jV:nimA-Y)J@\MPMK3?YE>.(\#'l!ARa@R*?k<W<,E>H_S,7?c<PW:V\'\-U+o/YZ.=Km51n
%pr%8?+BQ5uVQ!'nX@a(03f>Ch@#cQg3hY38dG_#qD+&Du3k%XS"<qK2"rNa=#`CiDB`cXk:[^\-$%Y'\YW`B@GVAoq&RdfWN4_r\
%bM(hi1mEq!%9f,/TS6R$/h!3B\kfj[_!O6m3[4]Ucr<:>M[9GiA=1Y&GDMC2m?nn4aU-<\Sd'(TQm[oW!*5g>Sb7ZnV\%sNU<a)U
%b7I<8>pJkMRQ2"i*kL8]Em$c2`UFqfG]V69=dG#pD*6`?o]*bM:@Nl]PTHB3"..9hVM5V)#AVf+#d+A]R^BjW9<!l:l>h_5fT\rq
%-4N7ma=NsF.hUE!7r@YuGLS#m>W'e8]EWBMZ,K8!k/O5MMK\@]%(7;&fj80hViO'@LW\Wk&A^(p\:O6$h\a@i&.X5t!&:2JIj8X$
%%d]l#S63;FKC,M]BP'4ul6Y_##iogE9PsLMp'HPI6[+Y*dTFt=9\Lo+Q43O49eddT4>JZ3,d\2?U/FcE#g=N[,-qBV&"X`]0+JDe
%;J1]7[Uq?X&UK"<5M4&LGu=H1,0:S`!%6#!l1mgMS:sEmO3r<T;,5OWk9B@el-AWC3?WQTTh2(7?*[oq4-NZ>a*QJ,1u@B8;RQ/U
%8S1!15_p=\0[GsreVjgqjt&!jB0*.Um!<UTi3]MuU&:!d7ZP2Ke*b$_Bs+5!W^1SS,jJl>?)sFD;Lh9rN:*Qfb,,TQ=#7Mpp4X3F
%JT\Co"aVM[A5Vf-71_![;:\$`$t39L^Pdq\AXWl,2j,`[po_iPoO&QPVT_\Al$:5B8e>R#nUl,8<JRB=iP7'"hBhGiNDn;aZEbH8
%@;(@=SqT>K2(Qq9J?e*9M(sg3%@<D*`tW*&N,a4n%u<NZ$Xgc4LQ=.k^p7<)9945TN]G].jT-^c+JJ.\9%j9f/:*r(<6)l[k!G*&
%Y03&R7W94(6P2iQTr"Jd."fYKElUSj'3YJ86RLm!WhkMX?ACtf=+LlP!5NA],6`Bim(s$pB;pNGHsjY;8^07F+=JRl(;lW8<_.91
%S<,Kk3[AlRRSO(j%BNKk0&u?A5RY"kl3ho'iE<Na5J2cg'%T%K;34Zi_"nAXPUST&.0BfUTNFM)8Jm3u:-<,c!^/jXpHuG1,O;oG
%m<S8cha)`,E.l.QClrOC0,-cS;Z'#&0!O\6RMef>BdU)gHu.LZ!,j,J'#Z7[D6OOR!J!#5XN\RRA<IAH/B9QrB\ElX#J/+G8Qh5\
%J0l=m0"Bmdm,m86U9@V'2^hsnR_ob[K4^,i,f%e?2.B(p/e/Ns>@(m?'Q$GT$YF,m5U[K*AA2I.88-P!^_[%CTU"brJ/1`M/$VHF
%qGo$&kVoA&;:;-->EH7H+AOMg99:>p/3ZcH"<2q/i]94UZ-(:$SL?K\T",#\J>)\k#jb,,,fXQ1YDQ(C5gbU4"i-/7X;ocp'UpJL
%Ho,#Od%*)HLGh;+(#Za"EX-Eo(a5K"3]0c'`ShrS(]G1t"T%=!?gJZ9jLiKi:YSo:!<k;AKP(9-M6"e!"In)]^]phbqNN>%4s#UF
%*;/!KUmT#L$D8:5Z$!c!";8$cb7e,2fajb:-c=>t#>uSTT5:?YfEI-j`M%pJ&iJtTBSNG;WtQbbLBk'V;k'/B[)a(,VT=!-Nc\a'
%3$'>tBFmU)]sL>4LuXr+#FLZZ@t*pWdBem=Bgt47U`0nDb>DHa?671*;^?^ARMiCr8F^?RPqCEZd6ctuFGiT15;k&'(#I.g^`eBg
%Og9h3*[mQd%)ie.cBG8J]JQrJ-/b>=$o:OjO?=Jp/DXOA83,f%k[u(VRRr8ORMHWA32H_`b)%Hdau32;Ljg>m*)[&1!?k,hJJ\Zn
%"tA@^FC48$G:SI8i]uWtmuKu[C(?]%r)J)uV#q:An1jF3[.-,m1p'U5'dZ/"@Cg=teoShbM,+liTcG+_K//L_L!ULm5Gi';#H'aG
%,Fup2!_/G@g>t%J\=Xr.dm@PS65C[mJZ\Ia0ie=3ZHQk,'",MI*[(I?oh+%L'[^1->N+ph$p-JkHjZ"/X!r[/!mK=:mGL57eOnO2
%$tdqiE!"Lc7YW1=>paF(2uTf[@fTLS(U>(l!8/dEbnO+[]macN2_`b`YR(@lKF/"qOkeO*^c/hC&-_Gd'/4K:6VNrM*tBlu7<&G9
%lQurq;GocZbhHe@EC5VB!T/Q="#S:3RSUgXTs#A*-OIauogOK5B*&gR)BW>?%,;nVYTh0h!6UE\81e!Ti$RBh@6C76.L,&!14_$7
%`c===6?IgnZA^X`^'_S0gh`d;$.QE#cGUPW5]:>$,Yc<iR06^cp;j+LC+"R1.mZoL5hYoQo=dJ,!7Wt^=0bAGNpiBFJI08$Z:>c^
%^]6q!.%*:=*B9q-HlbLCH+gR-0@48R=l?.)K%NJd"Ue2lgQAL&/]@^oQiROjFd@%65QStX@4UOY=sVQ.CR55mC<IOF8>@-C&A+(;
%@C#EXUi[?7hi%_.@3+Jqq[$JDTJ\EZBdr?i:R*#*WE0CnJQru1#e0eIl^8SR,W*D&7d^GbB3FR=&B:u(e>1S%SYdH<Rm:u%!6A$[
%$V4scVlW-S,T*@baaG8t/H!la8&`-]6.&ACnNVTr=OsVhqO`JllnB2P^)+_T'F]d[)P8n^*/>];all"J>nMF\.gn*q[$3hZ2+jj]
%Ft/<F0jR]@MkJ$]5q=fW2^*bL^lSf-4(0(lQl*Uibf%[_RaP^0'Hjt>iu'->RS+-)jS\_Y+8Z+,KIUO^,p9Z(N_(u$OmGL-aG?,i
%p6&94)toSV4(8^C#Cp7E$[oB)-N_S(=Wu'a^rX<ZX/I$P6N^C$B>5btDtino#PE)iSXs2Z*gMd8-,_jkqE]h@*8Udu64k!PH&GR5
%B&S>8M@$pD(``VKP2CX$C1dO;E]9M"6L#@8-AEMW-rN,hG/-_gq8_#9P\O@2Js_1'\J6CK[q"'BjD7e2LYX,?+m^$o_2QkY.2`q.
%%nLX5o:9>^0dqU_#VTcJaeZY0W[BN-%FX^mIO+:e<CP%(@cS+P$DHaD([d"@<9T$EEP4-K#"4&5(*U(8$FGW'2u'DdpSts`ZA;V7
%*gB-a5R`N]=]7fK?9#>N2JE[+N'eBr:D-*lKIhUd\ZR0f#tLqP?OiK.QCR&hHsP;tj("4M)3r=\dGgD#<(<Ft^Z;$;$7'A$O_e\b
%'*\Rt"5s<VU1i'*18YZtS2*SEZYC)O*^OO;ZXo+E`fs^WK+R,PLEq.BP3=>N^5j%Mm)Z"O(#fmWC(EYQR=K0IMcGp8Wfj)fPk[.9
%8Wk1Drh;l*;:]&'7\b[FPd]h0kbTCQc(`9HnlLpPiqH1oIq?u(fpm^)N7BYKePqd+$;sk.7b!B<+"\/3BZ-giLIhFUQ2Td\=1.g<
%[PcVBi3[%*bXu_IeR9qC5dZD"f@c099R&O^9+B>e82qOm<A$%0mNn*""Lj"GSVO%HM(6%%Ka1TprfIL+Jr26Onsh&K]VeG4(OAES
%W(m?X1r6+]'<'1p%#N`.VW[&%q$5%i_#oBOU,0YWVApIJ9e/^[gFQ<A/PD3$>ueu]/S$(MnZSj`=-bZuRHb4;OlDMRbEeo+pPZhB
%$*@B3**;RUa+RF0jH?@..lil[5+(=2E$LH8^`*`R9He,Y[3\ld^)uW^aY1Y+2XVtje^f8-&&Vp+Knf\&G=^6$6l'o0B8$kK3qA+(
%O_kP(OS1I<"hF,\7cD/UP`PQkjFL6t4nCU?aQU8Pd43[t<O"F"`?Y&dXGF'=N$.W>\`A;QO^-Y8AeQbtr!+]>rXSMpV9VdI`Mg&C
%R`iQt+oDGp@^>L21E557mUaOU+_5<^IYf$[i0_B!CpcS;QQek"(][:n!sp0;^_7*%Uh%6I,fYK0S&qHtC]b-WPNsHRMR4oaC>qPk
%6.65ipB=r.-([Or3=>F'BuMYID?QAi!^`&4r!(jNi5$Ep]`ah(6KtffkOTRacR!!Pl<;gAfF9DGD(&@D+aOW-&>=/@W[j$q,*[iT
%F*Za*5r3T[q4YnQ(PP@UBNYN_>9JB>g9.6t7E2a&KL29X(n=@NKr">r+,W1i;=lJU@2PJn#R2H&5SJg.=3/jA7n',f:8OM_YUcH5
%[1"1#/rbLeI^MrERrp&4\!nJ;O9#UH6/b\q0R\$_3DDPN!9]IZ!dZFRHGE0]M63,MR6GF\a)Jt[_2:f"(aHGue=2F+I3h?6(hDpL
%`^AW\m6TjHV;_]lfH`T\R3%5oO94$N'Z2YIoZBQQ,V&*q]HJF:_SBb6<(s`Z4,+@$E&s+l"&BBRi^%42=J(ZsB_ct?$lSX#=n$9*
%FUs.c($$MEc_bTo:2/hl15;lHCs$@R<VkKq($Z0!];M,r&q2YM(iVN$$ltfM(pI,+NYW)L=CGF#f)t@F;1!>[!A>]K0YpV&@q5\f
%U2u25fUgS_IelUMH4V)HYdW<%3)Q!9HHUg=mhLK\5q`[NkVahL'<D71?]q/Rd"l^k>4*$6fs*5%"u!?AZ?ef[6=qY,`UPg9>9\WT
%/Z%pk7Z/`6fd1D@06J0Z7)sam59pgp1Q8h-/TQ&+?')&b%LZ)MYQ9$d3*0UK"mhi*$r4SRY9%dtUp,s-)d[e>b&/oU,#Y"7dZk[;
%V#cD-H4BpOCUHXFjSu!Cd14m.<_,rQXp$nQTF2WN91s?EqIY<qefj-F\?m4.)q3*.s$8Hd8_F;5$O^2F$i"-8RA8EU=Wd+e.`"2<
%ls\7g?IE*@5phf#g_5ZdGt9WoDq*0-YRsfc`<g3L-tsF]4Rt`uM%P:L0]hh&,NgNbj$=2,0k6jm!mC)62T1bu'S:XD^g]idK<l%6
%/[d+&P'[lDMXEYW@qOcS9u<):"K,\f5"1>De*eM->*3i6[_Q]rL*7M)5n0h!@9V3M<_3fEV.uc'7D,)%,n(HTIORn5#5S6TEVMno
%^=)sGEX7K.ZKGrm;#4n1#TU/i1noNZTTGmZU2(A'eWIM.h*edY)7jJrihYb^LiTsmBJu'H%Fp;hCrC!15J(MLZ\>ue87Usb2Jb9r
%1e8QF,Ui%HnAKXTECPk?=M1kN23r\EI#.9IQ#A2[9J2>G%R"EuB$mRu1OdF0B#PQ01eLYE+2tYp30UeUJG\i'#M8(r$-\GQrtssD
%0AA=L@3D<_>Ub1/A8_K-M'qW?+G!];c+-V+BNPM1)5IM3I34)ha\7&3_B'[qXhiIZPoL^D_VCGZG9ARA"#ALeKou\[HaY*EQB5-J
%T)o>dkSF[Y=N<tshX9UfO6PU;k2@O1"Nfn+_:?&3a$90k&/IcV"$Kt`K9d*h\mA30-WqG_rm3k=S/=-gC2NaCd/kQ/W9l!*/#:DV
%EY_3?,GR-5hH[`+0G./(X5)PcUn!Sjfj5Y-8Amn6E`c.;UBm"hhHRR5X>SJ!)2XR;<CGCU(+p+l]S.:O_Qh6B$cF0Dr$.t>_T,'8
%Qei?&3R,uWKMmpMZ>qaGFblMHQ!=Y_cYKG1?iBZ'(M[dNJ<M6/j',#`BFPX$Se\3P/8WKrT9rV"6FK;(d<G.h.TIU*(od1Q-CG*q
%9d+8h%'H04N_N'cC60&q]**R+c;LG,b`C!W@H*eShG%)T,q5T+$!knEdun,T6j@e=@]GPeL#Ge^M=Q;#9D5Z7V$>+T&Ou$9MahkH
%<eM4pi)?l82%^-MOl]05KY'8N.S4_KGo)g#h:jr$dXu1,FTfW@7Q2AmOb@@`;Jd*dj[%A3;QE\<a^m5r8Of3[@6>/G(JW*u@jXd_
%8ru@I[@1JS,3&lcKocS_ffatRUmD"bSN2l/P,s`mnn5=NOt'XeiuFM/_L'eoK7_PRJ#%W,=<SDJOeNIXJ1Zt4"tBE8KZ6.D;'(Qp
%B(s81A49&[60;0J)"?ZV;I2h&Mrbt`@VGMO",2O6@^]O-g^4H?=8df47j)^E$VB;79Q(sC-jPKc3K+7]A'FL"_YGMt">UfJ/$i.S
%Vt&omLnf3RV&"4M(98]qXN"^83W80H`D&2*Uq'%p!AiX.E\.0IRVg!MFRT.[,*r@ZF2:V#8.d,k=5FA*m+C;E4N2,KNY>b1T,KZ3
%8rFs<<,*;2;96P[Wu=(Zck5q@WYJGnd/kkbq=]O!LgiHY'M`6?#/R6ZYX2#P\p>VL1NFs&\fgck5q6u$rh;j(A:YU,XSqVi)5Dm*
%[&7qYCcMJj8-Xcb:aZFK2ahniONE@:A)0f[Ff^6SP#]hu>niF\)3,X<]bA-J=SBj=AROUs'R"D/8Q+8J^u0q_am"hSV5fkk?:@H+
%BA?3Z3!W%FA;u.69s!j"J+&&rN)LA!RUoWq3-q=S":Wk'A"+rP8QbAIY9N'38la*0@]<>Kb%C"0qrt&amU[mpb;l!-/A*HKR[E;B
%b+;$FPai<cMkou43<Ar$Ul^>ih^E5H1'0bt&+&R\LII-C:9&c=$D*Z&;XZDVXg<&DaN7nbPX=pO/23;6+PtD^)b3(HA4Ugb#0qKE
%ACdT=,i,i<*6$kPOq%c[dYC;`ZhU4h\Eh8Qm$uG.OYqZbadn&&=_4<H!R@.$V7M6Kghc6&.hl'BSj[?`Sf)VEH(Mnk?s8p@#IU,n
%hr2H\UV;l%0/>GK-5RUWY^a*c:'S8qhY6";-^e\U92$SQi6B($$;)=&'p(eGN&eG10*frC9+u<@Yldk2(Smsf/S`IC*tkY.C%al6
%-h5%f"QIm=G6#)Ej\hBdP0XA$rhKOh/8gX"F-OV\qM`QT/+XMG:=LEHaPrL\)PmIH'p;<aZQ^@kH;Qd=Q87I@US1"71E>?J9gM[K
%AVke=@-![n!')atU^.?\(VuOg('f"F.dOrJ.'_;R,2&iR:ZeKYUbH:&m6I2+Of?["Wj-#]L:Y?;=,.PjNEHmKdDF%;qMrKG^`Hkh
%?pqgqj\fcE'bLnM;BDf1!*_-."fP$p[F%5nHrcEnYm!AQ^.$bCG,\JY6Ko=X27s4RObO$o<1mAQ#c4@B8Q*ZV@HYBmQnh3oR0U'0
%2PDV0!!i;!SR2Pa'MsF(R^AlD,6jh](!]<"R+d54c=f'\UNsp^_=#+p*!%56Hfumm,\%3*-rFnJ=sB`ZX97S`_(nVtWHT41S9)'K
%5nQ-paXnkf'B3S+k&9iC:t=.")[(%Eb`A`mr-k"a\<@1Y+`@u4't)IZE"\,(R,&0^Q6\=/3mER6SZ`t&_HJ8.#t`7.jp@fZ0VUic
%9IDN+mbC*e1a(o32#:**BA4OaD'\[R]/$@[*8k&NX"iUblk6Z:Ybc"U7CBB4ob:SE%T7onr*ko(!?bioT^$odn=QXfJf18h_4q3u
%W2Ej1ZQ_ZP$6-VteT!=%7?eBHDl*\-WBMV#R::Y,$=GoL]-TuL_'^$fb]NE]Lmp3k1T9:gJ/4i\"XFje-9c_MOi^Do9W3P?U-8iC
%2^;DJ$?-?WYti'/4.`$F$rSBFb'o2%"L[#o@q:QK7IaOX$l".:k*!6Oi9h&;'d38V%3.jNr1lFU99S$6r#EW4,W6l>=s4[^@-SLO
%E$,)Li6j_r5u-F9@gBM[-FYH/=im215Qe''HOHiafT7Hl@OW4+i`T^nRMA4%TlUQhQM+HPIF&W.p]ML1:85>j(+rBdppNA'?Aae3
%WIk*XZoG';[.i5>ki33<TbccN#&k+V6e3Z)[EE1@3,IPE<a`lRdbMs&_?:lfA>]+a)6+31G?5WT&4?T.JW`TN^UOt+'b_Kflq4Bk
%7r,5p]a.P]!DjfFD0Su>)UX\j;CikX>QucJHK7\/aT?PAOb(@ra"XNY&/FjjIV_6EndK\0U#nah(!)(W2GMY[Npr]E+[,LSp%AJ?
%7?oh=P=#ot,/[jiod)EZIZ^ojk(#FWiY^(QXgX_[if^O<Gp^XjiD/EMFtuA$_DCAj-m(AR?X[b\_j)>M17g(Ij5jOr9BfrBBVk27
%PCsH)1gPa4J-RN&@B<DD&!b77$8]c-;q23]OH_*/V\qrgKjlZjM$ujoHcWimlXJ4?p)fc^8'd7-a<WeMe=3GLX-.4nq]2bKSr?f+
%Y14+\M3h2enF`bQbQqDb,%K#=70;!6`Cpn`"O0=kR/`Z1WT34#-5!V]ajt2G,qCs_Z\YQJQg+^n,AD"Y?3pha9J;kGjZ.li<(&B1
%Q:C+%KF1Dr<$8_ZjA$b\3t.:$%/,9k%94lga:6Xo9u80U=9.VI"p*;skKZ$s6[_EA`5NueN=@[?OM/l612NIOH",'a.%FjGI"Q*6
%-a^?V2+$ci_I_7S@epUq+P,O-dNtl"1MKpXl\IQXp9L]n%<Af'o)3%@L-lNS_paHV`L>4E)+YT51p!dF]GL4U;,Id%cCH;A/fH]a
%@DT5r74<1FR;l1QAqmmZHlGO=*LT9r-;PQ%@HX3fGCpKLSa=GO(;WJ"%;S\<aA<3\ka5W>L#H1\4cgrpq>:Yu,Ap/G%=VqMmPJcM
%<#lpVK''Z1"iBmUEf;TlB9?\7/g$*Iad5:n=80,m11d\acq$\;mpFC1M4B*N!W=iUoVIt&q,nXYfp`RqK3ARc6tI^&J&i42?jieD
%Sa@J@8AsG<eg!0:M\q9f2+]]lMDA4L-,C-)ja%>*%3/h?2j#uoMRi=I1C_\CiY9[n_+>M$KfmI993J`sn7Lid7MIp]ePHuV8cI$1
%Dfj.98(i#eh^l>)r[Dou#)UH"`=3[n'KcQP)QXtECLIU[d8+F;i:##PND>/nYa@f;gDW*FqED]9"l6)010P;8M1N[+:ma"05pO@H
%btTIO+.>bL`,\Rg^-Qm==fofE%8sf)P=9"6K2Luf,T]o*F&!DGLZ7$sb*m/NdYInT$an"0"k:PU@Kr-L`sM,NM=,eS8A"/P-)hKM
%01?"rg9FLiTZ7%`"<J7kA""m@7)gF5WsCXX:'E.n(VVE`3+g"+2?ca>KZ9X`=\6mV*V?:8,]NM"cO2-Q[7FCsk#+JYi1\,-V*Ml8
%G^4(&e=pNIq@;Ub\ugOhW'\HcXW\GEpEI+KB'fdp^Bc,]9>'fCOefk@Xs8bCP"d=hHPFDn?9smbid-"nhH=MM=bWB"dT\,I#;>Ze
%Q:<Q&"#3S[4j)Faq?Abkfkb3_UjAb5n0Hu<;10%i1oQim1aC*tO+hAN]"tN4MR]<\Bd)np_N<#"NA7kJ+$,3Uo#Lf",*e[&1.>1A
%.Y7[j$.'9<a?5lm<;ENLVB.a:"emaPVc"pH%`Ag9'tG5&)tU=*jrk%;5r`Gs_$NO=QD>0dB9o]cX;)?`l(qN+m")_-;NU%?r5DRC
%fGXHq%UuQ!<cCkAB]76sK1oXWVTE&F#qKTNH4[ki#"cAg_*ElRDUNflLt@]i:F1@eb[EVhp`OE3n-qc=ngh!]&-D7AN^+ST&+U1N
%GC^MQh4Za)dIQ*=8bci2cmtZeSrjpBMU2NL,FDT_CRbCK8If`:#sJh<h\S%bO[/uoKlDC7-(ot3!-(mN\"&p0.lLt]%+CqimcYA8
%1.!ia@\P![UIm?M2FU@S@-c/h#fpdL5oW:l6-'>cMTF#2Ui`6e8)i>:WHFcT&T55*Oolt/X<`s.$+59j!n-!Ec-C>m;2i0f,`i;#
%0ntP1HsW$`Fl!-kTCD/sE.Q,SCnV-A'@f$J.4n"'iH=LG0UX].!juep1IZ`sPX1%DkYUeP,]R%U!jFsnjqa0:fs*tH1bar-Mc9D$
%H_^fU3f$1ZUmr@IB[3>MJCOiS1%smMfE.0aUpBLc8GQD!GmYGJ\K\8&]6l4+j([s!jgo#k1GO/S$rBFoTc8F`'.4)u/4E#:'e+g#
%I1j?*Ltm<`S\CYo>70;G-5.@mD#.i(LScFK<dbN6bgY^23_:hGQS%#g18<5mZq9mG4@AF6YqTHf+img%&Y\68pW`>4@BhjBVC#4V
%*641&"9#'\1*'5rOGT2<]iq4//+rQT'"AG^H#RI=[78+-<1:5<2QG2DW0.\6n3m+QJ>![9A_`<P+P=ds,9pG;p5G!$Jk0YFj6.+#
%#mN0p:a>WLVp,X6iV*`i)J+_c8Yt7bEY3DaOPItTn^*QN18h[VE;10Xd*1G8Y!2i`5&P5oB&:r9=9['7"]*nR(D"P);(&T@J/;08
%ip)PTR7+&VX=hJ\ODo&=31E<Iij.7)P!Y$;14m2=p4WMORK68\%MC1_`>Eq%#\h@b3`ZR5,[J26F+4SG%U#&FGl!='NL4P0AjOE;
%]0qMl=KN^eaI((I&'alq^QdhQ/Aj?F4iTN06sC(9i?.qQ8>c[iQX2Z4eJL$KapfOD]LKan,BGe,7-97,3+;dg!oU0+D/.^6Zl"H`
%C#iWu75#!e6$T40)N`ijJcT=?7:hY!clHdI$$@MJCfqT(X!j,Ijfo6V4;JR!nWAtRar#6i'$MY&_L]miHl9,"MjgFfB47^D>)2Nt
%8rYp6)htV=b94^e>#,L!8>h?3K\E``]%L,^73nJ4ZX.#YJFusMN!+CG5)qF+Uj&9\b\U]!MQrS21fJ,Q-$r4TYiOQ7L-q?LaB9;@
%'Tq3\q)2Gbo<JOb"n5!8TF#VPckMq:S/X;Pa1qst!Cg`7IN^IsS)pAj'f_ZZ;lNLp-\HRcWR+&5"3F'A"mf&5ad@EG;MiVB\U5FI
%:5,dKDpbV'82&H/XiY_OQ+)]p9MM,#UA@bWh-ma(@@NDW*CMl(O@pTB;Rp:h5+UV@0+LC5/NGtUV&6U*:Xm.p\)^F.9D7S1FYsZ#
%YEWT*/_u`1D;0AZ>+A_pFFZ-hrMcbFp;DN]got9S97isPS1b-V-Sa&%jL8irClk'Bk01&3b*je%2'l,?4UYJQ,BL6W0p>Ml$($g`
%O=COa=g9F190Ee'+H;]F_5eOI'TlofYjP?c"YJaQ`c/92,S!0(7Usfn$rL^X9BS&;#K8C]=eJ6l(l^L@OjcsKVH=P:)&bSR)22/=
%b"@0EjqNr$f()&!]s(ZV%%!CK_RUh)Co/=8'd/[6I9D7@;UC((=tHgrgZo[cir"mIR(;Z:IDCkn(`sBr[6Pm.dPdOS&@AU^p]U.u
%m)i"V`t0OY$!6'k%pfCq35TdIpplP#5/AFeQC;_G7=4/-cm[@B$b7Lf"@mLr"P7,92>O/^fFI3hK_N#JOIE5?,T:?Y]u<VBR:H<;
%*p!G_RcOR]P7@pp`$Fi9m_ONdbqP?=$PPNO,&0u^=;DJiQ0t*jnUe!*1S7[r<\u1l1<KS-co77;&5slJ9BdN+GsOp`Qj0Q`HU0C&
%nA@j[h7]r?7gKik@V=3Y+c-a;5+*i-H^-p'j0=ABMqT%NrIu5nGl+R'?f4S=P[S-\A^6&tcC3c\6+@I_85+C<%qT/*#f_N%MU^jT
%<]LO\X+)MOU+*)[f'@9qcs@hiND5+^2d'LNPsSdAh@E&<6Aa39Un>WCe4=(Y2cNe&<7.!bD%B)l\)pRF8X0J"UdI'bm6Dnj8S`IB
%EFR7c3a,SM=V0L(,'BFB?47WH)_q5&JnpQX&Zr.d@Or;803TX+UM0@^+3[-G5VVM/PWt$;j.Mfq'NrR^"@Y*d!+H2Cd%&4gNMK(I
%-(%MkMJYg2V)2,)[E#Qp,\iT;DM+a[8mr2<2kh)__I+YgXC:99TL[6-!mOcOXZ_Tl#&,6A$2r?",CT3GNJN3`OdtVn-8k_r/4>:s
%I*MX078*rc0D;J.N?_/V38#"p*5iB+!8ChYM.R8I97GJdilWHG&[39:i?U!$Q!>MC78$cqi`_F[:8+HTZE2D,poFK#HC6<;D.QHr
%^;XF(:![An;/me-1sm!Y,cFH=!\^*PMCc1'-um=c5.h#6O('1BPuStm74])q.dR4ii<X*6X3lp&1eqO-&<@qZqZF>Q3mEmV191'W
%HYVMZ%u\;a!shh'?_`2UBG'W.*12.g,%ZYQ18-XUC,!_LLOhpPDu+7n34CSUP*ShZSgF[)QtU,dZ%r-V3,SSlKo,j]8Y2,G`!qiJ
%-RlEs&'N2C6"W"1&\Sf5>/+8@iBW90Uh0-jJ1lXl5VZ"b/*;[DT+cb?OCSK7d^32ARZ9]fU8(/pUo)R85/^eRPq#?[QRKpt%GJf<
%8,=g2Km1hL898[:E.Iae)$%jC;I-^[:a5PmN+g&Uq\JS(ma"7+JoqLYbAm[Q"p/#IjW.jXLf5VIpmOS^#(tUN8=UL1:LOr)0U>;Z
%#XD<)f-s9ZO8Om(Y63s]QOn/2^4B37Fo]XIs%QXhBt,$p8U)Ws0=`11DAe\[.$FA*m=$8ZLs0,!gSAoqQKp4qndRMa@NhQo9/E]\
%W$^W!D"9\1R#Aah+=*j(V9.c`l:N-D*=W)u(d7@c`auf9*7;QX!JghIa]g;tPhTYD7=5gVjqNWk&E[#I4TblU_aWMY%=&e6cY"_.
%.jKS@j$R.]h7c6KOgVD-J+I-')Tbs!b2=1<r9:SZ0qr@j$OCo-?!j`K,eu0V2FA3(LgeQqn['0CA8%iGbOW:#<!@!s>=htlT8XRu
%R(p9.P0VCHSn;5b4spG^?9"tJI=;$%I2C\GqqW<W$>M$-dn[;qL_"P'QtbV9QECkT,&7F.0:5T\O5u-UDCFQh]J4LbZ@;JB@U37]
%cQIjp,'Qt24J^2`3k!/j+e^781ofTP7^]8%15b,Nd*4op2=E:\9\b@\?6gA(a&W<lODi[7nLW?qlqA7WFeMe%Cr1G7W/*BK8Dsl>
%kXHj\>TG%010)2t[+rl[&70jOVLuq<8P>Gl$@t`(`MmH)Gj)^Q!iQGIU9mIfT8VXTS5*YF^k3*XM]F,5pdGOd/>j,*n@]g+=dfCu
%F^k^:bQ[L1<YooW40ne$6YZ+8F:,k]4]B,5Y!e&CM;L`KjMk'o%Q3Vf:7Fl58L\oJb'2@pL8\8h^*Dduc%b^.nM1i,@R,uZ+g<Pf
%llDK-rJ'NA*D+7S]'Pu==\R%e-@9A:#,9OXPJ&cVL(,_aOhEQL*qm<aaPLJUgqR.f%\"^)Y%OJQfh1s1f=]:-ar.hP*QgOD4Z!nd
%bEtq5-W[oBE\kPB;7SbJ8LTppX51Ue5_W\a]7U?Q+NW-@m\hY52]`:E=MtCKX%D,571h4m=1Z;TVV9s%kcUS=&5gHEF(\1u2kTBj
%)+5X!]JlBCK)i@)';<&'O"4/L9]usFN2V\K6?i>Ia;3u+GE\>ld%*#J1^`(/jf$V`"RM)hP0lEo\hi:>KG)5u6V8G.FuH>3Z"9eT
%-dC_&(U6'Y$^G"'m*:,.R'-*]ljg-A5hslW$k,^?rMXmp(.j%DWSQ+R68D!Ag79D-I<$9AGA%bGTr*!G5^D9s*9HSsQ0tV62jM!2
%J3OXZmrEX1=CN^LQb*?D'!d)NC3Q=tnl0XFC3LeW&oGi>G@r>!72`h=g`8q_7#Ojkmb#;cW+'t\OI=aBYrg;gOZ0\Kh&0$V1&O%1
%]/-PXV/*2JGD;Oi^hB4kSUj:`r6Mq-SY80A$)?4FB`oD]m1(^NjmP[D4&fXP7_X`8Ojf6JKN#-;6fC=I0hq"pghtWGCLVK=&V8HO
%>jMqt<[=D_XZJn0@7kF;g)VB?A@J21h1>)j5(orlOao'<33(es3"G&YF1"(sfm0ep2mka-aL#S<eF!ao9:ZsNmYoU5QEGCd(,+me
%<:.t/""K('m>`?&lSlcM:gE(/NajkSqFnNi@Ws(aUl<o!m#HH-<16Xg4#/<A<mnqSUrAc3[6&(LSuugPj1Uo8SNJa;CnY1A@N/Hs
%;nEuqd'W29ViukaEC>+/81'nuK$VF(36(/n(V;J^F\p+M`U<5,&ngi1ljdf)B['QD%co?A*j/srQL%^-Kk=e<8445(]8>?pM*p8o
%:$g.<Ko1=3FpCnn;mIF_m_Hc^m,fX<-WH7?;s]NDOs6Kqj]s!J'7dBFh&.!pKXd_!B:MmKYGp?O`K['TC3PDt0XQ&%C3SUq&q,D0
%G"2lq;J48(m_Hmd1uD$p:0R/)VKOn)3`EWm%tr"=2RPVc[7NWbWSM!d'sc\ag)W(`&_^o5GM)Yg,VrN6_s'V+\ZU*ga<6qoW-2fE
%$l\\kg79D@Ti=MBJ\t'r\u_=R*Ejc:Wla)eGDlY^\N?<[jJJHjh;Ok;Ra<C*B=r)SX3069Y>TLa>p2QuVAMe54+9cPGr<,o6U'hP
%CrkF@qks'jQb1.4/^o+pGA!#K:Ed%kG6bIp0e'EMh&2U<:+mXLmL[Q4DA9\bNI[ZN;lr,@j@lLe;Km'_Z=X<&fI[geJXHo%M0`/?
%Fm^@P@W[POEsJ0e-G,sla8+lW-uoQF^me3\/qt]O2c[@T`Z-I3]"f=Y?E*nQo^-$;Z2f1tDhj,TbJKa[SJ`QZ!&/GjDMMidgNRd%
%Zl$rF2g%2<ZpciN[mRKs:Y!t^$mGtO]e8SnBFlceRCXD&#Xb7Zg^\K4F[;M**Gl]0`Ylb_^p]%-YHD^Y>3*A2gMOLkpAlKLY+L?M
%6PF>iD$R,/MM,9V%VDSo.ZZ/Q1YcVHEEGTEOiTgFjeT_i;0G^;A23jYT+6oQV7C*''_3/-Wd5$dno+lY0.!H`T0.]7DL@;CIQmam
%*btYDj@>A5BG@m"bFW,f;2+Bg,tYJ"L;jaE**LNA'=K-$dmVd41@>k#W,"mi?gJqW>s$].Kni[W[6kh"-oNqg44p^P0ct,0CIdZ&
%EgWf,*?(/mA1DA-MWu[7@6<%,Ro.b^1_K,cX;tW8)HL.rNbO@o2WhRp0?^r^RBR^tl=07XYat8>X!F8jBu5"*1jX?E+IeLi_bJb.
%nBPQ=<*_T'k[)u)[53b-1$5Hg+geVEpFqf=_[gIJG?I!e&>I5$AF0fU%U@eN[=a1r6/CEkL^[ugSD0.51X&jTUT,=d$^c0EeIIhT
%og?4u<BJZmr4Au"+i-JpUT0jkKB?"U<:/%+m%^W8Tr%J4NiI89&RL0ZWZ=b@nr\#o41&[LNN1\MdN=`:06uJCGq_'T42W20YoB]d
%Yhq:[U8iBM0qr$PWchpU`ODG>g)11-V+*J&+eeI)Y]EZ'?mQ6EG>UHiQ)MUcU3<ak=C3md[50)//nn:m1S>jEb'Zec>dS_bmuEgH
%Al.m&/o$.W@DcfRG)!*&a_lpgnY$ZXBqfdXH:T..7-tC#C<_L1*I91Q/PX\h\8)teRVLQM=TjMLVB*e)0^ZHK*Era@/4N>qdriTu
%VB%dJf)Bed4/)doa;^RkY_<61DOP`.`_)obSncssWl(_D8NX;*'1PDPA#[@'$JHBGYF;[=BP5Cn*W7C"L\E`Q8>Dgu3]`(Qgf2X\
%c.n_VTH.78KAHaufM[+N&@@'mSZSoV'5')1[3tLj<6u-"N'MSU46%%:mtu8mC;`e(ROQr."t3pt(%'q.Z9#0^g@7,[KUb]h)5JXg
%Zt9N^n-l4HF,mb'd9=&JU)fa+8XsLPG/cU8]BkDuL'4'pCae#R]r@pS7+2X(g4SI)Y%`Z';+PN'G1[>";^lsKpg>TaC!E'G*L\js
%XK$GW&`N>YC.Cm.#$bcGG'If.M`4d#FGrZXF'1T97p`MDp^`*ZVF5,tedhEuDr+1<%KfNio6aNfNa!cSpmS4R#q_r9<OG20M*i.\
%m0#Hi2=5WJ0IAg/[)5ijF+nA_O^+Nh`%t+L*,8.XlC)lacDWSR2!k\bH)'3BZie@_TbLtb[);Zrd,IaJcD7>#f0o"FWT;bj;*1Fq
%e.8./g>T/6rD$A[5[kjD>gp(o)$([7FR;b&2U&=>7hPp6DI(j(p4aZ@S*SeE/rA?nS$!e$51(`n\oq&B+A:Qbf8c[EbQVdnG'HD\
%dqM2$N^+]jYaV^8eL6$8dBV\j:Skl^e$XhEA]^.fFR9(k:b/R3g9EK,K&\Xm3u%87q<kh;J>6R=RTItGZ`K_JLtAS@#P<lJFHa+"
%brO<(\um&R,SFW'B=`8"(<!cjgDR;rBmM->`Q2#B;V2PhUET!;)hmYf6fBYX_KL[hI'DC<_KH!4Og%T7m3po.m<U*q7j;1FO#LK/
%_Lf^WR]mgSa-3BTG&e#,N0`Ii:"Tq-,ff/dG#C1nphqWuB3?7+!Dm2dniEEPCbBNoRKTB3ULJg_kkM_`fT%&GlF8WY3spARP"&kA
%f",qZb_5@[4m(R^7U\@k#R)g''HV4H6n"rl'=K+d&a9CeYT7GlW860\m7:b5\"=#^;1sKuU.s=$V)f<#DpifRO!lK4;e\=Z]+mCW
%gL7Aq4l]5hNliXF5#'^*>*9him<GV;9U5"dj<M=4Wbb0<16Lpl.bgXW;ZT[Jm>u]J6D%!)N\s/_]1n"Hn24a[Cr1?>/<\1)CkpnU
%c-:CuONegqpXjTTpe^rbAaPRB08j9dCWBm@RQjNtNb$mtj.!1lFf+pOB#8^:E@&S;'=K,fg_Hf8d3iP3TLU2B7o-JUhsj(_-+03@
%2CdI<"3TmH<OSZi%<K+LZ5k4uQrQ:J[NfKV'9O'Q+`bl60NPUK6l`8;%;e1GTWlA3CYO]m<gouAD;kWk+X.FLTd,U7^!N1Y*N?L"
%l_\PIK8QM,l?:er?#$6I>@`s@@W#B`\"eHcD>tr#7i<M6aj/E'W+dFNFK04Kfq$nJ@0Y9JO]=/8\"bT^'XqS\2I(`;!ig.Ih:'Cd
%e7Ye!='t$4om_J_TC2%&?+n\PfauO"ocLB@r`jel;`j[3Ksn`Yql[ZYjPP@UMa.3VIqJu]QXB`q5Q(NYU>G1!?i7M81HP<s^OPeL
%+0T%BnXk=&qXqs+GIN$IoW*II?<l%S(T6/_?bC]5-H#VZDpSFZp@U@_0@$^qcR)$9IZ4<<3k7B5O+0;7i#SH^qWuJ]Mjk`Z0tCL/
%cI_7:]Y-=P_]RU-?iT<>c291Q5Q)^Kq:/4,e/aVHn`8]3r2SVd^"!)7\NBA`]liJ.?YJ#eIbg#)H?4.VF8GiBcS+c_Hg0/4op:'g
%P$ZDiDYMG)F7SJ[pTMpBceCL<5OGFseY!FG]!h-H]6E].mH's8Dbbc:gP<+.\i"o:s7*7)R<Lg[rWhgS?Jh?&G('2(opbQB-f4F>
%YO3=.pU/oKNHQDKo;b%Ij3-btY><LDnG;4$n'=drFm("I\c1RSouYJOlTOq+cJb78AULI)?7pFT%,)Im]-dN&rp&XK*WNCbh$h1S
%Q]/Ske*chkqm5n_^>G8OZa;[YV&lkb?gXgC^\Q3Zs5A^k+"k'Q\E*\K@f;?0^,Cn8r2YVFm9f`OobW%OIm'S8HS\nBFl>W`MX3$H
%]/m^[Q`Y<,c2Tsh]m4o%p?GY+f$!Bkk/"-;Ze'TIh>#U:4o=s:e((f%83OS'?_::2q;RIekAODYm_eV_(*-BsSnmLjf5>`u<nD53
%m8hhVFmU7![9IaWXKLAFFCB=Z%bnBQ\N7JfH"m`Me_>MCTk:fM`lu.:?YK1Zaa<Ai8t%!rW?%!mW;f"'X6%eTkXl8Ueph\HUm(1_
%+12#"p=.:;B:%47/ok(UV0;<$p"jU^?LR4T4h:@Na\RiW@"5?b\>]brmq\D"e/<\0h7I]REcLqED;J30hY_>4I^Nk#NA%_eVtqqB
%OfuMAr.jIP?gc^@At@\$_$BW%eZ8;2o/dcVj6mUF>b!@g=W$&_!PLg;d+aK7cbkN*>K\ARoYhlW"!Zpl[sL2ic`^ZGI=$Ec2fQ(-
%&,*JZ@ZP\F!9aq@Dr82f5Il)cZ1HTg1@G+ch;*?%gj<rlimOtlbT#=nT_4e4+20sb3]QHMc)]`nrHPK%O*g+m>)(^+hs8Y_J3AJ!
%HeeZs>G(oep9$nLejcl&D#47#n6pt)Mmp,0gKo)TT=YI^$:-k')u-VK+PTE\<gWF\Dfb\XfacTK@;f\gSi.,6d/M5U$^Y'S`S?+B
%YceqQX:Gi1<r[<o^#..62]oioGk1_/k53?.Rq6cdHTi^!5!$G<Hi;b<Y'B4_MF0Nbc_''p\Sq6bD.l-&[":GrXt@N@s)8Pnlp:V2
%K_i0[s"Yj6%/!-<e:/>]cHRFX]eJ_iSi!#6532LDa!M3b@F=4#H*N.uC5jCG-`o,aO"c=4V1pD(*BmcAm+/[do>T=knJX?Pa!#2F
%Z3ZIpj2PliG`<Y,W)mcipojeZ2/[eT=Mu+:I_Tm_O5*S>cc/iYl0REhqOaC/p\O7ClI3=)S:+QOU\!rW5Q1-MqVpl(e(8695.uDn
%Eciao[X(cZ*_ra@[<bZqh1N:(+]Ws5Mpq!M4(Ca\)n!7SWuJI9)thtW\kc\hI/\Z]a^&Q9J"L)^h-\!4?A-5iQeHlSc7\Cap1UYM
%73.i0eIt`dG>>/V^O?"AluV!iT94L"8p^2)4S0Y?F5TgidjB+LH2IHmH8^7UXepLeRu=3nkO5g*^D9sP:ZDX3l/(Rg4if^bCN,p'
%D20C_#CeX;[\$i4na&H8So)0pHa.cqaQT$W7LB\5A>Ju4OeWXH=s9XU10Pir'f&r9UD5Of+eoPM1>84-J+8P;o*B74$@Ua@355=L
%m'LY%YFd!3ogZR%LP"Y'20u4epM=95lK[aA1MYBdhsed_4`:/Y*o=`jrTf5RB^N!UbN@s<b8m&Io,Ps'pUIW7"lB.O67ZK`\e@3Q
%F1D&;an_K__TGmK*k&@[_R'Q^NU;R&IW%UhbN@Db'3-UL_dO3Y/0inOM(7)onM(NoQ-&9@:</nWj24&(G;6lCr,>nDS.=Ru>ZmTR
%bMi6DZT.>o>cnK1.tc<sAoLqLFM9LiXUIsK4m>NA?<>:$6SF7?<g3b`Nj?>'dXjonF9b'7n;^f4:Z$Wuk3Rp<VtR_$YLt(8C9Pri
%/Io:=!5$)?]=uc>lj'`f,pTp5e\$3iN8UabWAuTs_h6GY%lN8.TXLu[?X-t,]'p2Tf34[ZrpYp4c-9%2bP_2PT1>'9ro9K+PLKR.
%oLPFRIlKGO^\R+YL?!u#k>)U]$JX=<]_KD/VL24@kW)+$T'c@Rk51?DfDkbba8'n_JWbe:VaHN3/DgrgPc.++hq![I(*%@QE`t\p
%MNK9>:Y1blGH?gi/`f>R#?J9tKl55ZQL]8`qrd\]$V"4'PWJlFPq6LSjuuCQDDgS5K/'jds#u$'\(X-K*VB?tT_DFd]]e*u_"GH(
%'f`Di^X%";?gE49nV(#JHeeuLkW,a;^PB7_XnBF6>N3$@s1Z)UC]3_)4o(aCSCYSt4WNANiOG3R*pVFgQN&#Gfsm@J^6c1rUG)Xq
%BYNHafeUn@b<4^EGu*D+6`\DeH0Y>#mH\]I?CY<W8^mY^g;3N,lB*W+H/a;<-XNF8hOIjKnbRVNd*f*[e2=rfg$80ue*m<_I^-Af
%poE^6q93EX/<dQt]lW)$]K,lfla-W_[SHIC<U(S8MaFomYI8f8Y23LaWQt5[p\*F/7K96gF_F5ElTi0DWH[4,jRJ>@nitX5H1R%)
%Kb&)L^O4W\HB^R_2qcs&3?%PiDYp?gZD>8&]asnfg<Ho_6sno@P'lW$]^M7k81R3Mb)u4p5OH!NG&PkC0,E6A#L4pki]3)n49qPH
%3<fr?-[Zl#2U<\[mU=l'TuZ#5nqGX']@E9tN%JI8c1M<L:%,[<I5'fj3F5`dnbs!_h)V%_?Ch)WC"LlVJY/EqDjG7r&&itlJH*#Q
%nAcS%Jk]l2G%c4^-J9Kl8TqV-lo6!p8'bY5]j.Jg!DbLmGamB7XsbdHrqcKPlHQe6c+1Q4qt'9a9><]@rPW]JKD++2CB&U_d"e:\
%qj;*pXXr8,L?5XZO'T5I(&E0VrSXHs7,33Gq!dhd%s`qBIsuHYZ/a^=IR\etdPq1gJ$hMTTeQCbaggXumCqV0J+`l"VPiiVH`77?
%LO5@6$;o?.U*pR=Q70]J0>/18,01@A/,p!&U7g4/l)kqo7j)0m>>Wg#qk+IWMXE&Y]s&.\MGLG88b4>.I.="<q;JL%02J1nA,>ol
%p#Wn;[?cLbjGe>TYHN*ZU-5k.iN<>=:T/O8+F^2Wlb._,Zj<nIIc0@.Qdtc]rHNa6H2ZbIj'#c(pWcaenE/g)^.aNMMgq>rZtP3e
%pY*;RV^E:Y?X3'dBK`^u(["k4-]?(0`Y[CC;uN!\aOf<Bc^'embR$2j0DU-)^3XpNF+3;2J,JF$_o9a'K]VaK*mgt:e$kZ^06TSK
%*nmful`4TfR_79?[Z2HT:2YNm\"i3clIFRsk>r&E"=J-^r]l6O=[RH1`/-.nZ$())&kc"K"L11"QsF7#f=K#s>PGYSo3(B#T5@tV
%AHmS:c$GB&4ebNVLIf@4d;G-^jn9$n"6j.!FZmqU=J=3aL/-X2KC:IOI][ek\@)j)(`<79AEudhDB2d;?p5]jk2Zcp8Uq6Ln\`t:
%52&s$\#sN7U#1;2/AA9t_ch,>52$7Tk.\?SrPSB](Y@R3lF$&;PF]?IJ%IAGAPjd?H_U[d;te0-]k<DfebM9,q:096doM8F/e,)i
%[^7%:lH#:$9/=f(o,Z'#(Y>3rh>,Wmn)s%bMjD]p^%4BcL4H,CKHEHjek39VdVS;dfo20U:V1lF7^'4YR-Lp/[@RK2erEA-qd8GH
%YPg[mTC54dqnMljl#2@Rs-A&-s*i$_gKW2s=P/O!0=t?=NM#(&=7G"a\t<6Pp!(`WH]tn0lT5'd@QeCQa6.NPm.u^5W=&I$deu$$
%>?/7!mQH!C_gD6`o0EAh#F:=XmJrl\!i1U]NU=+@%sn\2DX-#X!pR>oYUYb&g65NfoF[,-pRjctd+I_UoL2gBdDpaek=1BkT+rs/
%_VTYgZrkm-'ipR;PFc_+,U"J1Y9b4"rJTaO?<2l/fOS+X3KRZ$m)0RXACc.$h*9_a%s7=:5`<d(f6j7cPRmE1AG=ZfTYoF+SmPgN
%F7V@5[KWa7^u;$4.j4?\!J*BqSU9rU='gd7='L*\BCDlQWf(&/[FJ?*N/m"4i2\Hq_s4;)^=qkQ4i]4^qJ%+TYI4XR+5@h0b_!<F
%5Pb[hT(aU1'V7TqG$ub!OeP351nH!ls%Vn1e%0"8jQaLjmgD8c;uauNs60CM__WTp?fY@nr:"K-g/DqICJigRMrj!hl\9'6f.H@6
%LZI'Lm2$)>7fF::[E[<];&J7ig5-4/5^g@ZOGUT,d]WT+lL4,81],U4><T\jp\5NcLOOIXhkG"j%c?R@XUa7Rn?!2XlL<'1ZE(mP
%#W>s/^4YXdlL5h*_m_RuNI<j8:Rl+/=4%S#]M)E)iNaX(g?=mVU5,ke]pJZe<VU+\`e[NogXlOEA'8-)_qrDac0LHLY@gr4o$*n\
%`h-*\[^W[DKU%sP/(](:K\Qq3X*$Fa*;qah`ilZ60ONjSmpj[i_CYK\/b`fqmfUaSf?!)!7lD/X\IU@!\Hlq6jN-J%cenY>EH6AK
%H$4?%`Q8Y:klb1Sp[p>,JG(BEZ`#Bm*i^`s^Ot\U;t9Pt4(!5[*dGd(.F6=iIJ3W]e^`?lQY.+IVu-)Xs0=%b[e4OMp[>$Se%ack
%$E2e3^OnRf5(f<W(FSn$]1,^0qRB\h6[oXWcfMdQbm3Cr/G^h,4)oM'I2SKk;>\,'Xa`16IpCF\p?IE\4tX)U4qQ_:PH4;u]2@c^
%g@)b(I=8Z0@*PGD#JSOPF6qH&gh74AhsO[^F5ZZWK<0`qlU,\ZnMUn;Xj8XQp'.joSc/:,J5'?bpWh:+pZCQ0hGR$"rd"(`UA<?s
%C\KH0F8"GHG3!(/BCq1,mn37Z:VXErR6Ki.]t$,;3]gJ4N]"Q'm[`XHoLHXp?@'&1>]A9/NH]b8-XXPJ^H)=6?i>>"7`9%=fD:t"
%TNA%hD_L"^,Bj"[)"?(]:/,']M/Al/G]D&pa`Pp=qB6!=T.gY!Inmd7p[*MtT"T3L/lU2)3EZ$di(ot<-H`WS*-rsS'/IV2R4'.g
%-HbSAM/p+QeoSo#=h+")R4*iQM=OnSe]]5uJ'CE-05&Wfb!fHDTcJS7b-Ff`kd`)L&'tF)7=!#hFNm7"P5_So.#33*XLTa7GiCj?
%>SQeRF&<_,$3uCN4OY_'l#V^0/F1BN"!DBDk'\fXh'io,R6oB>`H-RanoO[@$\Q^iQ[&A.ZNL"7pC6qn%ED([\GT_jc\gY"U$gV>
%6Z<;T_^M=8pg<Ji[1%OL@;LF3\n02R[VXom>?MCW@;C<5XG6VJcrq2rH8pK,^5SG79!99o&_5S#]?SQ\OP4upVlL1l*R'^)4\-N(
%h<5>\UPnG-[r-<R7^p9)[qNbICSUdgDuS2o?iTQZ<T!;u(=;^H+0VmI>]4[^n+>Un[_G4-g%=0Lnr#a3d-ef$q;kD=hcsO<623qg
%lp"D8FfGpNntH&(r3oIVUYgIiMrEmgs8:poDqk:6NrF_31)d=lqbR"QJ(B,GhmMjD7qOaWiopF@s+[:Mp$0<ljca&a82^oI.1YT%
%**r.(S;pl+[PbciDD:a5;mb[H\fjjQ>WFja2=9iDjjMgfd_NK9F8-!DZ,+TM`a?6gGo(=3cY7liD_ek]^?q^\T7-9gQeu0NjSrP8
%O,s7?^Kk9.^,l*#Hg+]3o%*fpd>Qt.(sHCTd;\G=[e905'T`2HpnFN4s8B6P->/Bfp5XX;BRfNna$]L552O4fDc8cE=blWR]YVdX
%r&k">:K2gNa+mH2_<6>u0LH?7#VQc7?R#8!P`1)?[57T5B^;!D7t3`@^KUT>b;PYtLe4$h:.<0B.*hM#l[O=0UKD%8H-,Df),hEh
%XM:oFP./hg>JKjtCAGKt>Q1'RH+[>;XM&iVp$_E2IQQeR)/!>N/kZlGC#trZcdMh7T4m>7S;hCJl.&.ibQmN0mAmSHoRG%+:9Na:
%j%/:bP:'H'c2)d:2XA?Fr941[[nhJC2jo)DJ+^o:imFt/mHF$=cg>RS\\H\V>OUYEE?%ZR[u9q09(k;$hAt?5?o151c5:@SEphMe
%HBg("hDFH=kq/2CRsb`@riqIeH^B]hUKipR]pgVPhrZ=_XL$Y&f71sK'e?Ih)j@q?:7?EtYYn2$WPs,=4Wiiq(hZu&a/'LGo5pMA
%U!L*f4S?$`HofP^T5[a.g=Mmg=>+0J\.rfjUM^CID$/2c>?tfP-jD4#71.'feMUJ_bdj+C9qX-/OA_W:d2`HnfBeFlN;=1[_'U.g
%4NMUooq`j>.b?U5mca-49@a.9_:NJglR->^mFTqJ0Yu8bPD4<uXNa6g:ETSkQ]%JOh6A]FcMUN:E=TDFG])EYreBANNq;Unfq-O!
%+%H7nMbc#Cl=BF9>C2pg,o3'/Ytgd!nCmZ++hG,$Qc)IVY@s]Vn.67_=^Q4=D1,2\83JJ$jpJ($_L%?`3p?k5,o<W]H.qCsR/b5:
%K1r3$:&hPk6)E*.lH.'n?^h7&&9ZM3Sm.pL2Kdl]0qhf6\SB/pgKBFr*fS'qYk>Y"Z6A=K*"=i#1ch&GgZ*GQNeo=-=e-OTRU@Ih
%3?mede=G6/cfBDt\U"[tn9(uS?\^SoqVCJ2o:dl&H4q1c\dRYZ[8[r_^s:#hm-5n,ZsYYTgFnQZJ/_b,[.^Z:=4E*)^rO/oqH+Po
%/Vbn.*Mab?ZW[4LYH*q81Ug52q=UDh+De9W;[B24]m=hnk51>acAjN\[9W]t?c1[rqTdpQDO=e?mIaZk".%Uf10*W+d^Lj6*JqHi
%@+?(=WpD`!l[7g4M<u\`:RTRPgoZL;s.Wh8l4DrnIlt6VFatL^b(;(_-C'$V\n[LLcGho*7a;!M(KNHDVccR`NNr/La0@7m+pV/>
%^&4V$ma'P_BOGBbI9T79G/mb]YmH%IRLYaf9@DL4FPH#n@i6RF,?)pe]%jNKL>u/j*5e',[oQ?hVeX7.\('-$qRASXcI`$lKrl\o
%DIrf,EFe>aGGQ@X=@3jF2e"SG?-_*MDn31A!25YR3E"Z9A,U56c4>9cbG>`ORuIq8&F,Z[k==5e$1=5IobXJ'1MgFINL\6<":)h`
%oUS[h!6[aUrq]C7aE9=XplPfN*UKjc;14P6;(_=p?@-H-gZr\%ocm5c3O.lOd&+JSQe0"CYhNOP0%k+AeUL`:L`@&VVX1GYcD9<T
%gmZIFB2,_1DZ&%V>"q!Q%.A(CIlIAtj'^Cl03_0"YOf;"$%?(RJuP@%Kb'%:nS1][QEbPLTJs`"15(W&;e-GKHf)r9g4SH().nGP
%"]0,affN8EQDUq%dXcC/Xk9G=:$l9Ya7':)]n4Gtf<eI^RGNHPMKe*Ee_ZiTNVAl+VHPKnYXX(ifdCNW#H'Lg'1];lR27cBkk"1g
%D*>n'Co;p*H^`W\nIt(J*?eb1ZXhqBm^;R%XKhJ9-]^jc9piYm1L!SDSpaN+0n[6EC&5cM0/u_?bH]0bl'(oH3No>TBeX`,R+]0]
%k@:C<djI;J$>g>1SHAG`k"XkMhn54:V6A*dn+P@D6o]b\9eoAdoXh!+e`=pO_Z&0!IAQ4Rja)Rg7g0.Vk(,K33?6&hD/hQ0MrPsQ
%2mR@DeeC+Hl]8)&lKWP;qi=+I'-fS!J/7&<jaoSSFDu3fB1Eo2p[Q&!>@pGB7ol]uWd+N\:tt8"e-"5'\ri3CACI^!GfI1#>&9T)
%"8]a><^-R3gZP]P\n5:*/:685k1J"d0K[Ti5L90Xb4]1j;OcMAl<C(Ari?()3o!(Z)bouVcI+cV4D&UW4\RZDQ^p9^j0/GTI#2rP
%;^gCMKlO?NT[0((T4`29M;a/,NdorI)1W2<>?PX_W;7U%Hi:=j#k2F&=Z!fl?e2cV<e^6M*Mgm8.:&isdSF#DDR9NB3AtYfpDTZS
%CUp#5[K5rSg`65G]p@E`+0>icPBip;][sYNQ+iG@W!_!O:G4qm[%:V&TtHJbf=\*=C\e/YgN+G_hG+Q`4T1RdE;B$ImGOEj[<mm/
%M#@H2djN5)'rPt?dr!qeZenHK+:$E.R\ilNIP'OsPP8GuJV*ktIP!R_-;Em;1=Hcte)h;`I-NDVd_$UXcIqHK(<^FCA>`@PG,ra*
%Rbg,jknP0C3N6UbE`1TTLJ29[a`#sMqVZiN150\'3n"->G?DC!b+F`E%=0Dtjnpe-jjdX5JN<T"bNnI%@Kk`:kPmTTq"*2)DpM0s
%,\lq#SQrk>fZ"<eKH9p&gn.A[DU)QqrU/t3Ru=U;]KLb@EN3ApD+A]Bs6<rU>ee#KCC=5"qc\$ls#U%VrB).sN;m8b!Ct_Es)N:'
%+glstf<]+T0/(UHcb;M)\N%A#mLQMI?iAm\2IZL-rc7_gq4!l*/1-asT+4<a$HKB=#.s;`IjOiM'G(MMs-r"4l5,VN=N%uG8,oON
%5lFLW,P$V*J8>[VXT>_g0L1rH<e0OM*ZR81"icQ4/LZpG2M5K<B*H8uq[/5:&R]od:b9*6<*U1Q/%5]$(-hQTio`p1/@D-Qc;,,g
%o05;b(2j_@l)NAAMU<!i:Jf:&&/6pYK4=gOK4;)SVt)pD;lN9b]GZ?2S5B\j\T^H\&>7IMR%HdcG(8r'`QptTbS+oX^mJ=.A%Muc
%L>)c>grJ$^fGYU]/MQmAQe3.'m1-GkYO3RcTeKs.9q1E-E3\"$i)9`k(aQ(b9XP>R[&K'o]uFpFE5[7Cd0,i)i;I)W=lcWO;9eS?
%;V-sCOrdo^FN7Z/n!oNH#[;Qg:Z`KaqaP(uLMq.V+r]5%oM/H$AMp9BK_t)@:rBK>o+6_I3$>Z/SM<,'&Y%h.A,O]9S9cH<m8oX/
%cU6((_0\J+l5!mSB&igFHFq4tO<#-.0D8tqA#bliL<S51IFd>?-m?+\!^l-kCoYhM+#!_s/;-mIo3q?$gU6bupiR>+>``&5&:PXa
%C.I'2j&].tp,rEJ0Ot@6PM!@iV2!o0K.Qk'IMQreAWpu`rI&m:q<kk'Vmf%-"gEK8UT;5Fe\2ASdS$Z3!mkDId7-e=`-/'=Smb&7
%FhP[<<dU?1gTAXQU=*8T^].M<")*3d/DnTLmkW\kZ)ke:q.__rC-LldE/<h$oo%AVTq2k*s#+C)rq..mcZ\c*?f$9>q0lmja1TY<
%R.#qt1CfU+pingueRP#tN+uS[UoDWu,O5i_<u4u$h5ltUlIY8s0A4(s(eku[T,hk\K/d\On3]^k$S[R9gI7^/SK>D427ho65$7Ot
%RaSO^\s"$Gqo1J$a1>slp/%C22GMftid,(B9bRbHm[IhQRqD&X2fZcIFjkFtDY,f6>n4fIWuDVOh/&Ur>AqQ=Pf0@`@+*+V;,)26
%kJYr5NLQdJFm?tZRr&ug>Z*N**bohGf0n5;+(c=Mkes66./!*!$r%jl=-'KrR;*[u_^gF\kKjYA:7mrONp)3!TYaF/?oDmUh3]*!
%.ldOP_/TJ7;#p.uVVq6EA)SIUpFU>DgG]`7GVFqugd8sPL$'J'hmg0ZHsF=8E=E_>s#;+BU*KJCL62/e9jr'hi%TH3kZjX$D??2d
%^\dLso.6$aNNs0<b4DnO%G"=t8m:f(2M.O@JMWM)\$5MpG8l(D668c"FbT-O5lH]l3J#_UScA*YfXgqkZ1\#ICu$sbh*!['I`Gsm
%"g(9dq>;,WHG6027$c+&Zl\pBD\@5Df%jeKI5YD-=)S]i9O5(MDOTigp^nnH-<;:-GK7+EepT228`mI5PJtjr\bN_:32(=Ed(3AR
%p"c<aHQ0>0&#JD6PXC)S@58DUL5UFDb&&NQH>4jPIL!6O)RSp%A:<WR^0LM.6.V)8YeFCi\-&sa-^`2nW=(jM1-#7i/WcU+QQSiu
%*1FaOWEjo_EX)uo\a15R=9"04S)SAi<2Edgpg72A@cg;I7C@QW<RB"q_*GGX(CJO__'rc9s8?9<qgOY0i\ut1T*`B>qOp)n(kt6B
%DG8*hM"YhTWgl8oRobM2]Rh%4"#VceF[q;`?ZXlh`[n7\8H.Os6>ZkF&_:4%2:lckoilM9em,sIf5Jq,>BBbo>e`/JDp@s%:OpBP
%lhA\0^NZ@aUimT]qdq-o$&<hoAbWIBZ?l,qKedKPfQjUP]$SbO,il.UP)c(&`PmR;e@@TpQ?:&m(jBN0E0)>2SC?>-74gVM/COGD
%Tl/*6)4]Q-PF$LM"=r%*Ln/sZ(JGJ^'#.Z,,)>7GQsQNo(I$c-m.H(3Ids@>HGq8"2K`JBc=7knVhT,.FPUsVRuhu`>?7LL??6`r
%*QTIN]Q$ULF?%*B%jTZEkd0Cs%Q=/<Z(kj'r*TS$ZNtZT@s/?%ZZ0GNC(ngJW+K&cpE]JA8Mm-SlGd5f@jit$)YF@c%U2A-V'(X4
%g(l0qTWYUE]1)i%)`lJ#q2QO-(A"A])/2b3r,ToMiM;$`A92J2(@KLB5GP@3JV>!A#ZshgS>Dk*"gr;cHDNiq?kcDH,B.([kF).@
%NBFO^E[3*rY="J#cRBm]q^h=]J:aLAkLP@&9Zq0ReiDu:JhX$^1Wb`"CYItZkllEcDJM^6Q2D=sG\8]ddMS+r(cBhp7,QT_4eX-Z
%(?UcS'5E2`C"q4Hj.]:qf;F&Q:56./3.&!gN7>FP=se,ET@K?%@M!@:fk5(]e]3hJFW92inu7"?Z,RMo>d;;0&8QZV%&ruO418;#
%PmI%Zb]2N#:f4J^9T?Zh5ON3/POA9YQt)RmNk7OM(=M##Sh$1<l(kq?9nHQ4T[kBeNtl^ulm/MEF*p`MUEY>*!mUec>i/(!_[&WX
%$E`'tmDY#U\Bg1p+$k^/Tcq&JLcLJ$jSclWA(b5lQKfoH#Nf\i0X(sUMAPDUhrnJNLH,0&LqjChSUulGh<!ahG9Q5Wr*TnT"M?*n
%Ne.$2HH)CcY180T]-30,UQn1r<(A1c2K+P`6Ci=Z['"[!ZI?,HhV?`nBIgO>BksFi96l^^fO_I2/EDi!'Yu_CY=4PH_iD-)=*Cli
%Mn8?n3RTKmKUnYmc<kC(YGXs?:#-(R/BZL:VS:f>C_?<L@"t?:1"Wg3c)gacqXpilVdEoK^E0GB@>cFYa,`Tn@b]#+=a9+r$gq8\
%LhcNB^GV3_C'r?rrB_Ya2SFDb^udiopf\((jQFK"@107<jMV7qH-U>)Q_tFRIVbO(YXpoq5Nh]&X#2AX#giOm*<Jq4+QispQp5BT
%:cC-S-5Ro=T==Dge-c7b=!q5b2IEhkh-hjID=]45RUMh7hlN;^A-aJjh17q?g%g^mek?^T3GkG0WI5)(RTk5Q?'#0Rk\pE:.(&gK
%%)]gJ`\/.`=<[&+U_'t&:"iH!B@X0JZSf(dA7YkcG!%phCk9T%BP-"Qj68;tokg0`7_km@*HVN'S.!V9BTLo.MFr7JF:N^h`UZk/
%X#Im<b&tGaF;ru8^E&TW+i?Q[DM-'BOP5`[Z(q#(!6@,,=u.ASaa9_\XkTh?krqY.M9@;ul$(uDJ#hF4c_Gg$dOYgo/D,X;UmMVB
%B71%o[.7dZBSREPhOj3`;)%dkg[C&A_Y,.c\?`mgD6+K+Mco*<N@4+9Q?t8XeG&opBtn\Df_6%Xh_OkUoR/sG,*h_E4&&]aV(Q/Z
%HUhdsLPN.Bd5E)her1^OZH_Ks5uLSDVT8D9)e6<G!BuetJFO6Q!3'XA*qdDXrib8[$N>O6i;]ggGBX$p<S^kZpK#hX<HYL_s$pd'
%h-3nR<q-.fKE(C,rYq">6LLR9:1ei->uJWC]kkq,I(6S+s#/['UUh6u.AJ'`Z$cE#j>[L=]]_f8e%^D:Ues3*92jET\PD_>PK9FQ
%>?2IU$O)fq^WWUY8;NMKiZ#NQ-qR\sZp$JO6^$,,)bJ&jA"YI)ju%_&:pWd[]pul&O9`rpmGQLFAN=oXeH2"&f+o9fY][clA][sZ
%%aQE[.6-n3FNhQZ:^f3(-Wb5:p8j%;`!MU*$OJ!3=8FF-S!aN764??cP*T5YAf5!cL71\46i%Z80\T&@-e[1O9IRYta\@;Wcu/-5
%9.._;&9W=K@`[.Z@IHR#3_I+^4/AE8&uM*+8Nq)V>;RWAi<isZnldpTQ&s.-hE#2Fl:?%CXUU9QX$eJ,B_D6^UUr6s3am8%8Qegt
%[8*Nc&D5CG`,pETF`3P[0tngQ[E$7^>Id]Bk(*b+VF-r`jK[l3(G0[?4$RBF$mss#5DCMRJKgIJaij,MEl"<O>jDH6O';A*c\?[1
%orYh/RQRWYeS_7rGC[4'WoR=+q!YK2B`)N\3?%2HLkoA=iD`9tfoBP-+rd!se9RQqJS)^d=ke1A]c^WuZ4\hB3LK[rj"VJK@oCm8
%>O6IF!>IHJ4-,ipmt(r-!M0Y-1^i'capmW.'*;gIC4u.a:1Tn<*='JMpP@H\RCWr.df#sug4UGtlnNY$]EB'ZY,?_3g-p4iqJ]IT
%8EC[``q2tp1<f&2P@pnhn8F2Vm3l9VR5Qod:;su)P;eZON%tnuG"f2fE<:'uBu>Oj^oqJ/Z<ni"2D@a[;o!-H*>&`=g!MpVP9ZP-
%bl/Rr]%6M!+S\.0D2oUgZ7Y6WfS.s:R;/3oNO79qNH3c!U96O%2$"a!o^4i:h)SaG5.88pA6jSjE`tS<9Gsj17S#Q<TLn6B'?gu?
%XE0CY$e*6ME-'fhRtkF43;4p^5\L&O%!R^fgj/J?qnVCh^u+CS&@B1]K&-TZkDVZ=JjW3.M]!?p_Kp'4[h.dOU[t!<Di.H%_m,ud
%rOlkB]+qN@G's^$[p)OfCE?mn\XpLW#[aJ=q"eWcI?*Ob`_bjO/'T4(NNSc8FgIsc8%?__#^6CJV?hCuJ@MM8F9C]D\B!(HJ6I"5
%m/7D4ck603V?.4ukr_DN\!PDf'J="R"r'8V$ARH-h6\[LSe[H4G9iJm@a\u/_Lk2'A.Q0`$MOu:pEL<bqa4^CIAl)^^6<KF-ca&e
%^B4`0Vp,>LG:iSG`PI2?!s`a<p+m]DDr>j=Fo]j,+F%;s_Md/NGeOUpD\1\4$P0_!iTaan_=2g[(7tFfP2U<]V==mZKOJf8_XHF0
%&1fppb_<h#Z.iCU*KQIbplU"MI?8,e]H%HB)eaI\`[6fBFM"(&ir-?Ui-=#]a0@;Q$B@c0Et]OCP19_d>XP\NJ6YDB9.<3N2F-\J
%_8kT21PE?ZesVgheS0VrB8*AUU3GVW\`)Q^G^S[e^0LM._W*q5_5F(7(%(gW<QQRJKht.':,cC,aY3*S4rmO@YqmeqKRh7XLd;cQ
%;eTV?lE*(E8IUmK:TFF;MW:1JTXW_<jdgT-'%$-X,bRbNd7(q5Y6f)'$CKSM^Ui:rMNU)lq(jJkV`ek/,RI5oo'i4ns),eF<bu<c
%7TO>9`C<mEAAq#=Ch1LS<bu<c7TO>9`C:V_Q.gCFB\lA)UQJ1C.GO(a07,>_!+f(kV(%jL9%`hu)Qj[4N&qq<60IH&4`NVYQ0D'G
%dWN\DB'@;VGBnJs>ne;NgVqor3]L%7gbWGP3D%V:rUk8bdg0H]d*XQ9(4S*LG7Dja/hc\-bH6D<V^_TN!md#rfOeZU^HNb>$GBQp
%DuF7Fji1_T,EX59fk,5MBae3qfno@h<_lf@l=7W2.)J&:Y"u9;c0/=e]%2ghN&@@\@H:#t\IqB7KTRcnj@U9"&k:^^qlDZM#?Wd.
%&+GeZ2lnO]^^+ffG;Z3iPkI(-TI`O]W9KA<PCQMI%"STef"UIV"1tSZ>-V.,cNum?AklOA'9Wo<AK816->p5qZ=9t&Wf*[;&Eg@U
%\XoeB8$Q$6*',OFD)r3Y#hA#E<d=-7'6>s&*EB8+.Ko\r9=!'31t^3_L1g"h7]j*L""%c2<(/%jISK=+WG!R4cY3tiW8Fo:H#&od
%:hKuia=&T=Y:fMa=NG"e`+JpcEfA\d@.g.P-[_Z"K/E3/jdSN%DZ+RR,9ENC/5Xa2425$>BD1'6%D)gnR1TQ!]=)hlVGTrt#Z?_B
%RtJLQ?L#(-#fRsre_9/Dm"uo\1k*lM>B2TQI>RRQVRk!Gc-=>W@io&*WLaS/"?"A"qoAZHRR)q<XWI(dF_W/rAD;ZsLTLDd%`GB\
%AhBCGF_!NDZ,[C/'Vg?:fEKh7[mi7*lb8oL#*U.\m^UoMGXH04;DlEmK/mPuCYk/:,5O(FJ1J/6-F/m0@Y`,o0BSaRL\BDMX/P3d
%<_!qT%X2SCZIYQC]_)mg`bB*q.m>R4DY-dFHX3:DGtrhsQV0sTX+_j"IFL=+$:L6W(tJ([]Mk+WnrWF<X=p'n,`/?NhIIR4@*8Eu
%-&_#ghmr1F1/k9g(//$"P-u5qf+#]_eSAhW(n*rp?(ouo<l\<j1:=$^qS;,reMce^Fif4i)o"gI]W-Ml,r_,O-$ua92Ba!n-VDZ>
%YNoi.EWh/Nf@ALD62]sC^!&_E]2!O9qJnmdXaJ2N;6%I]Pbne9,LDJeRiCbSHm65H8D[oZX(qr3O4[Jglld*!Di52"pa%f/="oaH
%GPsF!B/q\%J%EOW?f$9BY)SN$iqA6o4<dX8MZ)ap+r>CTg=m2[`T`\:WZBKpd=i@b%RJ83lbZ&lItnEc&R?uqjB=l$cm(]JP>kLS
%@lpEc'j/Bu!8q73=?VV2.]sl@FmW/sWlL%o&T*6-5gF53<eJefKi5@NgEe9@6HUP*@lrd_Sc1%]DHs!IS^L,T0/,u'rIfpNPm7$*
%oO*]d>hnucH>Al_:jP2)Als)b07*%Y,CQP-q/njQPWP)+eP%2p,iJ_cS5%M"D7\e$5G#mP6;K7\.<64M74k`G'Sc/"o]%Cpj2jgm
%^"OICH[mU3,l8@;_P'uB3s90g*E#+n^rt-6=ZrAAd1E,o\p'jUl'>3CkqrCJp84BUi4b4?&"If('eh/I]t`uO`*U!JB$F)f0^It&
%&%-6M`]*c%)i%AA4fRl-X>t2ZhdEVF?Bp&Vf]H?$l%C9YJ<$mmg86)/5UB5bIN.&+<!SmXO3m[eklaDTNtKgGoQ5srIh2jISkes?
%."1*`e#C-Sm&(Mq3hh)cXD!$!eG$gtD1,n$0SX&AY[^An`tP\jXP/3DW6(2!nH>"[V&8ZB<SOkop!a>5"J5VD2Er)6B5)J<m<F4W
%Ctq!KEqX6kd<q*5X1^,&h/bZ`oQ1/8[cp^Bp=$"D[N(b(><AD@]3(nlh4+eL;i%qWgncA/Pmu'G#i9:sI"[q,$K+"VC6MhBnh9da
%EK-QldBb]V[RSTokh1kOHF?;hf'(d*4^4[oC\2G&SfMeBm.RFY6?@l%/#dibU)\$SVM\a;/'Zo$?Z)81ErHkKM12AUj6fPh4rSL!
%Z&rqAX&`V=(H#$Q`lBsJb1XN<R87]Cl8pVJH/%HAN%JaJd-10Tm8kqP4<%1t8&MOFXBtAGG=TDoq=6JBVf+6gEd^=<FhY!6Hbr#,
%ZYl<S5;V%sYb$U9b/Vo'c%1&uPV.%VQS[)tcN!1@IdIG)Sb]N[@kT&YWRbjNolG_F]]<,6'cC2;TbSGKOeEL->*5Kn)-W/r'cC2;
%TbSGKOeKZ^L*jI3G@XdaUfM<bWc"AIc:npLl:YfB6o?R-+9mleXgnqe2[pR9MI`:B53**<95"W*;"ljtmPE8h/^B;V"d/!+Xcl=^
%YW&rM`)M,RL<((7RZfJK3sSR3KWtj,enJ&MHg4AH[FbG%TXRJJ"IHMNJA^UBYmEJO=Ts6M?"Kmo&%8%&.Z+<)[%&'WfUI=i0_;m\
%1O64]`CsV,o19T@IV_*Qb935jFj'MH5DSDDos6@ZWM_QLH7X#b$%qa/>`S2FG[n@(\RBAHqI=#'0r-]GcQ`OO3KKe9#bH!`C2(S&
%j(k+UD)MftP]`HO*G.^'2<.\UhElR\IR6R/7Cc>;\sULl%AEj@4Auo8T&u9\r!$sg]s1cNaA`mSl40/\B$do!CCi_^OoA,3'Yu!(
%1CcTj&?Ut*2L3_'qbE1,!g*>Xm_ttV8totEq:9_MXP4ls=2/U[f'4]$Nb7b,)TS'sPMQ/Wa;/k:GO98=2]/%)[iOotmFTo3SB_<f
%\!dNFr6)?Z54b6UlCrMP&B,:U#J[MNIHPIJ@jD1ZUYrbUHE#^(H0(40p&DAmVL<IE9)J,LqYYg6*P*C;&;%01RB.rB832<Tm!AgD
%FBFtg0QWk3nc.rOPnmSIgJ&>(-^4(Km[8V6>Ll]`<)or]d%d7Y*lL$<'T!:F0HOjb'%`Ed9,AuE=-)!37V^Le"Q=V_X1c,na'F.X
%`/6I1IBr'tM\(M(,ml;o+A]$?>?].9.%R$0kf5feNk*9fL?k9tTMeS0!>Igm"#/=Y)'8Dn`a!7o@ebT^()nQi&!CHa4B_'^$aInd
%\d7D,ENi5.36d+!Ff0FrJ__WpN\^^t"hb[6G2!/f1*0h*QGmto\4h[=#h4lV/H'Q8_b+(1/-Qba4NMF`F?<^XcZqel7U="dcI,rQ
%ld*TTX3#[<5X\0.T#^N[VC<CJfIF5K`fAOH&PtSEbEGI5C$sY>n;K^J8+YN<mk4)EMG=t9<'I5gq$\'fTP>7F&29"F[hj(]ORR<c
%\1F8,EF09D4e`rY&m0\^oQ65KEHW.lJ^B3na15cX>-g3c0_K<#d$Xb-T'i:l4=#cZDqQZ=Z;Li854!]061nC^KGSN/2db]>i^ft2
%=e[UEMn-'%>e1cYpE8HVV>Xka\4CW-'7YDJ35L,ncg7=l4%7@u9BO74^T?c?MdoM=4%qXf"5\5<8;c:F0b>S_>6L7<ao0h#*tOoO
%^e$@5/rm9*>q__PW&lP,'ss!"0O*d=XR]77h9B4K1sgs@.6_u5B]@YX7O3,_TPr"#]6J_CqW=Soks^2,G=DSLRRPYog+o0sX5;op
%"[u7$X7KnFnDK%>M71!@n1a'5bkOAR;H#,RK+-%?S!=l"CS2>!I/itp1F))[)3gJ/$Xm#K[0Q1f3d[;.0?cHEk8\Z+]uVh^\(2BQ
%DfoFThNIR::t01V!hY&]f,cL4):#Pl*oA3N$#ZhteZPlQe,qa&NJ=h62YU+]MrIE\Ha-AP"b*\R7,^S%l;Z04i.-$79EUV>4?fkW
%c5fYjg'Edc6#9.]f$XQBF\@GoI0d/.d?LOLNIkW0:YG5J<Qi5ddb8bd/8'FY748t1K7/pSpL!pfk-):#.Id'bc[#hsrU.KVHu*E7
%iFWl^r6$2^H$3m#VX<8ApJ0Z(/*l(R)omI+B6&I-\)(gMoM:Kj)Gf)mmHmZ`Z-qOroVYI]A&J:gZ+[Wu"V'd:Vn:n/I0j1Dg\Ai<
%q$;kp7j_a@LOE\QrXnp4!WU,g@f3dQ)Mc@1@l>lVWWDLT4BJL-`aWS]C2(GE09oI?$KhMfM4oY!@UAb'2Kg!s[d8R#:4:sK_L5Qr
%4/HdArm'K;0Lp!?H#,]SRr84^D-,ZUpo*6h"%CAG@t'%s-2ak>lr53MEWNJ1Q\nFtY_koF+LtetGQ@b5)PBUYs2VD?-huTgqYsr/
%CrQ`-K:&GGm]o<84^uYDJuopiiW>O2T2I1@'6DNiZoK`54'l*@K&I>H>`oJ9<G!lZ"]'s7m\DfV$1kMg2pU:aq7l36iDOdAh$YdW
%apC,cc=^4tf`$A$7Ihs.d1VkL,(ood\IX1#dO"U*YR%BPs*(YfoZ)GnT,dM&3\\>-C,l%*T+fk][21I""^<*LE&f>hOo.&dR!f0N
%1G2/'CYes,]hVaqgIUj?NrQH*jbkqJU[r,UR5&(%KZ^C)U$3"g*ZMFYSLsc5f[>g17R:Y&bT.ZLf4^:@+D!S[D"g&j'7XW]Sm?Gb
%;\-HdY]?4O/ablH)YOaNgT\\#pWSWff@Gu:)nW#\[a75'DM4YI*Gh<hO/nj24gNf0+'3l3Pc>M63IFkpd0j9Q$m.=PiF>`sHO.<"
%`>freq#5tYMbq#ZS\BL)'i>UYn-,k#IRSlb^$Hg/R4hB8]=jL/g2Xm:CBl^r&n.kga"KIm4j[e!nZReulp*p"fQL,6ZO^J^^&V$"
%CQ,hY1f!AHfl5@uDDij/;J0X3WN25oL7_Jm4Z4DhGHoC',/IelY[eWChM_9W>*o4b4k%b$c7u"--JZCaZb&hQOu5M7-A.2DRehHe
%V(N0)LqlpOY]I$oZsodT-V)X_Jf)\-ma:!"qnMi+s+Oi;?FTgf/G_-X29%kokj5]sY.j63r[hKZ[)a%C4UsMC8*.^eJ$+%P2gXEL
%6Kn[i`O?8%ZXJNlOe92'.CcSeT0Ho@%[H9];aMg,0c9qcZ>MAm=Xhmd+5RVh$&:G#bVQ\:\knBq4iHJn+T$fL*7+Mu7"%2:!CU9n
%QrG@r%%AmOcQ)_Rfht#f(Wt2W>?aUgis$?d4+l=)s+l.D7`a)I)dKp&)gbm[Z;hBjo;lfk28b49r)SUecd'rV1=R4W1(G1Jpu$JA
%r7f'XU$4sd0FLm03q]qANXa8sZG5#I5JuQ^f=,*sIEO.)6foJ4!hP$FY?.(%?I<+m]u%!iT)=iGl@QM_BB6VWNs0(Cj(t[uYqqS_
%mus((I=`VWX##slkuQU.`#Zjj(Xos?ENp#(=%AhYIs)<&2E1ZFP+cX,\1k`A=[Lt0?7s1;rGnSMmOp`?l=URq:UXmgEN%iequ>:$
%35Nb-ic7BCRWf+9hH0Nl\XCOBlW3jB<nS@dp]iCMF1KIHIj.sOaAf28Ae*f2_=[ZT3;ap<W1;&l>\&6h'Gn`5=C?^bGX=.)(;mDA
%0NWjqLh/"iQG+o'kpQ2C^QR,6CXDDXJI!dc2k00:OkFi^#H'SG1&c=KY'-Q>H^tS4[2']'TTgeebKR2Hg(`F(@Mg/"#_s[m&37rF
%5t10nW.!gCQd8nc/ucs<(P4>*47$4f],"OYP2m:D-*b+IfhqXf0?-L7"\WSPq/<]h2+I8$f5"=P+0XLn5Ni:t]_7EdgBGJn/Y66I
%.O<M\UAPKF;S1)p#+5Fo2FDrXIUR60KlFTJ2A&@9U3U-6]7gXC`NWA10DZ0r<r_ji$c[c%V%aI/`$5OIhVDTl=:'.$B'nO$:RFJ%
%\UP5*Z3GGb!b5$]f^k"V?iPm%_Eh(Y_i"kVkLX+m1RR]%.u4<SGh3CN_pAL?rF/O:X6pbsRrjRM$nq7h1Qkl"FQ\I,0p.,;BtAqK
%BpfCo&,r'jLJ53<K.R-D)q,C9LG09oR%%"dnL?km5L;\_%I"B8M;P+!<+7suS>o!PrZK?gW/.nr&j4,=SuV@7q$p7<fc:m)AcK\T
%e;?g2Hn.b3@W./i\%5Kr*?bq*W65mQ95kNMJ!.A8:D*eY\]f(#U-M.!$^W(Gd"23N;>;T'n12PoS1"02[N^K0OXBbmrkW3.pj%/i
%l"YRKF*ucJh7^E!`u20@0o_F/b[V=XiO1rb.;jccRPJ1>p2?FI3pK@fr+C.^@'cVFZTA'F/@Bf[dq:]E#qbPMe5)6U)il5^'+IMo
%Woh8:%i6-e$8?[,dt7h^.3[F/!`:-FVl\kU,sa8!a8=FY3`(L*;X!KE`L#+_@V_Y;6$/W!`K^daMS,uY=:>RXJ?^L]83nt61V@36
%Q!K@ck@PqPPTpDq([:frO]^>1$5pIC$W;@Z\B$Wc*oYFtbp$'G/]i5gBHiFQRo#r\8a+%H87SS(=CEnWMh(cGM:(-RBSZQID*5)c
%iGFl;(2e2U%9e_B'][hu%@!55OG#B)1i%/AI"K=7HYBgpN<i$id2.b.DEkd.2&+8F+AOCXM!9R\U9/!b,^)-&YBqh&CVE?T*o9ZO
%>`neB-,qj$bn3iu!fN#:QT=\Vi#dA4$Sh%pMSr[2pc"ET#M!?ij'gKJ7`,jT]`a2Sb^;u/B_LA)`X(GGljFJ/5HO@kD38?DjFVG^
%94/GEo<a4F9l2T^59lYp8(5='p)c(2aKdPP)E>W9LR;iY]XIqmMcC`JMjUcb1L%c&TYm/$,=&%>UkH_*<].:,IE+WT`UL7$)]iKn
%'<Id9!Vo:.>QYZ*3e6aWN@7]j6bp=iS]"@ZO02#^L&r^u_JOAbJt$kFa,4$1FU(H-1"4X#7<hIi.STC*AXU\\*!hrA6kV:<_[N_3
%i3=VP&;3orW/UZl_<9%u$5*,f[*4dP@h4H5T&@/d<kCfS`Im%VanQHB)eoQ2Q,Iq$:-sQ<?oX#-YQRrl]^d(S^^@TW+%b9eEj0Eo
%k:dJtUWip;3&7g2WRSCEn2:N\.L=KBh?@T9i`:f=G*HUF9LJ\dUT.3@*J9g;i]%)C>rAPm*rHKWe_'r<Ju#o9Rh6ug4(auql\sk\
%8`9lRAk$$]Fg7`0m-?$mBPuPHIJ(g9@]hUI\Z:t4==/ck0^BZNp[`ts^Q"^!Am-=L?nP8&_a8<(^P";+KY__r@o,:G&6bXpW&Y2+
%3Q=jR)!<IZ&lp\*?(RENi!lMT43W@\hSOV(Us<tEk<EA[/"Lb(F#Dq0S-,dCMDf;'*_^*]=q9A%7bPa3)3:)+dC@&dBb,,lgQR.n
%OQFa7dWij7S\=0)=A5hU<#>8)X_#X0e9>L;&o"(LRro.G6V0cWl.TRf(qm9TC6<W&?tNYWY^B?8b>/jG&j)NgW"aFOH*NJ<re*LH
%93bpo>+>="oGaBCM)F<IW2;ub,WN6UViHa`ge,4j)"*CqnGS+M-Xke(@hk(T#bM]5Yinc'AINu0b\A;2WZ%:Ra8?jkEpF^n!3C6$
%c8m?jD[`o4E?d`3JJr4=d7@`5,F3AD)^9$"gm+qF`b&gU&bN*1]tcH/I@>1&2pQAE$4KS)90hbPjtn&2>QpcNKJX>kj'+X4f[=+n
%G[^r@_iuu5T4k!^9%Oa3EY(.FGiF.n&na9\$^[_n_3/iF3!iF9N0nC8C8tEI,Vd4*f.Z8&D7BH(eh=@W"dFkAGT.A!(*,L2@Dt.Q
%b<QA1JJ@&%jTLPW"qQF>kQ$0s![FS$<%+.$7WqWU1^Q5kNO_dD%-+RY'C6(\a&s2\ZcBqo$FhiR%&6@0QG4d%W)_@!R.tA3>LIZu
%Rm(G=X8QRMS">8`JWMZg2(f^fJW3R9'7,Cr$5JBQEBNC+E`@bknP7Nd9\JPN7HI`c2LnJ^-Q6kJS6km3Y=#SHh6Br9*q:ZahIs97
%c")T9q#cPf+dG2Ib/diGf5*h"Qf(g@p(*S$<Z/`m,Zs'*1ccCadhi6S$>OZH0V=_0Y__2h./r/V.%E+.B4IS[JO.0^mn*f'QplfD
%9DLn1@3Y#OqN"^);;i//b+Zp-=<buKULW%Fcn_P*G,5mB04_e/`?/@$aq,.g2C_ft&eJ3Pee-E=n:qhl6_.V>R6K]r5<58=s,@/R
%nZX.!;FB?#g<EXq_(8J===I94ns(a)i6/!0nM#\Ar&\CH<0Ogp)jO]*R:&F@:`knc5P[`NYi8P&bJ^KtS2b'_Lf6mG3M]k]Kcb]1
%b,PtAm8=hp_QZS;A.`L:=W1]0_SBeoOJVu%H&9(/O)QCtIqQcpk)!OH=H_<Q`8Ur:G2k;LI#X"JUl&&dCd\tTR[L@P<TBX0%<J>-
%1]ufg^`qRNR/_)>%i[*\j%.)&Z]PG,ak6W$Agg*M($=!JiQWC2*OZZL4+s"Z>ab]=L.$'[![sb+D!0J)Wi6?c1>YoC;-o$OJSGIF
%XE@W!+joX4Q7SWTS2]3O_ejF;V`3ATd.dsN/nEhVe44blKBHFoUZ4SaIb<HOj'U)sY4fn]%uhMW"aJBuCO>@PO8R1.<f'9DIq^;*
%2;#CUSdFX#cE\b?/2/C%>l"pb%JLn&E5GmBQ"rV/3g"Zp_>QO9ATl"&3r%PP*/@$[Acj2U-8^/_8tU0A6Ic4N3d].&+AR\(F=PaV
%;U"f+.Q@.2)"M&a%k;A#n3T_%<sm"@]$VBNdV^*XoeoS=3sWf!mGkW8f%:)u7-!'WKKE#_7\W-&l`IYj???ZQp5ZEdC'U?&SaZ=-
%mcU(!agKFNU\6EiA,5&mdpHEB14T!N=$57&D7'$kg+;u?pr#ff@i7Murg&;d0C3gBRkK,DYM4COS^K_ToT"uZqr-FF.=p#GUF#A<
%q%rqA_tebZ]m.uo6e>l1pp67MQaO`fnR?F?f705p+I<&SMsg;aEVLQ+;*en6^>Ba]#Cj1Cf"->9pY<>MP"*'5]\[Gu2]E_2WU)G?
%eENcKfKSZo)b8`_PJ-JFi-\O.SZQ-k#"FTaDo-/b=7GK-$Z7#/UZ/3+HekG@[bj:&/Rh5s9timWlZCd&RqcP3kEd.Z-c`p?MtRa=
%8Ce;SSd0?sBr#d\ei>oSCcp@fe#a.RmAp0q-=!7Wp`@r<8.E5aC*.8a['r,Ve_]9,@FjW+6/KPGf`/;,GhMo-j2V&BmW!Te]@T4>
%OpJ'3':#<qbBUe^gBSWNe^]`/`cf,G3>f0Z1HiCBNVBE[3(&CP@VP>eEPHp@FP)?4ZLM;#B6P#"o'_-dJPWG=*$:alVo*AI[dg)5
%eD!&6'4?4LC$0/BKGT4`h"66UKu_of*N4/E@+2"[<Be*Cd+d4?61),X]i6u,>4@e[mIZGL4!sk?cX$Q[k4noT43gB+?tt7GVjn-E
%R^FNX,Cdr[J_V;XB=IK*4.UVkpcguWU[0jASNf2_-.S%q>NoDFf]sTI)\2U'rs+1f%2JE^FHXe&73kErg7;T"E3ct9C\Jb$#1(1o
%90OPPO0i=uBgA6C8#LPB1/G'&84Cc6rLE3Pg$'U<dWJO[L2*f\*9*_`NAiq)(tKH%oI1d_A%L8TkVS<.7Z[?.OU:I^=>%3Q14-NL
%KQ?3NBJRdA=<Q?')_&tEIG/uOX2El4pp9r$ZM/kGHO'&LR>md*hI\u`O3'U@%1S![-kH[a/H4rXUXLu\p5_O)oXjE:a.6VF9L"5B
%*G;hkP^i&G?u<K#>3??1eD*n?AKR0V@/D$[gCJ]KnVcg+3kQ[b-Ou0NCn)Jr/p"AYbP>K;Q2L1/2$M5&q*/O?#j]l@>)ANWnZsK`
%KLlBRpp3A.%i-j(b^\mp*V9h&UCE9fhDs_C]+<_3[Cr3daRu]5+NS4*%BK;_M;iGLMeAlET/].R]S[fi76nW<&oLm[eiW,7F;?Ru
%pnnGa?enF=Z/]I(/('kTK^&-eN$3f<WqYNo]@0&MjX3!K`#Jm"`!?hEofIqXnoG`dO3jj*4&:5&qfCLJF-b5Mms,h[DHq-o)Qr_E
%gYILS/<o#Z)q)C8)ZC(ZpsIZ"^\cFg:&IF]mNJ./h`5RmK$!hHY/<VA541R@(L6Xor)F9nk+LB]3MK?FJ`M[:s6fc.2QQiDkl.rH
%\&mp`K.daDMIGKY3i_*QkJ?aCMKm4CAkuj7pXauhA.5t.1UhbbgJ</$]oAS3Dne*(L_8?HmK;JoI5u!9'/5jPjJV"%%a/V"]\hT6
%bcgd?/8g;DG$&<g&-$I>ZNn46a_B^NMJl]h2K!=O*3]'_>OKuqpTCOkn>P3]MDc"BnnJ]"kPpS3^?`+X5HW*fpKkF(;q>CNr43+e
%bk(en^O#ia]:7sIjMOJW=a!OYG?7D*Zg=VT8$0&/[s):6,_\/2oB^E8hjd=e\3$aO\`;?%li8_dB3a,?D"RGp3bGAsrBJHW@1$3T
%hcg;b477!/48g8dKpTKjE-dh`3U4?!E-B=KP>Pt9,rGhsdu5;eLZ5l)f?AB1k+>+d=rn_WkT<]BnVjoV+nE%^p,23F>qfZ!lgbjC
%[4k;(h=Of5fDqTqauUWug"9e!84n=9EIO\?>AkUmgAckp(63@ELlAXc,tD<dK&Ia$7;Ks2K?\R(ASQ5=-XK,pQ>BZiQ+b[-3pn&V
%VW<%EO(EEb"Pj[F67[YO/Oa!Wm"=^g9L7I=QUO*se30('C)`\9$'K*89jF5E[9.b%aGtGN9U)*BBd=^KQL<[)im37!fAq7L1LH9I
%:=N;9%(q<RkE8an+j@Em>i1qel&Q#`,!5>Dr8I;Eh.Qp]>r#JkUhI`!_;N7SNh?0bpS-s^mN2p0T#ZgQMjObj;epHF1<mtc?4"n9
%bn%$#:n`JBK!RO5a-r296SZ+07Q#%OF;7KaDH^K7eHe4,B8m9@2&.q7@;\n3Wg%%Rlo[oY$qN8^I]1\hih.(V`:C`Ba&_f1]7"(A
%c*YNpY4uAgje4Z,Tfe$=C'JsNe;"-iMQ&(tIDJ$?#ML/&9+-/^,W)N-+$<nHoXfnSIJkpE)7gts6*QZkJgd9(R,#^-F:WObGW*;t
%#OHf;_S=Ic+-#dVMpD%FG(4`.AqmAIY_!t4Re*D_rjpk[CF&R%T_1#,Am!sK8@=L?06^1bf+6Tk]lZ7SC='&QXQ-nL4#h\??Q5[f
%-L@k`a*r>;AoWj(%?B5WkTCf."#+\"i26O7fNBLt%@&I1bC9?XY]IrJccr-U2GC5Ckerhdmf(lb/Q75Fd3M(#pLV,(S?B_o=_Xe[
%/(6/TN]KWD5Zu3_rDX.7k]b2T>J60K+B,1i*`Q#3.:FXBN,$l(5jWR.B>])=l@,BNO##s:[9a'">A$cLKB3jnjIhPMgP7[^Y+'_G
%cDK%qe*5Ar03<452C@AhCK`9d<ajDG>7=D54(o--![@>M#6oFPhu9Z5DJZHRBBSO$hJj?BEo'7,%E'fo`N3p`"$&Kg2,uPNYQjJ8
%*Ch'^PJAJVj4BS-FrM8!g^$5U#HR@$pF"JK$V8cBd8/?qrqC83?7JKsq8E6^[4KsF+S7I:`!Q4^ni/.6*h(.BH61](X@L,U0A;e#
%:.nb@L1-?3(4>UA3qlis4[M(/XAD:H!'XsTTFF[4L:hm7^c21T0[I1_E<SP\n"<IRK=1*-=HQOsIgEtNb.!FT]8,^!m8VWHR>/Vr
%LDl5#lc>*GI+39mZ5CVd5-SbNZl-*!pqAOSl^g#M[%r6lq[r)sh1K,d%Qq,UgDm@P^c3B(2Xp#(kLp.GC&IQKHW^:90FGJcARc-E
%oF<fU:4)!ae1rq.=W\.%qr(D*$XS.F4k_N5$Hr#=7Eh6f1Gfo%>3PuRl`V2o:4l=^mBg;ZUqBOhD2$-pIB$j1K!P*kL082F5ICMa
%W/5R6p<Z*<gY=;57*+;coe+CiDdu54o&7:bO),gV7n93m&!LXRAofU:l-`aRn*`^brCh^AHKHV=7B69ZNW*O3*,8\h<IusA9pHm@
%R#/.lEj.97U;Egg2Du&*L5hULk\r1RCW`Kq51eZW7":fZ"m^a=Htm@W=_ZuYp%mF\5C(o-1JMR6p\Ia9KM+L`-051ZL=U'``NcKu
%)?jDl1@no7md=H`H\H[lhufsf,e3Ikoi1GgL;8iT1a`nJ;9T(m,De`M903Y+18tYZY+ia60l0AG6s"eZk;:?d+56't[6]-Z<]O\X
%X).NjG=$^cn?[;d3'6/6fH+U#lGigQrE<RBXU(,uh_.R..,ui)\-oZN3Oq3V(l:5rA4;e<gJc.9#P&QMgtY!XDtS-""%23hDegja
%3U1j1Gc7`RhV(Im(uI@a8[@@7oFq2PVHa&i]q"V6>#!R8s4%COTCr#]V'AqdW-\+<K1=VlE&X,/Y]!enmF*<jT1.#5S!iUf<&GY[
%nuXe]^$S[.INpX8^"8pi`$:VVneWXTSE_OX<<dn;_r`c[K>Q%7g!2,(($(55!gaqfeQ'N1FL*Wm/lT.poSaqXo[?=NHdUg2-8&8E
%Vl6Rc[d2c0rV#3c0U+#3\7coVN^Cc,<E8<LYE.:/KX+T9@&\:VmNPJ_eoe<OY5-N,bCRu,TC0)t_aV=TZ-N#Ve[hC88qG[(Yrh;\
%pc+)YiD-TVpF0["hEC3GT@S$uJKEL\)TjYYU+Yl+N^OWXjl)F*1SPd3o2^\Tm#%Jg$4RPOl4Z4k$9<"+(4TNpQis0VM4aL?jKMSJ
%cp'tZ^^<&\,HJYBWG8!f#K,BJ@A3CK^sj[*msiV?hK7=]5I/pY\Y\Sd"H`-NAn:Fl_eP+>1b9p@e<ou+LMdQdV:Ab9L#%l`I;QlD
%(31b`jG0Y(c0i]&YYcLn-Zt@Wb?#0<BV-@>`;rcf+pP"u\feBsq&m'rf"aNKd,27[51jrX#Gj.'l!(Sc,J4d/li(BGFNr))m9:p,
%\h%Hii'SL8Sk=cJhG&7kW0liZ9d1+SljnDF?>?6^?pXp7bpi0]Ubs*bm@aVVA?N,dmf.G'<]g8^:+DI6$XN5hRU99(?IiSbZ[kEU
%pt',aH2f-mID#'Gq<lNK[PYVe.(T/HIC4QO@;Y>pG`1C*enk';`6AVfkf(6GQ$^PCpVG=>J*WAD-T_hc*juRYrql.rF6`'hZ[)N'
%=L1$`GRTJ[U31tIn*L)41JN2!s*U6M%p/W&lcXSHBmUA>\G@3E25VHJh!7)024E16#K4=-T>"+;&(dtP?giL#=FQ4DhDDu"0R`OF
%rjlP\IeeG&%Y*:g^Wu0.lk"W5*5fX3c0Nnu>O^+kD>a&QI-0CqB`856EZLbjHh$UjmP>&3h0=[Xhd>^k]q!&K9i]/1oO?qgI[D;@
%Y7DC1rU9OI/,XPPrms6h-h2sMr$r?eFD&:*I^Q:LTPdZoB+I+,h"l-iDu!]\mbD0!)36qj[<+/GZ.@asCghL!FoLLsUT4pn03kF%
%hij]#Y@!^pYdAQ?dFG'@-g\2(2:J0+MDlb64[7fYThESq.:'OU@4qQUR_8Fmmtnq4rHhF+mV^471[j2LqotO_fq&('dsb!KFo7:<
%BH4lj>Aa_Mn%Q8=nCK1=kah5um-Emh#/o*oIgf&bp>e$f]3YI+fGkCKaqsirnr'Tdap?8/o<l3!I=)fmLC<S-^R0MUH$<`Vrp2U'
%24BK4^OMh]]!Hb\r^?5BonNnsjk#4B\]l)f^;&td";6t7]7TU.,mR_[3O/I0I_W@?o&/)OjV95:CqO*@hL7:?IK+#>h"uPE6VZHV
%4a8=,Q'73Bs.8%pr1l?$kI@^#0-*0HRpWdImpNE4]nqO&W;Vd$U8?/_?$62Geq8['F3hSfc9BpMk%anuGu^fhe!nNNO&k\Pa#?cU
%T=c-#K(8as]eGX4s0/lC\U4jD>M-Qs`tnBeeTI^#O1*\gIq+m?mj=ZGU5V6b%,Ysqk1<@s44=T3l.3atd[urA[s2b<?I)#L93X1o
%g![adVg""#lULMb,KtWra/@!PEu_:Tk1JgkDp@Fm)\0a>?YhXh5!HuTNk#1[])HEF3VDb+pZD.ZjLPqH41ap;S%Y#Xn@.omP<Brd
%/`4e=:#A%$g=H%s)&2Z(7!!2(dp-tl`mV3U'fs%b]W,?T:Y]7g3")n6`=JH%GP=9XVs^b]Rb+1eN1/5A`tk+&?@RF[SG@F0>;KHT
%R;1#bGAfG#rRL(*Ehk`j2L^%Ma\H0aVO4md\1)?TIr6b,V;KesT!Du!J3Reo]kW"6hV?c!@;=YjGb^^OmQ=fihL0g!]6Wjq9K*dM
%XtMXK5E()+hOj"=Bg,YtI]rS2lJ]eGo#fp9o?#4uI'_A;qPF#SmdsJ"F[@]>T<HRbRqp2CH1P&6p/U_Wag\P;gYRqec1bR_n).hB
%^3uiHT:bS#Cjpd]DD]sP^K>8h^-0-WgtKEiC@:`Ja3EFspec*^mbRVLD^B_^r4_^`Hh7":I5KM[DP)lI+"fYrRogN"(n9<+qeBqn
%nSUHIF*.*@=T#OSF,Z6Zqs^".nSR^aR!s3qEpVrD_8ifBf@m^Rme,Ic+'[NGYr;=6o+O<rr+UFpXS),2b1Ol!;a0nan+jfPX5heb
%a54d3d)YsqZ*>rtbqESmqs`jPS',oTq[*\_+$]Z[G.=Q=nMA5;?HM`B[JlH]$%@)2I&agXApe2b4rPg8SK8R\CjK@T[u\OIID*0K
%Idb7bpZ"om*j:Me>)OJ]\)-K.*aem@S<(G_G'dj!h>#L-nP@9cfQ_bNh&l*%YO.C#UJJV?B>tHg/FJH=:!@N_)-aY`Flh>:`U,2)
%T-*K+M/PTRG""5pm9`FKIeeHScBH0.Q,P%imE-Y35BGrNoG_f3`JpYI=5H>d&$LANID's'4ZEB!b1>#h4'-U?*h?Or4FS,QD;ICc
%%A10lnb-,OlL`3+O&sH0p;'aS4?n8ef!C2p<u9ku[Asg^T'op4qW.A"eMS)t]D?F3q!HVXHb81=DLUooX5CX=?+kQo[BVsDghcS=
%CV-(^-_cIr_[3KcDGJEXOq/6#](;-TR>H^iook61Dg)^=?;B:c4n8OI_tAk0guT4(*V!Rt@-LBBEAB?Ck1[c$S!e%JS_:L(q!1`'
%[@>K\I_<,YUrTYjYH2SI>Q&g0m^5"0ahqnd:Ni=9gQM$&YO/fb^K`kW]lt:GnCjGfc,jWLGrmGg3B)6\Rm*FVs5<%oaeuq:P:mHt
%-71s+Ci<!b5!EdWmOc@tnp'-8f[R<_cGnB#iq2N#C:3J'h>M^89g/EgF>UBDm;>\4ID#>el>*U!A?(">-%9IkqjnSTY:b6q^)g!r
%(r%[f/UbB_pCZ;rreOkE>^nrbCL;SCl[6DV[c5?n]A67)XrmDPI$gLogAWp'FmmNGbsu:0dn='.Xm'IWQM.354FPtVDN>fDSc8=^
%8(5Lg0,/fr`oNKVKcB[#o!9:EApPP:gcp,3]s4k_1k+K@Vc@nMj"%`k@t/q$c-4hVbMASSX*:FReD/:Gbl"g9De>U-D=qLIKAo)d
%p#DO>1V;%mSXG]/pMi%'nDS(,-eA$dHTR#XRHVcYaZ%W5eu^H"qoPm/dGEo9^"K[2m+1OIM\k]cH?3?8/tP3%4M*@mb\#bIHMi%(
%`)4a-?i@VY:JT3mMV5'#h>"-d5DUC'YE$Z,\!Psild*D#3.MO'X36\Yp^A=lVIms;[Ab1PglA"i=$9!o3a(g3K1DuGl.,7YGtN!^
%S#1CUp\3m8`R"#:g[!6S]%L4boQtBO)Ojo64(+4II:\>rlRTED(*9eXad%5>>AII7Yr=0fI"org02D,n\'tP1r,-h>^V,*XR!7Cm
%3T<Qqb)r(J]m_Mq2el#K>[4ok?HoWHM2dqj=F@l'?-2Ea([ami^-7\j(1u1Zb84r$jSI`oT)>1mRo%^$EiG5$bm1bq4oG6=Xa5DN
%m]+N\n%(R6`5Um'ar>cpdA')-A9!1dpNLL=e(lDG^*VeipLllT:KE[5M:[O)oD:VYP-:E,0_=t>)fsWCn".kM4W%r9IGK<2pTCiD
%37iS(HO2lWo?*91hG(`ZnA3AGV/&R[?S6bAh;!DLptF!QG5UK'4?5$3h-9g.]sYGXZ$`US5>L&2^@hKkm?tTT(2r*@^,^?5=aOfA
%p6XB4T%lMW/D-L4&"iL_gg41aFQ_>@lcXLd]RPe_E9FHP3,s.SAo[S5SS.msG?58YX*<;/DCjW2+1@A[ZRZQ!n'*A+mG?RXe`OQi
%rS>Bek3#OPo;qna4+DbOh=gc9m5J8@hlaA2(9ZKIrO.eM5M9CgEZ"Ne4tf#<?T@Cj9Z(KYUM&33i]M)6=^4$PI_<1urp]U/Q+&-1
%95<SAdF.'?-sHK>AnQSWnE\Q2qm-r[]([$5or7hl4uVTmGH^JMHZ8As\"a0eB6TLDcT8\A*iuOb+$FGc:#17HB(Y8Ab>ZaV1Cl]U
%h0Aecqt*kf;4KaOI'g97hgP-?kPh#Bqq(SNQZ'NaEbBZHC?jREWt-/-bMSJ<rPqhao\&7dSaksbCG0lq4l1J?\as?PjhoK0g[@AA
%IKJ(i!p&#tDGBEq]@Q@&'G"8]X^.F2hV*8RiS2g1dX;#c:3U.:l-!.6qXiOZc/u?H[Cu0J?Jb_Om#;j3p2'c[a/,'bl%>HU9:o_*
%nmUnG`le&Q]@U*J:4%A2q<l:eeM"t8O.S?qD4Nf@%sha3=-C\+n<rHDdrO`mjQpXZi\(,*?G+jqG@0]$HhDW#[PRGgmG[DiosN*r
%;hm#q@iqUUlBc^5]j.+t>^<l.]X@b(qSqjk<sp+Abe8>;G457-rl^eCYJo\ZjRpum4&94%:#,dBAnkb6_e7iMDf<=8o3PcEHdgl`
%F8r@io]b,bQ0HD[Dmsq_DS2J<H:>MOqXeP$h5:c_^MgQm>OU`u>'Jl=]J8#b^OLa5ompp"?2sDID1DPhq0Dqaa/Rf4c&[ca]C.t5
%>X,mmWVJ!3JBrVSq.ssIe#VYIX\ZWsHg3D*bONn/c1bG7]B]6n0@?h%pV/7T'(ohrmEY@U.DC3#Fn("KIf93'Gb][uH2V7Mm_.4j
%g@+L4Y-h&k=.c\RI'L8ord+2/l?`L,qMPg]m.`GcAn14aI+[XG=`/0#)r'7.T5V[Hc2H69VE4Wp/39i@h_0*F(2pq>@ZS6ACot?q
%Ha:&kFcUAqb*KM<egA+ImiM.j47)dZc(3D<rRX,X]D[2FJ"4+'IK"!L6hfMA$Ph-/EckmfgY0^4rGRJGbI;\ZM7q0if1Y^MpZU@?
%HgfPakBcUQ$0gf;^"pH0J+(tBrr-R,i:4XkalM0lrG1KS_8^;=]6?V2a1]NSfULaCqOLiG1gV%a>[@6torpC2HjlYCY.rg*hqouo
%a8/LGFo(j,:TsY&Y,d=J;cgGks*#i3[a;gq[Cc<q-'Ko`gd]Nu`Co6jedgFR@'ZPO-9EV+4<^m>065]/89`;riB6bn%+HIC]B:bc
%)@s6o/*!Xi3nsF)FU4@]Y'mOZe*F42\tqo%Pt%%`n*R6"d$N;)!o4'u?@pq#$E$!m`H*6.J,T`!r%ptop6pd+*,CfrnD%DmO_mH.
%g02O,-r'&c#q\*(":[-:BH7rA"B;]YkP3Tu;IcjanDY7/dE4oU"l=WlL7;WE^YfFPk$kd.J)S.Db&1rD^Bc>B]*KoK@3N^0#JGN)
%hOm2'Lpo]5`a?(($bti]g8aLo;ZTT*4G>h;0t4c9F"j]9m=Xf>cJ72a#MlCu]f2B*,iX%qs0/EYV1DX#j!>%.^WCCGPs.!bs7,1c
%cNbj\qku?eTNK0>s.IhjdGF5]*6l__n#oqZpp7Zc%F6UU]_;K:@c.b6dlfW[7Xi[4cbB(I?_]j\?Mm0ur3<]X1\Egie'l#O5#SBL
%nFAj]2^"`bZn]MhC]Zk[$s7lq%ug@cS&V7pFU1GYnusq1P\&*</\LIuVi?0,Mn$HmHC8hC'T*B,HIP.2h!=V(]+DMcMA5jF9F(+j
%@Bt\EGe3Fs+%-bT;5+bd<%O5h&0Pb]4ISYENH8b`5adEbSlfoE/hNb:c'<8?ZcR.\djb)A%Fp0X\fgF!)0@TG]&p_qqeGQ24RT97
%X/<(h^2!N@LXOer+9/m#i[rc<C<#V2HCSbldgK69:jY'peC*.%ipRDAr[pH[oa@5"";Ensi&-oV,VH`]74*a"1R)@)Ot`28J221c
%.;;U-,Ks^%KLZA&A>)=[9MlQj)t9lC9.Mk/+63cI"gs%5NF%/MTbQs!'TGP+1Bh:$]T\hBGV"F/"N-:`85lJaN7Lgt=IX'`XZ%\Z
%Q&m1FQPX70V(DcF9JhiJ8Ui90)k8aNYSk7PkeJm%2)itMk>9=jZ:/=S)5-J_KKb'\JdNb067QFi&[n9N+p5p9'X*:%.XY'U89/F%
%PB[*Sbs;d,j]&+p;D`st9+YqiPCX&o4,'P)]Vn=C+sL-$Pc9O.pO`^p\4O?3:P;O>AjK!CNdXKsfIjf8b0);YSIuON"-]t\NC91W
%QU1.(!*^V6a@IT1Jf;GWN)UZ#X"F`iqEDtHX[EJVKHRp(69,D$)Y;VT@G6<R1h]5&GS]=Ql$U)\O^N&5SpQ<FQm<d^)9>&F+j,`U
%M[8/USKT8UObdGS0B/HM8eM\BgPPt7+en1$A+0R35gTR%i(lfN;J7edFP,*ZVR3Y._4^g=,+/=4bVeo"A_PbPTNDcT;W4`a)9Sng
%/^1lQ@4m1Q&jdjQE?]4';`#g5C0S-K*X/NBGh!FU6cN4MOPE5*+doq"`Kr$Z(foCDXjXYb"so_sCrUf'F4;)#!HeUFVbSRH!+j68
%^uK*f(T8!\+9DTMW=oP"1(tq0c3t#X1BTGu9JK>6^]d77!Hl8O,J8pcUe\"-N7VKM:SfZ6e613A!Hg.mnZLRIFTuMESK[9sPB$N,
%%&q_*'<`A";('8hJ]B87TE6<J+a&N97\(D8:hKbhl9p:R)GhfA*8YTQ;CC%_E%/Z%I'YqXQ?5_*FY_3-\-XSi>)%c`QD(:NBtW=A
%#;d):7Id*T;NN^A5HF9.=<eG_]i<?6.$V(I%7DcO;d%!A37^-P,,g;SSJqp*8oV$J_..2[;ILO2P>KoI#*T@["_#U$:tPj!$_,#&
%nOQE0TV<Vb0)\W!'K>c4k8k=^opuSG/V!n29@6Sg1=-CJHpVg!"#7ZmjAp.s'3+ZrY^0sL8u6C/=3@<J*ln.-m?5Pq1Aa'g>S2(0
%f7:1W1fu,MCp*Z$"]0d8&?L*rlt@PMHr4MF`lA(q9&gr%;!/B8Oi#k7>BpoR9ddRS28U<mc,tj/#_MJuhi'/W_XfLeUVYsn`nkUd
%cj4qiRP,=cjpcJ:K=)kQW4A)@baT.I9%)5?)N$Ip%Q#h<Wt=8OOnk9.`ukt=5@go%3A0a0?is$k%eGE@N5gBW"k'8g&Df.A'2t;-
%,m'$QliVhQ,T'=CBTs)I5`;H@+0P)-f>LEDKi:9?YlOII^>i'hI;C_$!K,FU<`b8XpOSr'Lk>!qS[iG"mnpa&=UO%0g?YpVD[&X`
%12T#fhM#YJo-iakB#nF`D%F'IgJY>kF-s%n(k%I>j@Q,oKICT"YphCq-/N;E/I!W^?F,uC3B9S=%oo)-_@_Em'<4Xl5qo#G-*0M.
%Y_EDc@H:J[16`Ve%j/_*EARSj/nYI;F:s+_iOgjB$\+2]nen2``c:^G`)uC>2+F!$n7LECgK-P,E*2/iX&'Y2M,P=%**o>a16j$X
%,(o^-',j!Q:dHr1#)&S`A.4P&VmBN61(\#N#[o)C1nQ%")]hD@!2pkdJ=r_MThS$+Yag\`^fgocJ:pX*<Cd_N`S@jPHOL+Ed)6^=
%O=;q1JW>;1gTVl16*+<"PghBu=h99#%m#t6isMSOm(B!S]&r!E*"0qegrpO5!sS:4'LT\;"<)g1e\^ruL?]$M#KR"*@nHks3t;eb
%al."'A:ib+$6CJf"#VhAj+0.mL(I,'fM:3%Fjm0e3f+2BmJL#ua1*kCnFCmi"L(@(=O!RoP<p4K8C:HJKa!U5i$/Rk%1Js9;7p]_
%:^)g''4OUbA]k?O"j3MJRO>NH:r@r8T`V'haRDO@b#,uOV5(a-fAKO\CN%SQTWWk0`%7hqFqZei`X5`,)KZ]42MVPN;(Is*H\;6r
%&/#t,%OoOtJ:boKAAoKiS684c5/VCSoL`]A@]k`"k76'*=I`b'73"_H%A%>MC8-BXQt[5f;MOco#/u51RqVlF0<h,U+b>B0Z7X3q
%%eGnee_gs)j*G3)Mi5N\8/n<[Kbea;o4Y2#c6Z*pn5L[Cd4`E-b0[AJ_#+hh/@sqV34=J$('I(C\dl;O+Gol%oHGT5(Z[A;K23nL
%S<HpI5m^#+A[E'Z)jJmS*">LG)l3#,GMClf6cf/W+9aMq#@pQ&ii\.\edN=,Si-j6\Hp#IYOOoV!T[IF9-lA^(`&#&$qlIO!X^c<
%Ig)*SPr9eU!ZHF$/2o8m<.eM_DsIHTT]m8fr%k9./DeBr!_06+J1NCN/8KeP`jlgeN=1h[!SXh-@rYu@In]?4E=FE`@er]i4%<Y^
%&6t-=:m8lHqNV@LBP**eTe)n,0G[JA/+b4n[>!&5o-l5VM+UHW_>'#u&?ba]2pnaqU$1.E>O/ONWtGK+.TFhEfFG0DWMMLTqTUcc
%$!qo&/NXMCOssgQhAQ_(,7neI%Nl(8M,s&F)%&tS+o!ZroH">q/:ipUEmS9u?ZORNcs)&h?qIU[N!i@C_"+oed53VIPXeHsWF\3P
%-;Hl5h&j_m)n*dMC(+J(8MFMI'bm+P3eZCU`jOe<df=XCWbNSlj\T<P<b]NYZa.W&1)]qbp[."h9L98uCbp4XA:S,rK,nLb&""K&
%k96dh@Wo(%6X`5gMBo'eT\q)=fKlLQQ@jXaN&'RiHojLF.]mrPn5E.+X::d8IWUlZ2dRp1)/@Y9BcNHRepgN-92Ip4.mrg6EjU4*
%TWm^4I'UD^78Z8sPijob!"F$"gqD*mP<m^nht,A!23\jO3<R//JbL$4<]idVFWm\b3?"hq@=-2F;GG>NY>E+j'(%QTm_7M3M1la3
%Y\e@n#7+:-2e5h%\q->c1,^aY%rKtT2o61C5,]lu?^=Kp_#:bO@6jbGmX(e'5UV?Cp/6`Mre4dB`-db)cYFG3oS0Jd6G2T_@YMEW
%+F)?)]ek(S*oL_#'?_(-#d$VK.(5=!>(D?Xr0hP=)g:0`?X([ik7k.N0QdKO!CKg'89)W9=#i;LOdeX-Pl67;>8@>lSQX2H1h>r!
%>bR*kLaOl)TP)a:g3?jbAD3)q%E?)D4U@o#Yn2_bep0f[Q^[]`F/ZmV=_)k-N\S.JU-Ce,#R/^O#$>EO8u003A8KHleDCrM22@V;
%57quhXPl_V@C`%&gK-11>:6W=!O'cSg`a\g$FGaJaR)#83eu]S``>;i&W7OKG#hPX?7Zic_L)>`.CRrTTMSP9[('I+dYSg6_,NlW
%Z;*qJ)O-mlF6CLKStR<sA2Pl-b8!Xr&5\)CG)-uumX>WT$VLUPiPeT'B[@k;;d@RH&]KaA*9T%]N#?c\%O[p]KFf]XeeSWY&3>Mn
%Kr$6_Cc6u%7P%"E1]-btr>GH'br-[qU>"ggfL?@n*L6ocioNu<,6SS#+ipO/2a]T'Okog@:l1ckqmQ--#;*iQ3`(\Z0;q-<Be\?M
%<fcJ^OgoO?iDr8NiU4*IEY(``QMM4W$9]fmk$NjpUaJDG%G^_X0p0:Sj"M'\*IDJ)<%((e/GL`;#ptc#gAtrQn3$"0>$3CEJ=9?a
%:.p4>Sd'ugDIrPf1(XX+G;G1faged=q8l@m7EdM0?ZcU^8o%\?&^"KD[!'TS5d0s3%[DRaG4Ra1k]&EV+s_('K!a:sl_+d"CCCCM
%%j*&^[a[;O5\,"f^dhfnPkIf^Jq5*YYR[n=`3gX,8mq/H8!T*W!9'sm8)*WnI5#F<2]g9bjP.6XDLtN'(-:gnlD4>)\3hRr?4#1T
%_`T&je]7(5TN3*h[IW90flPMug8[pMpIJBlKmf)WfGS;QN5C7Pb;+kbmZO$B1?39HOQf6i+@noq@+GU$@X_j_UpV.QdK*,iKEfq;
%UdKc.`!)/3:gEa(2ohU%Yin/#KV0]^nSGbUo8A]$"E#ouclQH!)qVsk%`*@>0e'LW)b*l\XU]_Z.oL=<@(Gc:J\86_>+0nmRA#>j
%63ulfW\(MR*Xtc`qP>/`f=r3+lI'M."o:.k39durl_=J!B\Ks*#lVdJd?q4K-&$=P(FtoI@Ah8tjJkJOKf#`23?%,8@>i=V!=dfh
%b$@]"*.$5InY%8-R+mlI^$nUPF30':&B##P*BP>u4?ta(!5mF):lDm==Vq8JKBABM>*N`lb0cl4cjPS?$SsllriQ,=9$E<PrGI.;
%`eR"t6=?.LN?m;cikdt9g5EIbJBPUqGbT]8"dPlX2P(&N$=JIoM;@%N(dj891)PUT9+g>3Pn!%_13<X;M4h-H;#q%#GDI0h-AGJ:
%r>,laJj+>l)o31,j!.C*0R?MK8m%NM?X=rI[6n9,F[>1S`\9B:1[04?UHN(n->jS0J?5q:6eqChU4(RciNNb$9@4af2AqF*b3`D?
%.\eV>,-A+.)BHpbFM)V"nIDR>6=bo1VOeQ$HO$*3)/^VOWb!UH6uaN3"-FtN^Bk8Jd9rN<a#$AHqpe&9,+'QZR_V1L[W6'6"_e@f
%d@c>qa"o4OF@_Q?f&N_4m];)?q'c/Wm1YO)Uoc>'`l(][$mC]:`b[.\&?3MBDDDq#P&Yf::Dd:JGFCgc2SDGRc@B/lGd(3%P#D%9
%far50MI7o;'+0MV#p#\@*/aX@bS`[a(kScD,5'Wf^nC!J!$c)EJk=?t5d153Q)Xfd.a"bk$K;gLLBYf7moiqU#-A?Z1=0ZY@anb:
%4u[4<.7:(k\$2Qq!K%X?H@^(JP530@DEOFgi6JS9+LIEmB;26J4fC&La@33ce?_IIK*;nQhfU>5o,<:IU1,H#fj[J\`N#S$dKBpk
%B'o-ul^srrVQ'Wu`99M(BLQO-3FWYh`cI6`,-g!p'ZI`k.IfD@*oS?<;0g%0;R7nAOU^Vq!t1_(O"jV;d2r]a_<NI:,dH-c7R[ZQ
%%=2c5^9IRkqTql4gpT^!3=k,X^#l1b@Hk42cBK2&eBM9XZ9_/+4+C9"(b>o(qZMfY1G]#-%<@K0'ZA(e"C5bm8/oF'S+_<,9rrs&
%[#_&!/.Rkc<66u:\>)]Z-Z3sV2'kTq(2Fj)&Rq\`j/)knAcia@o/Y#*e'=?X3'IG45t-K)am_Td)T#U@?ikj>OQ7Ok\-T?d)(Fhu
%9<3.AATR4'c'a'nq8[tq@reU>p5QuhqI9N?KQIB".FFYaNfAH<A-`FVO<Ntc+T\>do3ooGco,cm`O_1iL&c9riB1/O7l`V2AJfe6
%@R3h$#\R"s!U@QHE@VR%<h9IWi^2XJd"B,);g4UY1jguoU(<57l_>R\&rK/6"*&=l4ub<NKBUArm(su%iWg8XhT3PTD1uK[5mdZ=
%0p*=JMR*/Tg-uN_+d+i:MieG++@n7U?'M/\%[3DonW0P:`-Bjc3([%mk2XJZK>*1+;R3Bb8jXgiUP1-j8M7Fn1g5u\`^h`10gL?o
%#/W6jZ-lWcR)&cAipp0Ni#mdu/>N=W!Y2Q&PbWlA%;p3=[LNC5dh#@Jf:*>*fL.Xp(f7gV"WBH'Z))gZeOaRo+]'E2"sBT8a#66r
%732j`FP(+!Nia.%s4.O-!Mra#YUu+"2RcgQd@`1:!.hNXBBMs?>L62/5Xn6W=cH+C\9]hU$h^;X1)V?o$"C^.(Q'udm:*.#`r\Q&
%"ZLeh:`YEj=11MRD'T-uMhKs9b10DMhC;psbTg.8(oBkA8B'gYpf]H.E8e0#91DbJ,/Jf^04A+a?TeIXpn.\I.ugs9!9t!:flXH[
%RBAn#@kP2J`o'VHq'Oue"gIBA0ZXm5@?:6l7Yh)"5C"/5*\`#G[0iq@=>!GSCC#m0L^0KU+(4oq@13_!\e<;2>bT[,7raOH=r%9)
%Kl^fC2m\Ek$rF:<Aed!.`=OLg7Dd%+C15=ngmk\h/pa_W>(UE3N>KCJ/I01..\6L1]Glg^D(sa<^^[II6^_C-/(C<(=t5O%/&eKW
%UA:sVB^$K557_6LX3Jo)NG=&S"cJ_ST`XH5::,^_JMh$W#C[IaWc5.<f_Ak[[iF`YW!W=sd-)*c2&C^J&X($sVD5#'/_.\JWXb&)
%ETAjuLN-<*\-+ZM=VuC?[^4ONk5g6_`CA0A?R%*m!G"Nh0n.-P+>Oes'e".+bS3OX0PdW*O;JRb!cMhL[7lJL.BS'5h#jbdD/59l
%!iUP,(AcO/UZ9us0H8Z/"cUO_KESNqC]L]]ke_b4*/5?pda^%(9hlL9BrMk+8R9g\?t65k>ml*K#ii"W7;\^:>l?h>.W8=DThQdg
%41g>NTVrn$!(J7J;]].gfL0k6jT6:E/0Aj^'@\!J)KZ8r0iU[hc@!KL:LX<]o\!\#^-9L)j)0W)KMfc(erq,i7`cng$P;fO&nmN,
%7VEb'FA/'&?m)]/F(l#ANeormOtI)a9PM@BFK.P3f7Os">+ThEAKd#hS![[@@N2L_'h=4,[e7&uXWFf+L5rSYIIJYrq@Zk?K)=Xi
%$rmVs7a,8i0tCMV!u,lOdP.:jg:7eAra75jlO:&K0nH5ZHnK9/d4e8u#CECC_j$N3Ap6DU<CapS+%mdbjF[IC``5l(28_9q<Ni3T
%L#X@VY7O>PP6LVOE]!Rq.B$;\rO0j&GH+t@gjp'W]AqElM1NGZqOUVj,\@rFOVI(00Op<Q5eiHp9gL;c?GVd;o4X(0&h6uhC[2NB
%'eG1W'8oG\@)9LkI7Ou!=9qLD=eVFS-5Xj702&W/<F#)?`er0RW.IP`Ta=&>$C4)hE\(b"?qGH3gC<%:_*T!hVn@I)Ks;dgoh(t9
%>LV(s1Q)D04pu/5=>!K?DmRH/VHd^FTe<!!KO%hVWrPd$p;]IN`J#bUA=:(B^bBAjci>lN77.lIR-#JJH!sHP'Gut"__Br`qQrR+
%;ddsdCTs2YXDZg7LiJ*AQCN1M#n.rs^?@st_F^+]`="Bf"-8EkC+)*X0G0$IpUZ,S-4Ieh.s0nKZNr8*`O6b=*Pu%u,#JZ24r_p6
%#`PIZ3Jc?BkSjdM9S_S%1/l]4d!4Q'%2o`1GVu!.[:0,)hjU5uNVOY[!sZ5/:#3?O-h3;cFb]1]bWUc:[8\b17ck8(YQ_46eE"Te
%mQk\KP0q77%_!"+:Q,l<PTDoGfJm0lO2.tH^bA6832\H'W6Sh=)ajPD!uPNPbY!LV$;GOk0Et)b(M\XN\t:qL3JG@glr;2hM3C%i
%/`SBC8b'$S;oQkB_*a`0JOf*Z&nfQH-.2rp.#\2Fa_nEGm3\0T>Bq&EO"jkp^bBn>k->V%W%:ku\]b9lV3(r6&&Pi-XIR^nKeSW9
%/!RjeYTcZDJebNC7!@B.2SK7<)P9Zu@Hb&E3iJ;-223S2f>Y=1W')A6b6V^BgOsa/?n`O8)2'o),Ie0#<#UK$5*Kl%j7%KsR4iWn
%MrM"\Hp)OV4]qYZqo;V:&t?UM6NhMb3\#_$.IC<Z0JnId0YugtBm^RPYm.(1LmcI*lIqT!-F5$W:GU.heUA'l,k0hFAg+UMYH!@^
%jXhn0oJ)L0V@G$b@g;+B9qZ:-)U/`e@*(hLP/^uM8uhhJAh(*^.)5j'IKm\Q=dfCg#)@n'>gJ5+L3!gI.Tc]VL#cF70[5LMr"\?V
%bZH;[#%\D<fjcc+FZd+JDEsY0&qUcBO'ug2Rn(<#Vdb09'!m]S:bF)hklL>U`]"t<XNms=VW9'2XqQK`>SgtRA;7pqe2Sp3lUKq,
%e/4WJ>hH8GVi/BYnNE<d)jWI?`l$Joe,eq5!u=HEgD6Q#j/ENmhYGA)=ANq..,8):C:%)HcdLKs)N!UMN7gV1/:oqH?B-b8</CT%
%QuC<9fo<itS.m\74(;Y>nJQ.`E,[8g\CG?s4\QWOaW$24^SHj9`%rL*?%S,hg$'oR?q(gG,^s1?_!D7N3QNK*\6Q`VK_5X1'2<Iu
%,U/<Wdr(VmU&6S+HRU=-K:NfN$9&p/L9iV6-.Y7O&QB)&!V<P_"j27P4\+g$^sGiOb'.;!@n'5[3Xi)?(D9GZ0Ap!X=dBP=%Df/6
%c8)bl7t$A#jn3iB$XPO//Y&Y86d3@].I<mcfp!ip'0MG/gMLC._\YlF1FB+D\eI'53F(8B-T7/$,BGO=fi4:gRKQ`daW>>b2kb&:
%@#?b-9*=bfrRbpoHDIKBJ;C%*bW=oFHG4n6Bja]1K$RH4'e9Z01"%?@H,*a_"76X%3Ketd(Vla4`\G.mdA!LnE6JP;Ks!(UjEUp!
%lPj^Uro.B&_SPdW<3QE6FgnUF'l^]UB=8ANo&8NV*XujlYe-EE->%<1*?e10V6GMjL@&Z)g&5)2rftbnWaS["/3kf2#',6FAP\l^
%(VhA=a)"f9>+O;J?d.=\j8^t]Z!"I]H,kD?@+(KciKPghAu?UB]552>md4_Z__?eb"_$S%9]@dkLn5QRB'3R\VX;T2gE'!<:]8YP
%7rcG_-38]4@5P<A.!LROa5-bapG0-\k8nM$)!l/WKM3fG[R6i"ShN/cPh7GtD1bS(Am:LmgPb,6`UaFnb:R0?AJ7Ctc=>1O#Z(p8
%`on:=T!l?RPL!aK9JYdJ1C643K5,`XJXQrgfo/F8RAN>o<5[hi`-Dd'<BE-.#XcpWZV4b>fHbg&P/esb.u/_t!;!hl>j#M$4YEfW
%"?d#h0Gekn:4^CTR8KJ9b+."E.d'Qnjf$mQ^D(682h8g1&"8ojWMrm:=9tis_D6KBS0Oc0Je`6Y0$A7T_h>=aPR^rRp@E7+4ES'=
%Gi1@qS828Z+bRA)[gL?/V)dQE0[.k$SRMb\BTgDT?9#\t!1SW`ZR6T"";a^0IW.Le&(':`KoDL?-G0/4Z"q:eQ^_7s.$5)#_V3BL
%T#8eMGJTFcbjd)3m@'9UR.k+NHiXnP1HD=B)b`e+<4T70gcD.HDD`F\4;05_[`S[\rSF?#iPoY6W(._[[ZY*nR/_f!?GKt=Lgq&'
%!=YPhl[f>n@_'/4eA1"ggh&NJERM@_klA/7_(Z.e*GAhBPZg$Na&'beZ?]g$#snjV+_#'('hVF\4Xbk!rl9YTi\Wq,YsM)Gga[5.
%RBD4*%8n^SPR0tK]EqspCm^WIU(I#h8!E?S-T9hsV5\gc1s)Q?qq:?Y7DjqX\Nsi&0uH[S$unFn_'UHt8K1^I*TtA`*bjX+SI@;-
%;q)Xarm@f--:92INO"jgKKH5fic.ah"VnP(Z_*"IOq:\Q?A7$1/YoWrP?d33Ah04fRUqOh^Y7TGP:8n@:p+.\f^oQ/4;>lllAoRW
%#k#EDS`Lp!]o!E-RcGPbRq'm##]#[4]HghiF;6p@.a<M9>..g``aVhN1]l=*%!cSqB\>-'mj#?7$0%Cf"dh-"5&,YBpQC7P"iCch
%;q4iE5nsfAL/OY#,^hiV4Dg+;/'nqg.?;Bd!#Ajb>.B5MmF%5?%7tMq++Ws:Un(Hc=4d]oRA-ca,d\"7$A-u;[Epf;i6V``JLi-?
%GQ8M$^lAFo)p_P%W+uV#qH0U!@MKk6pH\s5i6V`8)d`UVfEN.^9>p1W<06-M^$Ps3q=;r(!Lh1O@LUfOU^GA3@%u$SY<m<8rE7Z#
%i/4<SP>,]=g;C"d!"RJ86J1H9RBod?oc&'$YmAZF9rsbPb:GD=aSGFne(/SFf0qFa$=1jS6pR5HA<)GQEAM<P&Ro>g5F5Z/W!uK0
%Z\o[@`(f[*A8HQ(AdI,+lnlJ5R=/uoeC#%f/k!GlSlQIuLLPuM^7UedA1:!(C$SUc3CY/+,T-c)DBK2)Btu#(F,1$`A_je.Q2@6!
%[+a`?`:WLLd0S'/:%1Ed/CQ#"EiDMO*98"AE11Trhb!2)a(_soeqi(c$.Fm$M30#6J6R:Yf,MH+j_.f6;,C/XEJ+g<-=dD:mt117
%X!u:R@L<4cN1d(?7j410*JJ0gG*KgWhN@UDk<[r:<_/W!r\3plX*p@]<77XAf,#q!2Q/<#4sG67VK%sano6uU82N(S?W[Bn!,Niq
%MA]jdW)k\k(nhYhV%M^dY-OF?R@uY;95@UhL'^@Y_^j[96mPT_TH]5j5G*cH_EfYL%X,BRJ747qO,PbQ7^0sB]IkQ4Adj'VUr)_a
%ikBU&,!nse;@^k_P![f6,afjE4eg<$,ahgcAZmN+EfpD\7qU.<QBXe]$+MTba^ld[YUh@TJ:1ae.?Ot0kTGlN$!OLA90Mm78]JS[
%U>CJ,n]4rSDs;;+67>K%$ICI;M:dGb<Dj,.q+2ap&sNe-VO,S+O)3VcQZV.aPQ6[tmXp6)ii2T_]?)?JKh.N+'VIWaaco8:HFTme
%!LPhQF&sO[6m^;rgh+n09I9"!jk@siPH#=+Bs(>DFNI.`5iFBp0M+g4c(G+/!4+P\R$'dVO.$V8ZNC#WV&Ye4/;8&)S5_E">!p1U
%L?'nJ`r+f7AM*krFaL?sU8E`tr7!]tED)@$P-hWi.9L8^_5)$#%h%_)[g3.k<5:dClfYd\8muZ^*^MR0F]C/8Jj`?NjgloM(?AJ^
%9:bma.Vu8hqJ^j_<IIkII9"fdgpF!K?r.NcQX_\&@;tFnb`Pt]L*RKJ;#t#4G9nu89q7`j7Q#D?gf8FI^Oa!^Ima0MOK/")25_oe
%X+K!H8FS`cKdM&%=*tms(I]tsmX3On<\mk&@/goFF2f_=0pcRR;N<]I`H[\!*g.)0eZ'$biOt`oUGubrRKi.]ZW.T6'HWO;oDn\I
%\3PM+j$An5Q7E,k!mY;"raVl;DhX5;/!=]1X-rESFgps\douL8`"5?NN1-M,bd0,ImQ:XWE56W_)<L'NOW_K%JkL1!$!)+Tc%5'?
%5]V,i(tT`EpteWm[!`b(PaFi!$eeel#:*<Pe!2G6kFjLKRtJ<6APlOZUG[2Ee5]H!01T:olBTc.,jnUc:!ZZ%b2?+2.bDX3't<e&
%Sp8dF<L:+1OOVc[;cc\!rtO`rR*^A-3p!?aHFtpq01T:K*4j1r1<S"&TroXFSPPGBA$1aDn>r%YB!.T5/q:@G"M@/qfW_^+*7T/g
%mh]53%c7*C57?^nBrHmmYD%XqHgT?*s%*EIm`r.M_1<P.N+'YLe83@aR=fb],raLo.GQDg=H5UL3[gd*c3cRmngO$1.PWCV@jYi_
%oPc=kY]4Y[:-6\TA6#eORY603'!=/Grb3;f-%ooVOCN#E*T4aB%LB7i*m;[t4?SE+a[3rk`nm8C#P#*?<CO,L$e?k2X.m?I$_%"9
%fGs4B,;2/R:Qi5d`.`0G;IL^`n:`?3,OW18M7aNDPui$.c!<2NrDU36%qJ;V^"#.2.^pEK/^9rM$M\)?96&1eX>1E(]rU:uR_/PV
%gi\e5Fp]XPMFb_?*reJ[GF@I,+t;<i__D@f;%ae'WYu?S3=gQ.7,e@o,P.8/UflkseHApbc[J([1ZpqKk'"!LHNdSRaBeledSs%6
%"aiW&V=;PLoX`T><O5cO?N53BEdO`2A@5dD4B8@a<Rb&AK]bofFj@0?W]:TFeQJe-Mq'BP:LgX`Ur13:j;dg9HB@h.hCJp#rUHMf
%_KKJZ6Kl")E6Gmj#U?nLj."hq.UKh5@m'D+h;dV*,nqELLaS"TE%;G,]Xh*R2qkc..c?t]F)=S.Oh5jUrCG/Vbi.8I("lo&?ujN8
%2)!Ror"G5C(uB[ok8PY``3DDV<LSOI4n0B!Q&"nt;S4EcPqSp7%LP3t7TcB/N@3_Fb[-7.g,?+eX(JQmOhH-inK;!%%k(4&LZMO<
%N3"M-Xcs+;@iHqPLO/7uG:1\S@E(4..BKDNR_o%Q'NSf_j&,QLjNL0-fE*G8;9A=])hiJpV6Dh9c[VZfn3r%dlc6U371Zlu0]#8c
%dT]Vu67UodOS'`uj.[#pajjF*3iL.]\4H@N]e"K6D.RZ_aS@YqJi>TK(`moK48_ETC^?"KDWTKn^qXn-W.So8<cGCq8dj^F-dS$i
%nl2*a<)uIKH9p%l:.nEKS5<-c9jKW!rHkKDYg!fQ4'T1=`c<\@3]gn&(GQrI6"k@:7QHoqQThs)V)5,P\8@koaH>5c&)_DV4t*3.
%^8TDR1L8L-LE>!i?Mc'u@qH7Se&\dq`h+E"AS=V45nOk$`GjEH0C#LHX6-RR]7+8X)GhW!l;stI<2F5-&6g"Yrj7SElB',V_.j2O
%XVi[sWs<J-$]SO&:2WXJ`3c0i[Tl:ZiJjuhgrdN<7kn?EfubE:;?7#VSF9Do(6'45KO:WF%Za!O1asZh.c#ekcV5HY=NuuC3ChZ7
%a.IOXK#D>B?(e>CUEu_=!"M"=.&6pY+R2ie`cDka%/i1BH!T49$8m%Xgf8FIj`4G]>_OG[ZqceD\I'Bqj^CmRY'O5Ep8`^r6@Re%
%$>6*:95q.9<O4$VhjhJs"81iLWt;R<W-ed8'e3Pk9a-5M^_apqB001gB!7Z:CA.L`fk^(^Kq&?JW]X:\>#j'Q8q]Ft>_OtRfVNBs
%e1=Y,=Nt<AaC=u;On7^d<-Zm;[Lr#X]P3B78%]o6Ch/>4e&ji!g7_Pg@EjM@1)HNe_Z$LN44[61&[L>k9B!OMNeo#RP(XTMa!s%s
%jQCgQrc]0geR9^\/(Ufs1VIljp<&?C*.%j.85het(%;C3f@dfY21*m?<O::qb[(BX]"A5JW]X:\>#j'Q8q]FT96V]mX$_/J(9:U)
%+3.jRpWNdd'jMk&&n#[0GQ7tMKa21RUDJ!&pcjT6l8uq"p8cm8T6#E4-ta-2@o3\G!XXVt[(m(Z[Cr5h$M]2]=\3]\^llA6(6jqX
%ZH>M:<PY%+lY,0_NWdO)264P>;61HLd,7e]d+-;3\oK+dHmr+YV#:mHl-J^L',S'[>3g)aFk+uaq.J/2)+csd3)<hRc4j)V!!aba
%PYmHIPjsS84Y_@fqZiB(pGI*De5]H!Y=Dkb8"?TRf#=GB8Bcrp<re"$Q'G4,?5.N:)C\gg*7\4o9jKW!rL9adkgeB?cq_m>Q,5Pj
%<k/aBb[5NWO2$JV9.nE><I*:gmH^dOX/<%,O1J_Z72!N$o3.L8C1ILM.tGNcafLGAoRaG&`ULU`9C^J<k_4i#el>XM9jO)-WF=-Q
%(,kSFF2D]SmIq!k/-kYBnXkMer><0Y;H`FA6H4U?I,+15;AKju#H)Q<f*#+IgOr'ZOX`_&H'A>2lI[P>=V2Bf<lV\Y$abpNj28'F
%a=(#_p<!;HRJ!uapFkXT3o8n0h'oCg8.mT]F4;LYN0i+W4EUg@aAG58(%B1==!C%#nP5UC\n^N1WU&G:?#c\,NNrXk[9oai<G>U$
%`)aa,5OUYd1GK^[.T2.(-.pfh<c_Bf@D<k=SNGLIi$b`P*[e<cIi^65T8mUE/lN&OY8e#Z3L9j:7gO(D]C1mgd(&SFp+gC^X8/s]
%^L&JH!/W5GmEqF>a>nS<8APHGTV8q5'N"m<N#er)?70$(!r.&J5a-%]-_/a-=Dq^I@lTPUO[M;\;O<J#MH,eM!]8u:TSNsM@]2q0
%fUK%CX/<%g\n^L[2)DB-W?Qo.'Wo[q%aE3)UU8g04kJP',(LHg;1j&<@XW:0dcI2iheLoP-EilN/jJodYt1S#/Pf](]bci5BH7:.
%'bjOH?^0k-(6MXqS;CI6=&!!YH2S,lbK%?M/^R>OU=SDZ09D9JpMB>'(qf"D@7;2sEucQ95_fa**8b=]<59;=K1&0YWHG_>#&>-Y
%BoiTD+sI55\A7VLP#pio$Wnl,U]S7Qo$Y>&N7L$p9jT]&e`<"IiBhrCd,@;(Wn-.a[QorY'co9/<KRG@3(J1,)<L'NE?LQ2HN%X'
%JMd\`*;J9/+H[!EZkP/i=*a"4AY<4-8-OB,jHT^:.ogjp?;4``H.D!KY9C*^!Z,TUJH?XN:elQl9di/#/?m<N<M6T'6Ht5V,1;-*
%71ttb-W11g.h?Eo.#i)68Phq]*#*EG7\qq>EFn;2\Ln'hCKlr0M^\[%9k[O825gH9S6ADcs3i0D"bRm"=6JSZTTBNUJp:,4!pj`C
%)7N$:$h?pLW`cQ<_-42CeQ@o(0Jk'jU-N$_aG>F;=WjmJ%Tt80U]S7q-'!%l)7M]ZjAhCF9j[iNnuAoZQ/WB)dS>>l0C7"1k+HCn
%&]71Tk,OiMB!1$X\P=p/c;71IBq6O#C]kJCka2Kl.h?FjM)-%'LIj?C'QU?q\3rdm;'VZhF=.!uKJSajp.]9'qooGKp7D46eI1S1
%dmP#).o<n\nd8@"J>@c@.c?6D/l96'`04-FkH2:qk,t/brXIZE[k@ubC;3YfWm\4'LolU=cZ>VGh7L<.h<RtANis>%B!@`?/s3ue
%L^k@CP1sh!G5gqH>jr6[qr9nVcBU%jZ5-aP*FH>n$;i&r(NH;ldi)='NER)re>1ln^dLRo8fGLI*)%"]ED>92j_5kQE*,Z-)EBf&
%EC6+,)%>!2_YhEnao74TE>ouPW5(TWk+_:Kf'qj)(]'l=):a^iAX&r7ou&7[qZn6_3a*qk8skKFV2$/S;Yr68`MiKArj*B8+.u<!
%W$kNS89,mi\Fl"!81oO9FI!Y>!FHPc.7GGGN0ln/o3BO]2:'f8B;92G2-?X+;AP*kZ_Cou_Dsr`d!*[@j)]nWiWU6(NHRI.c#Ybg
%eN?q)SD2&,cI@s/A>B?"SFpVJcOb!U?jbE$@j-^l=:U+?r3YcEc:3&uTmEEheG=.3Ijs@,hUGnmn4F\(TdNT>T%G\5W=H@ce-g=^
%U33QF8dZXM[Dkl8E4ui`0#Roc)rDPo2^f^M@2Ar^rR,p^-KF6;c'UmsqNG5#BZ@iuIVm/Q4Cot3/,Ne(_C+M?XFtK\]9<q4.237:
%_31b1l!<#MF(Z.?9q4qncr6Vu2G?Hb`.bi:F/B2Z0s%(u8&>b%4hM_I`.TCmpg:SO.lmcnBVU.cKE[/4/=!)XE<8MQ'Xh14pI]FV
%SMA9)XVSEN45+k[dMSLKq!aN&S2iHYG/9j)<Vf=);:Q#nV-?p,K(4K;=[MVDpM$E:0'oU@[,B4dOqC>@4d79-kgis3ji]scic-TN
%M^b)C,>qeKeUeO0VRi5]C9">6:/N&=*ZN?3UX4P(N)mu.oP1-;#^(@(R),e@)G`Ks"saMf(CRG+!q.R*N%sUZM:_"sb!%K/,m<nJ
%d=R0?X"t?7U\Tj<%O)sZlY=Jf^RFLAd;`-4b(#B:]UPFBBrKA_[9a9dIXq!J5FgZ^>h4hlpB:fF5,Xki'[%n"7eDjZ%1d5SV.&I'
%O"_X&\<9O$cDrt/k.H1+k?/&#+tSU]Ykj;.7[+V4U(pPLD9tWi&OoOe;kNaSKn/7mLfTgd&qCMA8540*BuEHWnd\'<bq[D;i,3'4
%g-IPER-#]+%sQ+sfh*hQs'N<I93Q0o6U_o"/%B,`^kbR@.aPY9/,H3W8'c<$Rt-cgOPu,H3F&kb7(>L+,cXJ[Y<<Wn6?_UbML$HC
%611g^I\qW(.4#.q/5lm(PU$F1m):[Y.+oK.^e.Xqds#]-Ce](1g!sX-gQERW$/Ucg$Z9+)OVXH&I2(1IFsF'LHk\C<<oJcO6apl'
%g#prQ.!!alZ-/KoQ5uC[C*1F0RdKBj^0cofS6si8Q_@]TpWK.fo5&LdSe7+VbEeB@:;<l$TUGEdQ0hh:fd`V4c$D85eZAMkB0GRK
%74!p)<cH8<R:(#VAB4%>^OF9*`--LO*.e_+&/Vgrr'aDkop2gkUp/*(8QZk#0713uQ:6H?Og#pN>(?F%&<1\1)#4U$XJrGL#6K=l
%6'KR?<XpDqoO>EdAHe<M_>EEB`"g``K!$,6<D"Np'H?k$>6X]5TWB%=6EO3e2='A&?B4=4kWI$cl:9d:/thXV@)g/&bdhY+LJu+-
%`1/!gg]`"de<o#WV8/A;E\hCdN!OM@W&W58IFBYtpRK1@0k3\8&L4p7?RfbPgu4>,=!C/V"rpd4L:(0Ab.*:s]P@#;am4>cFGq/!
%/CC5JYl[S;.Ng/RdA8)7<g,Y>;$o?c,4aMZnR-9L%epD+Cp;F\P+9DT"4+2!FQ"2uC*6SPEAb_c'_`7B\OJL03P#G.j1u-T:nY9G
%+b\u0a8jJDc(KSbn:E2fWFZd%O\+uB(?e:.ho=TX1+m>u[&1CWVn%-:gD"m5f,Kc^6kdl;"tM&(K0X-WBk%cOhD4u\JUYXmMIQ3T
%k-VR[EmMpMGl0$>WW*fHY!*E0B"=Al/rA[&.RAt2Q/sPe,mAX\#nh6pFb.kJd*O%8"n%:7))<S!LO<-#mQ"D[02I\-`TmA!DRl4u
%C7;2;mS[`DbXA;Xk]&`o:QB$6<@*L3d_YW)&0<,Q_M_P`K65@n"'NfH-b2/;OFm$n<+-TN'J'rieqjunR7K17KfG)*YY*(h74B9+
%(B/I60f161'OIc[ICc*,+"<m0'(;W/1h(Ik%NY_)2Sl`-;R@15*0jR!gjY;;Tc=M731&*X5rWR7g&^'!i)dneL]%Q(@:;j0N;'[H
%81PEh?$S;D]mA2/8+#iZJ/r@Jb=NP<brOXt,T^BS$4L&b6Q,%Ui.X.mY_7&hU3K=ODDR)<j/j0e-6(?p.5<9X8uFlE!OY&0d*epI
%f?@5N=3Xtd&PJ>P<e@&$bM?1GkQVI2<X>"+@23HP^q'(h4H>G_[f<(Y-5"^l9%4C>^Pj37=@Ig!CXoLdZdqS/>?ZPKWaq^/S@2Ci
%XT5a;AMpNiKQ?^:GY8B+09_?>_5\`_;(k2FE8mmtAkcMfERi!M!Q=(>D@Eu\E&T^4(Gh<A,beHh%6V7W'"k(ook'K!]f(gZmaORW
%LggN@_Oi#i2N>DHM%hD8$;Js.bBNXdW'<^@.8MpLWD)N:i1T8\6jIBU7%)I8dIrZo[")%.I/c;;Y(7K/)=_fD*@h.B4XEoQ[okQ1
%8]2iVbX=oUWD(=5.D2PIR_g_:_PLd?9P&dg!gE^918YtQ@+]\=;'fIZanB2se_Dj9>&RM-V%S$>kK,F^6Q/[+0*O"b>BS.YUf]CH
%G'nIN]u[.pRU9iZX`rcSV6J)u1,7Y66PUsLV[ZP]`isj_1KX'Tp#U;S&C?SBgA!/61e%_K!,[F'\Jeb6L*`?_AL?V'@ACeCBu4#;
%i$d)MO.+IG'1T/_k(!Z$<kuM6jG>DKhN2m&("DmSEqFrs9?2WQ@ea8R9j0DgeYMkV+K^7]1Qc[QA)]Ks;+A`&"H>5_8V"69P^sTb
%U%J!j."(bOr'dTD1`>i+1_#md7(F?r8b!ufPmeA\UeXaf.BKDNbP+u!32'3>BU,Ku&>h9nRct$5)4lb=aZ>`bMR7LDN_3hTQ,Ejn
%0]BNG<No%n0[p32pWLsBdLI_R;,S9(?)r`<\(9@2n)7<?cNKK7\DW>S=>f01+pU2m$4<b_08dF3.YpJl*][Q5=3Y&/Hi8<DX'j_[
%s6hd6,%MB$5oVTd0Mt/R9K;-YgDV-uld;"q#73722k1U(f.?dugH3.d8WMkl^C0abQkt<\2Tai@*i7m*L'AT,Mpp.[E/SOoFGFBX
%r80R[Z`5dd3ccWpWd<0iN>5!ZmnQASeP(HJ+u1nt7&p7=W(P24hInpAVlU'j&\"&bq8YsBhi_=GIu^c.:EPj@6&+I`pM56T+J7`D
%?iKcX.t8B4454CnddlY[d8$o2D1%TZ8L9k@a=$/I!*:#,pWEE[?bY2'>g`k<n:_s2Br5UW#Thc,U0eh0r'^BGVloE>l^1[k:MR=G
%^tT",a84j\9Y?DU3l^L<6`ae.cb)tYn+!e:1MVuSW`)_o.t.(IHoZslc<b01_Y@Sf0tt@-Hmo:a?^/MKG2WAAV3O'4d^H1Y*i*#Q
%j90IJ_L[^R?3l%a(HI%JR!g`3gi4I_ARPG7qdm03EH5rDoXPWm^S,YqWUh4BgFkpQ+ne_Abql?+%>7^6>6@!%LD>USf.aDdepP@>
%6#EBQ!I')5XS$BOV-V78LF/4^pRrV:2J:YsllH1N\$e3P(D%J>O>]*CPu^;PF/2E>V/[&WDP.Rf`h"K!2NUubQbMj>lr,5:n3UbN
%4U^63llaC6>,%NnSJhUP"[u*LVV`EYGO&"ZOriU>X@6rFfB<?Ra]P5N[_Nm*"DhB0#D&ehK*m([\qbjW^gl:Wn6VLUrA+)n=48m5
%YpDfA!!W^2A&+522E`?r+T1n#q%G`9?A`:0:fXP<\=)ZnL<goQ]RBDJe>c:Pf:=u9"7Qa&m\QMHW*0L;@]B7S:2&bf1\,#8db:Yb
%Tqt$n&_q?LpjQpr?GMbm>oG&6D<@1>+Q00?*U%`Zi0E7E<X(g_^a(Ae)]"!dF=a6Be.q8:BNEbJZ#QG>(+rn)LH28$Jj4=HF#%3/
%ppm9abW4f*F7'R`\QupJ!M6qZkb@&h9o'[6+G^_N#<Uq:N\tOA?5lo<KV]JVl8$'hJq*(dJKM.hKJT<dj]pP'L:r+snZj)oKg"q1
%KsGa-\+!qh5J=&@O[!oJ\bB4<g6G2g[;;sphaiN2C='f)Uk@S^$Kko6;4#b(#pS.FlW22IauU%cT#"Rge#XMU(GuAPpj>TJ1p`3F
%`uWdgMKQD&:A[.LC2r.$<@RYZ`kIDR"eq`U:RYAL]CLqM74(LcEZ2-qHrKA.Csr(6GCL*X2n*SGaMp3N\N9u9eknK&W]Vse](YQl
%9(/o$mAmj'=W9cHHB9\lJV#0Jo)SQU&`,_0rPRM?F;W+Ea[lL$SiTY]D%OB!c&#;6P2$mK0nJf\%=S(*#pmFXDLWeKC\)po)3_o3
%kEWm$\[c;S2s)+:@aMWZPTj=q$neM%.e)YM?>p@VaU1]?IF(;0jbjIA)h)h+_XG@I3-VGF>b&L96CQj=V;:-Ii)_>bgk*)U=jAVE
%<iA!ZGb^1<o^I6_V.mS#o@hE(o:`QPIhKX.j-L/"&83BjU15U85;A4OgObo@BiKam0P/UO[89i7;i-2qS:ef!+@YHQkHSmigicj8
%()Ns<ZJ*F'cPf<[%\jcY*+P!`G6i7K46bB".cI6h`LOfrSH6c[:e21`!0(+EX!_<c4DucNQos`G@.*dN*06M#c8"K'JoaR/!5bgn
%Z[t?cEJc*.dHhDM.h#^sLY*GK1F!"?U+1[+EF0][_CBDeq\-\cqaT@j$PpK3@2;DmCN94,;^Vj"i3)jCnI^[(8fVclOYRa2b-@(;
%%aJQE3sJ!^5c5ER+DY1nRV7(V$9UFq`)0p+Rr.8#XWCaWYQL8B@<b@L%H(k1j9tptD@Z*>#MJU*=He#S(2&>@FO/,20*c](%e<-;
%,koFal.2oYV^PH)\3`/$Ub4ZC+/?oG:Ej7_h+*10kChWGY9`V?8p#W/<6RE(ZF*93DSH:8-gtO1ZkJ]apr#L+4j!)Pi:^s1RK&:b
%s&>$qp@oNqG<n>-Oq8$knDsL2>nN>9.dGAYLSuIK>7G\nF/Tgb[)2+]o=fo^PC$)LTGDaK@VRX*mRjT%MG2$UoN:\!mWc>`5l9WX
%V1\OV4AZHt9CXX3(SnpHg.@E)(N8FiZud@r1<D),KtGgioH9qN\T$q]"_kk&`S6'q3Wc78_c`@39J.[D_#k)7;,m/+Ca!5$'iq(5
%)'S"(R;q*o"5mDN"!Rai&SEh.9s=4M+GVXS\bo4K*R2:bS^p**(48Fgf$^>qYduHcG]#:pj/iJkGKU2PjiKND3V*.FjJ,OHgYM^Z
%%ng=IZ+<2CX<,Ui7%Bl*4O81qKfV0Wb:=:1:n70+d%p-E6?\peV1c[k-'d4r$I('tR"VmJ=='^S$+h((7.qo96rYqW,tW^sP;Tkt
%W1Vu4qjju&CT'd%mZPB-7-q%\9*,clUjIrP^3W[<7Dk#O?0!7b,QA-?4pNC;,:4<-eJ,M*daJQ4c2qs!N==m35_nQDj"nsh3X-UW
%N^;:_MhA.GnSBucldi\r%_$[lVJs`2ZJ,P3WY3V9fG=*X9j!:[A8jlTm*aU@ZW]s[gag94S[jOo!]rDab2Bn3(V8hcS7`%DR[H4n
%4M&oK>=gO4(j$1t6_M=mU.[5RZ>qH4/YY\N-'dD`l>jh'm[2RNKF:2.^qG-beAKn<oRjMK-sb8c?3V!hmK\SSBQY1ceZjHTH&7Lp
%D:5cX^u/Lpd;s_U,2BtQ;SoJpUZP^3H<>=/ggfblo(%b2W71a:9)pWI(8LuCnu6sPNUZ/(<#$](O`Hr`?2;K/[@$p)1p>.:H&)=t
%hfmuM3==X2[:W7qWVbh\Jp"q#X,.`GcHu6X]doh[G=='+UoCtNh:[t:l@M6n"J3!@VJ@5@=GQ/dKc`PQTkkeJH@;]_&?/`33`Q;)
%RnHB\72b?Di.,l2daA%l@#4;=9)J@bCF74_p3ocVn([rR$+V$_ffte94-2Nr#9!77^hWX=r;jQ5K5I!RrILC1T_"Y@ljp<b^i@^a
%'0`ld"Pk*B'X9J!CC2poD8T%*VLb`STEEi#VduQ!V0c'q31<B&@09=@AKXl:rC]WMgS;-c.1-GA?ilIj?i_u24=R+HmnRSk'sm(d
%5:0WWZ%!=n?qR_pm=bMV>G<LMWL$Z9fK_+qGLSrdXVMDkK(8q/],00$Y2Bg&(2)[X>gkt5ksjo-9?O;1ZGZ-(*9QORqojJK"5i_n
%45gbOfROpOj4pZCS-oWCgsZ4o=Qlg(_V9&?dqmD?CVQ9YbW4h@(W8?+7Q($M4+D-H4U0uUCf+ZcSd&A,>Ua-_Y9n!Xi7'feLMGj0
%?<u*\W?d1M6Bb?Q]kq__/`nO+=4>7@ASmA7jE"R/Cj[UISD227N@R(7pT=*<9R!?qB.k=)>_U%Npp$&s`!rOunQDiRJUEV6HQ20T
%iQF"?(j$1t5:#I^<4,BN*o/.VY8(TlLgi0OO\C.%C8?uO(/h'(g:EAIQhRROH[B2\Q<%n/`sQ,47+DZF[hSIg>3N$:_P)Vd4>#[N
%>k)rmpoa,I-4:L9\`o!U$kQgn1[$i+nGr@lV/WMiCFPV7RT)s4UkkQ8`3`g_gr2Z_4H"5,7SF08`pDW.O(Upf6Z+m!oMq,S=@j`m
%/P-e#N&eo5Rpp8:Fl8c)3p9DQ7rV9tk6UC-OiA"+6<.Sp3BhV[(A]MgE2[tKp7UGNGG>_/(XB`K;rd#FUb`%a;I4Sh`6?0[#lZHp
%g\(=r(sVmm?WC)t#m`KWP?1WbB.0T;34h[d;[<`E/a`l`+B/M:m.a[_b0k$uYF\/7LrE^eRG%**B#:/)=>FHUZKtXVNaI&VO7>39
%[Wlt,@p0+d%m4LBi@nm0gmWDojZ!cG:!1`22YGLuGrn6_4eNSeC:/$%EL)u5*QIdN4oW!nke5-KGf2I\S[n_2>UMWXg\c_<A:pJP
%A2g,_kc<l_n__DJ/luW01$=pF)s8mo@"R;5F.6?Vo4-`aK^X_CW)Co@$P!%9c<.h*jearmj40DX8'7=i*7,(8Ml+2Z&/FuXC?L@M
%[JHuS6=2mpPE!uoZu\H-G*L3q<=p$/YmbhO!T+(K\$r?8/0\COTc*AdM+ZDo/G.JV$<;"Sgag%i;]3Uc/2N;(pE5Cs/d:A2IU#m0
%Y8T`0>,Md.b.)2;W\KAJSK4`[CV7BeB0Fn:Dgb^:TQ#Xl6RmkY]/&GF/qYTc'sXfb"DV[Wl=[LoE+99M#RL0Rl(tAE(BHo!NtIt@
%eB9k,/'A0;mgM=?n3V?CXbhuG>$*rS'\D#ZRqj3XgsBZ>l%V3fEA8=uT:sTX56Ur_;,m-#0a`uG$.[)S'2J&eQ$""Sf7Gq*7I;Sj
%U;tqO6"-4TU<]IMlN;ML]WS2K9qMHu38Cq!2\(!;4mKS<=jsU-VkHTs^oV%sEJF2S1:0XMPgk)7JX6T8GCKG9o?MBaIWEV*+(1)t
%`aelqCn(g(B$dmc\k,8sOMKJti4PXcC/Cc>FhkRoA\cHj+=/@^@rk(.$L<4R<:a.(BjYQ0q"kgp2#aludMpeZ]A_nql@LB3N-%Gl
%bm8/Ce\95a]#f4P/#sGjgK1XMIaih/Pt9%\,HmHH1IC.9Rm\+g`@uRK?10R6.>&X1?.qNB.OU5'drLGKM69AX**TVro'#8R'=^s#
%eQbZgn#>l8rE`N@N_YUTc:\ah*m'F`X1[It"8'i+=0)V_OE4;+CPI94R<-S4k1l<A3Ul!]8XT5.ied$cKD2=@ejR7=A9]W8pj(B1
%5d!QdotmulhPM+YeMq]sT>&:c"i1U/L>=qH*I(rJq^^=$nd]j$^]gXQSn]L\)L4^&JS1nBABt!WYiB/7$p04"K>=YP?iaf\7'j\s
%.Y4,['qFbKcP'XHXCVB3mCVIa(V'QS[BReJ*dH)HDm(<L4;sJkJEqnj?B=4@7P=Z:HT'F=0jP3r?<N\)@h:g7/kp:J0dqF<2ShOD
%oNfED'r,ie/JFW>lh`.dE9&E=n4Ip=TC84I8,^8%V;]bR)jRa"Tm<Q!<t4#cI%XK7D#YC9Z'rQgX<XIFn5XF'(+7Pna^c@>3gb9P
%SNhnC20<*nX3s=W0+nb)Xm2`_@4a:D*-rqIqJ*EWM!G(HG!0rOpESELp+RD^DRg-/'E-`!S`>6:nE()<b+`IuUpVf8WdNLA&i0lo
%"km(]7c"\u%\"\;3j9#R"s&?a%h#rgG8n<n>VU(-H57/@+NhuoKs.>n>]!hb(q3X]aX?WR*);2)aP0-gH<9fVVW-`"2`MlsKDrlM
%29q(ila7ESPcE8BV&&pm3Gtp";+UT$al[r^Z!=EHM!+-C"!IToi4ni]EFgZK)DAI[/#!t-"8Np<p.!]ja-C5g1$fa#mh'`g$]QrY
%)h40P`-!pIa.Oq=;HqRd-?]@ti;R%Or`,i@CZj]KF_MB[H<3o"qucq8"5!o><&g^"Ot!<(X`n`lY)4#F7N[>nb:/'Y?m$*r7nP]A
%[K2A%Fr(YF5#5:LhM"%nj#_1p1%dPbnO>+fQ'YP(JAWNZ^PJnBYhGNnL&EEJ`$)u:W-[sE8([Ko:?>4DRl(\l;<@;"F`;Iu.B6_n
%4l;O5)h<j3^=q4!``aZr-(=/u*kb97.QuP`4lGonLUDB=+g?UDW+FK8&[fb3%DJ0#H[Ji;[eSQBGl^pQdT95^<t%qC*G1K<N%`0e
%j6MbaYLQQFi4YOo+3\6H`8n*=[`T&\2B.(P1%FQ1KI)UQh=.5h+bZPA3qVg,@E^E;f]+]&M+<hn!/5f@5_=Uj?^QL@$7,nN5s(!.
%N#j@i8cVg#9ed3uNK?:,PnQV9^Sg!>?Wn=p\tG?Dj4)4B-YAAuF74j:$EW4%+snIsO@a[eDsj^&*:=<K+QF1Dh*RVp$]3_*O4Y?7
%Vnl1;\A?:YM)W8t!kj?[)juE(_AcUUGj"s`&p#'m'ndn&pS,>j=OgVTNR66FiA#uh@<(n.&]P)dKRN(j>EX%C53LmNK>HJ&!NGd^
%"%7'N6<>C;n[.)AO1;eFmm4/jOn/JQ,E*kqpOf]VEcV@`e=!'CUs9t1WRF>\%-3UW\T\-Bp>m-E%)R4QR^4c+R)^ng.(!_4c45P-
%DjX&]N:bS,W574DpXlD%\<^:=EUEX4@2DoI@IVB/\*s`5<Gt\k6<bOc`t7A:5g_@((h&B-0-4OWT+G3>FA3;rb6S'F]dL5O5CWCm
%gHFfb91U2Z]RnFNU@fqq[EY<.m_u$:L$j?8(XgHjp,^A_\7JJ2\esq7EKTgrUq'PffI\mA<9=V!QM5ne(HF:Q3VIo/YQhm3*7o#0
%d+'dE*gSRb<r2)qn4G[Y0##\:Saj\o@XNS9q!.8=QH]qV>Fr!XQrT]/WkU2LfL7t<.U*1hXlCX<N%`0ej/[NgIi%E/kPMlV.fDa7
%r>#EhNq[<6>]M(/0YA6/%'M;h?G"3R9-VV,/%int=!>+pRNI)MjIcZEEU$,@.H+ct'?m!K<7hJ>P/8U8EIt_:(4c,"1CI/9#(&UD
%D]"1VAR-2?'<Dg1C8,%5RNIIrV)q^80p&Ao"8#>d#(\#BVr2Eo(!c[=96>'+pN-L*-9)[/GA81t"!UQ\XYc7TLC?#PEu6<8fj+uu
%.Q;%A7KtV*EhqVS6n=M9$hBOuBjIX^j(@F.o9afa`4RnlZWFHKG?SX_W4Bu$2'_n:g4liPj$4q\%Rp3^MOIf!_pi434q]_K$a-%X
%,32uoMbRc&(3nVEZc\Mn`5k2-%@\F1'pC3bDSkOX&L:;=WB!>j4'"[gL@eKqlqo@P:+"q2g9YZq>G_i8f]2'Je1$O@lm=WcN`!iq
%A(9nh_fJ/,#.q$Gihr@![`C\)\ICq59&>lRfQVVqEpMoV5rimHP>-@qPMJ.Pg72uk4gubFX-%s\dOnLX?K+r(ane`gL>oUnP7,$H
%<,Q(32#T8le<"GDIB!2uefi[+,@iQno2$9I$p01a_lac1=r[k3GHC-!PE0q<(E7eq/CF^+UYHDO9KFL@PE&6/Ce=\h":trV?"Jt7
%/W02iq9O2K#,5[qa6lMF>dS*',(3HJ>%A$?>Rkna(FC^/d#RLGn4Qda9jai@YOI`ZV"d&$/,Q+aSopjq;aT3s7"Qa+C8+NgE^#`H
%a8+)o^b:0O<Jn-PULj(aDaF9_?ef#gr:AeuTDn<N0-<E1nFaPEqVh$qr:9*ei;u2jou!u*rqH$5Vk8H.CS1V-J+`HO0;!amT>1Es
%q<?N2qYP30i/>#[I/W`1s7N!KI.dNa+`Cl~>
%AI9_PrivateDataEnd
